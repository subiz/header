// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.31.0
// source: request.proto

package header

import (
	account "github.com/subiz/header/account"
	common "github.com/subiz/header/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ReportCampaignRequest_Range int32

const (
	ReportCampaignRequest_hour ReportCampaignRequest_Range = 0 // default
	ReportCampaignRequest_day  ReportCampaignRequest_Range = 1
)

// Enum value maps for ReportCampaignRequest_Range.
var (
	ReportCampaignRequest_Range_name = map[int32]string{
		0: "hour",
		1: "day",
	}
	ReportCampaignRequest_Range_value = map[string]int32{
		"hour": 0,
		"day":  1,
	}
)

func (x ReportCampaignRequest_Range) Enum() *ReportCampaignRequest_Range {
	p := new(ReportCampaignRequest_Range)
	*p = x
	return p
}

func (x ReportCampaignRequest_Range) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ReportCampaignRequest_Range) Descriptor() protoreflect.EnumDescriptor {
	return file_request_proto_enumTypes[0].Descriptor()
}

func (ReportCampaignRequest_Range) Type() protoreflect.EnumType {
	return &file_request_proto_enumTypes[0]
}

func (x ReportCampaignRequest_Range) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ReportCampaignRequest_Range.Descriptor instead.
func (ReportCampaignRequest_Range) EnumDescriptor() ([]byte, []int) {
	return file_request_proto_rawDescGZIP(), []int{23, 0}
}

type ReportWebPluginRequest_Range int32

const (
	ReportWebPluginRequest_hour ReportWebPluginRequest_Range = 0 // default
	ReportWebPluginRequest_day  ReportWebPluginRequest_Range = 1
)

// Enum value maps for ReportWebPluginRequest_Range.
var (
	ReportWebPluginRequest_Range_name = map[int32]string{
		0: "hour",
		1: "day",
	}
	ReportWebPluginRequest_Range_value = map[string]int32{
		"hour": 0,
		"day":  1,
	}
)

func (x ReportWebPluginRequest_Range) Enum() *ReportWebPluginRequest_Range {
	p := new(ReportWebPluginRequest_Range)
	*p = x
	return p
}

func (x ReportWebPluginRequest_Range) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ReportWebPluginRequest_Range) Descriptor() protoreflect.EnumDescriptor {
	return file_request_proto_enumTypes[1].Descriptor()
}

func (ReportWebPluginRequest_Range) Type() protoreflect.EnumType {
	return &file_request_proto_enumTypes[1]
}

func (x ReportWebPluginRequest_Range) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ReportWebPluginRequest_Range.Descriptor instead.
func (ReportWebPluginRequest_Range) EnumDescriptor() ([]byte, []int) {
	return file_request_proto_rawDescGZIP(), []int{24, 0}
}

type AvailibilityReportRequest_Range int32

const (
	AvailibilityReportRequest_hour  AvailibilityReportRequest_Range = 0
	AvailibilityReportRequest_day   AvailibilityReportRequest_Range = 1
	AvailibilityReportRequest_month AvailibilityReportRequest_Range = 2
)

// Enum value maps for AvailibilityReportRequest_Range.
var (
	AvailibilityReportRequest_Range_name = map[int32]string{
		0: "hour",
		1: "day",
		2: "month",
	}
	AvailibilityReportRequest_Range_value = map[string]int32{
		"hour":  0,
		"day":   1,
		"month": 2,
	}
)

func (x AvailibilityReportRequest_Range) Enum() *AvailibilityReportRequest_Range {
	p := new(AvailibilityReportRequest_Range)
	*p = x
	return p
}

func (x AvailibilityReportRequest_Range) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AvailibilityReportRequest_Range) Descriptor() protoreflect.EnumDescriptor {
	return file_request_proto_enumTypes[2].Descriptor()
}

func (AvailibilityReportRequest_Range) Type() protoreflect.EnumType {
	return &file_request_proto_enumTypes[2]
}

func (x AvailibilityReportRequest_Range) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AvailibilityReportRequest_Range.Descriptor instead.
func (AvailibilityReportRequest_Range) EnumDescriptor() ([]byte, []int) {
	return file_request_proto_rawDescGZIP(), []int{30, 0}
}

type TagRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Ctx            *common.Context        `protobuf:"bytes,1,opt,name=ctx,proto3" json:"ctx,omitempty"`
	AccountId      string                 `protobuf:"bytes,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	ConversationId string                 `protobuf:"bytes,3,opt,name=conversation_id,json=conversationId,proto3" json:"conversation_id,omitempty"`
	Id             string                 `protobuf:"bytes,4,opt,name=id,proto3" json:"id,omitempty"`
	OrderId        string                 `protobuf:"bytes,5,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	TicketId       string                 `protobuf:"bytes,6,opt,name=ticket_id,json=ticketId,proto3" json:"ticket_id,omitempty"`             // tkasdlfjasdf
	TicketNumber   string                 `protobuf:"bytes,7,opt,name=ticket_number,json=ticketNumber,proto3" json:"ticket_number,omitempty"` // SBZ-1234
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *TagRequest) Reset() {
	*x = TagRequest{}
	mi := &file_request_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TagRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TagRequest) ProtoMessage() {}

func (x *TagRequest) ProtoReflect() protoreflect.Message {
	mi := &file_request_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TagRequest.ProtoReflect.Descriptor instead.
func (*TagRequest) Descriptor() ([]byte, []int) {
	return file_request_proto_rawDescGZIP(), []int{0}
}

func (x *TagRequest) GetCtx() *common.Context {
	if x != nil {
		return x.Ctx
	}
	return nil
}

func (x *TagRequest) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *TagRequest) GetConversationId() string {
	if x != nil {
		return x.ConversationId
	}
	return ""
}

func (x *TagRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TagRequest) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *TagRequest) GetTicketId() string {
	if x != nil {
		return x.TicketId
	}
	return ""
}

func (x *TagRequest) GetTicketNumber() string {
	if x != nil {
		return x.TicketNumber
	}
	return ""
}

type UserReportRequest struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	Ctx       *common.Context        `protobuf:"bytes,1,opt,name=ctx,proto3" json:"ctx,omitempty"`
	AccountId string                 `protobuf:"bytes,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	// string credit_id = 3;
	FromTime      int64    `protobuf:"varint,4,opt,name=from_time,json=fromTime,proto3" json:"from_time,omitempty"` // ms
	Unit          string   `protobuf:"bytes,5,opt,name=unit,proto3" json:"unit,omitempty"`                          // hour, day, month
	Limit         int64    `protobuf:"varint,8,opt,name=limit,proto3" json:"limit,omitempty"`                       // default: 24, 30, 24
	Metrics       []string `protobuf:"bytes,9,rep,name=metrics,proto3" json:"metrics,omitempty"`                    // category.cactegory_id all.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserReportRequest) Reset() {
	*x = UserReportRequest{}
	mi := &file_request_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserReportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserReportRequest) ProtoMessage() {}

func (x *UserReportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_request_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserReportRequest.ProtoReflect.Descriptor instead.
func (*UserReportRequest) Descriptor() ([]byte, []int) {
	return file_request_proto_rawDescGZIP(), []int{1}
}

func (x *UserReportRequest) GetCtx() *common.Context {
	if x != nil {
		return x.Ctx
	}
	return nil
}

func (x *UserReportRequest) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *UserReportRequest) GetFromTime() int64 {
	if x != nil {
		return x.FromTime
	}
	return 0
}

func (x *UserReportRequest) GetUnit() string {
	if x != nil {
		return x.Unit
	}
	return ""
}

func (x *UserReportRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *UserReportRequest) GetMetrics() []string {
	if x != nil {
		return x.Metrics
	}
	return nil
}

type ConversationMetricsRequest struct {
	state                   protoimpl.MessageState `protogen:"open.v1"`
	AccountId               string                 `protobuf:"bytes,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	CreatedHourFrom         int64                  `protobuf:"varint,3,opt,name=created_hour_from,json=createdHourFrom,proto3" json:"created_hour_from,omitempty"`
	CreatedHourTo           int64                  `protobuf:"varint,4,opt,name=created_hour_to,json=createdHourTo,proto3" json:"created_hour_to,omitempty"`
	LatestSentHourFrom      int64                  `protobuf:"varint,16,opt,name=latest_sent_hour_from,json=latestSentHourFrom,proto3" json:"latest_sent_hour_from,omitempty"`
	LatestSentHourTo        int64                  `protobuf:"varint,17,opt,name=latest_sent_hour_to,json=latestSentHourTo,proto3" json:"latest_sent_hour_to,omitempty"`
	Channels                []string               `protobuf:"bytes,5,rep,name=channels,proto3" json:"channels,omitempty"`
	ChannelTouchpoints      []string               `protobuf:"bytes,6,rep,name=channel_touchpoints,json=channelTouchpoints,proto3" json:"channel_touchpoints,omitempty"`
	Ratings                 []int32                `protobuf:"varint,8,rep,packed,name=ratings,proto3" json:"ratings,omitempty"`
	Tags                    []string               `protobuf:"bytes,7,rep,name=tags,proto3" json:"tags,omitempty"`                                        // and
	AgentIds                []string               `protobuf:"bytes,9,rep,name=agent_ids,json=agentIds,proto3" json:"agent_ids,omitempty"`                // and
	AgentSentIds            []string               `protobuf:"bytes,14,rep,name=agent_sent_ids,json=agentSentIds,proto3" json:"agent_sent_ids,omitempty"` // and
	FirstRepliedDurationGt  int64                  `protobuf:"varint,15,opt,name=first_replied_duration_gt,json=firstRepliedDurationGt,proto3" json:"first_replied_duration_gt,omitempty"`
	SendDurationSumGt       int64                  `protobuf:"varint,21,opt,name=send_duration_sum_gt,json=sendDurationSumGt,proto3" json:"send_duration_sum_gt,omitempty"`
	FirstRepliedDurationLte int64                  `protobuf:"varint,22,opt,name=first_replied_duration_lte,json=firstRepliedDurationLte,proto3" json:"first_replied_duration_lte,omitempty"`
	FirstRepliedDurationOf  string                 `protobuf:"bytes,23,opt,name=first_replied_duration_of,json=firstRepliedDurationOf,proto3" json:"first_replied_duration_of,omitempty"`
	NotChannels             []string               `protobuf:"bytes,18,rep,name=not_channels,json=notChannels,proto3" json:"not_channels,omitempty"`
	BusinessHours           *account.BusinessHours `protobuf:"bytes,19,opt,name=business_hours,json=businessHours,proto3" json:"business_hours,omitempty"`
	NotBusinessHours        *account.BusinessHours `protobuf:"bytes,20,opt,name=not_business_hours,json=notBusinessHours,proto3" json:"not_business_hours,omitempty"`
	Tz                      int32                  `protobuf:"varint,10,opt,name=tz,proto3" json:"tz,omitempty"`
	Dim                     string                 `protobuf:"bytes,11,opt,name=dim,proto3" json:"dim,omitempty"`
	Anchor                  string                 `protobuf:"bytes,12,opt,name=anchor,proto3" json:"anchor,omitempty"`
	Limit                   int32                  `protobuf:"varint,13,opt,name=limit,proto3" json:"limit,omitempty"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *ConversationMetricsRequest) Reset() {
	*x = ConversationMetricsRequest{}
	mi := &file_request_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConversationMetricsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConversationMetricsRequest) ProtoMessage() {}

func (x *ConversationMetricsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_request_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConversationMetricsRequest.ProtoReflect.Descriptor instead.
func (*ConversationMetricsRequest) Descriptor() ([]byte, []int) {
	return file_request_proto_rawDescGZIP(), []int{2}
}

func (x *ConversationMetricsRequest) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *ConversationMetricsRequest) GetCreatedHourFrom() int64 {
	if x != nil {
		return x.CreatedHourFrom
	}
	return 0
}

func (x *ConversationMetricsRequest) GetCreatedHourTo() int64 {
	if x != nil {
		return x.CreatedHourTo
	}
	return 0
}

func (x *ConversationMetricsRequest) GetLatestSentHourFrom() int64 {
	if x != nil {
		return x.LatestSentHourFrom
	}
	return 0
}

func (x *ConversationMetricsRequest) GetLatestSentHourTo() int64 {
	if x != nil {
		return x.LatestSentHourTo
	}
	return 0
}

func (x *ConversationMetricsRequest) GetChannels() []string {
	if x != nil {
		return x.Channels
	}
	return nil
}

func (x *ConversationMetricsRequest) GetChannelTouchpoints() []string {
	if x != nil {
		return x.ChannelTouchpoints
	}
	return nil
}

func (x *ConversationMetricsRequest) GetRatings() []int32 {
	if x != nil {
		return x.Ratings
	}
	return nil
}

func (x *ConversationMetricsRequest) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *ConversationMetricsRequest) GetAgentIds() []string {
	if x != nil {
		return x.AgentIds
	}
	return nil
}

func (x *ConversationMetricsRequest) GetAgentSentIds() []string {
	if x != nil {
		return x.AgentSentIds
	}
	return nil
}

func (x *ConversationMetricsRequest) GetFirstRepliedDurationGt() int64 {
	if x != nil {
		return x.FirstRepliedDurationGt
	}
	return 0
}

func (x *ConversationMetricsRequest) GetSendDurationSumGt() int64 {
	if x != nil {
		return x.SendDurationSumGt
	}
	return 0
}

func (x *ConversationMetricsRequest) GetFirstRepliedDurationLte() int64 {
	if x != nil {
		return x.FirstRepliedDurationLte
	}
	return 0
}

func (x *ConversationMetricsRequest) GetFirstRepliedDurationOf() string {
	if x != nil {
		return x.FirstRepliedDurationOf
	}
	return ""
}

func (x *ConversationMetricsRequest) GetNotChannels() []string {
	if x != nil {
		return x.NotChannels
	}
	return nil
}

func (x *ConversationMetricsRequest) GetBusinessHours() *account.BusinessHours {
	if x != nil {
		return x.BusinessHours
	}
	return nil
}

func (x *ConversationMetricsRequest) GetNotBusinessHours() *account.BusinessHours {
	if x != nil {
		return x.NotBusinessHours
	}
	return nil
}

func (x *ConversationMetricsRequest) GetTz() int32 {
	if x != nil {
		return x.Tz
	}
	return 0
}

func (x *ConversationMetricsRequest) GetDim() string {
	if x != nil {
		return x.Dim
	}
	return ""
}

func (x *ConversationMetricsRequest) GetAnchor() string {
	if x != nil {
		return x.Anchor
	}
	return ""
}

func (x *ConversationMetricsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type AgentMetricsRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	AccountId        string                 `protobuf:"bytes,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	CreatedHourFrom  int64                  `protobuf:"varint,3,opt,name=created_hour_from,json=createdHourFrom,proto3" json:"created_hour_from,omitempty"`
	CreatedHourTo    int64                  `protobuf:"varint,4,opt,name=created_hour_to,json=createdHourTo,proto3" json:"created_hour_to,omitempty"`
	AgentIds         []string               `protobuf:"bytes,5,rep,name=agent_ids,json=agentIds,proto3" json:"agent_ids,omitempty"`
	Channels         []string               `protobuf:"bytes,6,rep,name=channels,proto3" json:"channels,omitempty"`
	NotChannels      []string               `protobuf:"bytes,7,rep,name=not_channels,json=notChannels,proto3" json:"not_channels,omitempty"`
	BusinessHours    *account.BusinessHours `protobuf:"bytes,8,opt,name=business_hours,json=businessHours,proto3" json:"business_hours,omitempty"`
	NotBusinessHours *account.BusinessHours `protobuf:"bytes,9,opt,name=not_business_hours,json=notBusinessHours,proto3" json:"not_business_hours,omitempty"`
	Tz               int32                  `protobuf:"varint,10,opt,name=tz,proto3" json:"tz,omitempty"`
	Dim              string                 `protobuf:"bytes,11,opt,name=dim,proto3" json:"dim,omitempty"`
	Tags             []string               `protobuf:"bytes,12,rep,name=tags,proto3" json:"tags,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *AgentMetricsRequest) Reset() {
	*x = AgentMetricsRequest{}
	mi := &file_request_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AgentMetricsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentMetricsRequest) ProtoMessage() {}

func (x *AgentMetricsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_request_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentMetricsRequest.ProtoReflect.Descriptor instead.
func (*AgentMetricsRequest) Descriptor() ([]byte, []int) {
	return file_request_proto_rawDescGZIP(), []int{3}
}

func (x *AgentMetricsRequest) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *AgentMetricsRequest) GetCreatedHourFrom() int64 {
	if x != nil {
		return x.CreatedHourFrom
	}
	return 0
}

func (x *AgentMetricsRequest) GetCreatedHourTo() int64 {
	if x != nil {
		return x.CreatedHourTo
	}
	return 0
}

func (x *AgentMetricsRequest) GetAgentIds() []string {
	if x != nil {
		return x.AgentIds
	}
	return nil
}

func (x *AgentMetricsRequest) GetChannels() []string {
	if x != nil {
		return x.Channels
	}
	return nil
}

func (x *AgentMetricsRequest) GetNotChannels() []string {
	if x != nil {
		return x.NotChannels
	}
	return nil
}

func (x *AgentMetricsRequest) GetBusinessHours() *account.BusinessHours {
	if x != nil {
		return x.BusinessHours
	}
	return nil
}

func (x *AgentMetricsRequest) GetNotBusinessHours() *account.BusinessHours {
	if x != nil {
		return x.NotBusinessHours
	}
	return nil
}

func (x *AgentMetricsRequest) GetTz() int32 {
	if x != nil {
		return x.Tz
	}
	return 0
}

func (x *AgentMetricsRequest) GetDim() string {
	if x != nil {
		return x.Dim
	}
	return ""
}

func (x *AgentMetricsRequest) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

type CallMetricsRequest struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	AccountId         string                 `protobuf:"bytes,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	CreatedHourFrom   int64                  `protobuf:"varint,3,opt,name=created_hour_from,json=createdHourFrom,proto3" json:"created_hour_from,omitempty"`
	CreatedHourTo     int64                  `protobuf:"varint,4,opt,name=created_hour_to,json=createdHourTo,proto3" json:"created_hour_to,omitempty"`
	AgentIds          []string               `protobuf:"bytes,5,rep,name=agent_ids,json=agentIds,proto3" json:"agent_ids,omitempty"`
	Phones            []string               `protobuf:"bytes,6,rep,name=phones,proto3" json:"phones,omitempty"`
	Direction         string                 `protobuf:"bytes,7,opt,name=direction,proto3" json:"direction,omitempty"`
	Tags              []string               `protobuf:"bytes,8,rep,name=tags,proto3" json:"tags,omitempty"`
	BusinessHours     *account.BusinessHours `protobuf:"bytes,11,opt,name=business_hours,json=businessHours,proto3" json:"business_hours,omitempty"`
	NotBusinessHours  *account.BusinessHours `protobuf:"bytes,12,opt,name=not_business_hours,json=notBusinessHours,proto3" json:"not_business_hours,omitempty"`
	Tz                int32                  `protobuf:"varint,9,opt,name=tz,proto3" json:"tz,omitempty"`
	Dim               string                 `protobuf:"bytes,10,opt,name=dim,proto3" json:"dim,omitempty"`
	CallDurationSumGt int64                  `protobuf:"varint,15,opt,name=call_duration_sum_gt,json=callDurationSumGt,proto3" json:"call_duration_sum_gt,omitempty"`
	Anchor            string                 `protobuf:"bytes,13,opt,name=anchor,proto3" json:"anchor,omitempty"`
	Limit             int32                  `protobuf:"varint,14,opt,name=limit,proto3" json:"limit,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *CallMetricsRequest) Reset() {
	*x = CallMetricsRequest{}
	mi := &file_request_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CallMetricsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CallMetricsRequest) ProtoMessage() {}

func (x *CallMetricsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_request_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CallMetricsRequest.ProtoReflect.Descriptor instead.
func (*CallMetricsRequest) Descriptor() ([]byte, []int) {
	return file_request_proto_rawDescGZIP(), []int{4}
}

func (x *CallMetricsRequest) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *CallMetricsRequest) GetCreatedHourFrom() int64 {
	if x != nil {
		return x.CreatedHourFrom
	}
	return 0
}

func (x *CallMetricsRequest) GetCreatedHourTo() int64 {
	if x != nil {
		return x.CreatedHourTo
	}
	return 0
}

func (x *CallMetricsRequest) GetAgentIds() []string {
	if x != nil {
		return x.AgentIds
	}
	return nil
}

func (x *CallMetricsRequest) GetPhones() []string {
	if x != nil {
		return x.Phones
	}
	return nil
}

func (x *CallMetricsRequest) GetDirection() string {
	if x != nil {
		return x.Direction
	}
	return ""
}

func (x *CallMetricsRequest) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *CallMetricsRequest) GetBusinessHours() *account.BusinessHours {
	if x != nil {
		return x.BusinessHours
	}
	return nil
}

func (x *CallMetricsRequest) GetNotBusinessHours() *account.BusinessHours {
	if x != nil {
		return x.NotBusinessHours
	}
	return nil
}

func (x *CallMetricsRequest) GetTz() int32 {
	if x != nil {
		return x.Tz
	}
	return 0
}

func (x *CallMetricsRequest) GetDim() string {
	if x != nil {
		return x.Dim
	}
	return ""
}

func (x *CallMetricsRequest) GetCallDurationSumGt() int64 {
	if x != nil {
		return x.CallDurationSumGt
	}
	return 0
}

func (x *CallMetricsRequest) GetAnchor() string {
	if x != nil {
		return x.Anchor
	}
	return ""
}

func (x *CallMetricsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type ListUserEventsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ctx           *common.Context        `protobuf:"bytes,1,opt,name=ctx,proto3" json:"ctx,omitempty"`
	AccountId     string                 `protobuf:"bytes,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	UserId        string                 `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // could be empty, but type must set
	Query         string                 `protobuf:"bytes,4,opt,name=query,proto3" json:"query,omitempty"`
	Anchor        string                 `protobuf:"bytes,5,opt,name=anchor,proto3" json:"anchor,omitempty"`
	Limit         int32                  `protobuf:"varint,6,opt,name=limit,proto3" json:"limit,omitempty"` // hour
	Category      string                 `protobuf:"bytes,9,opt,name=category,proto3" json:"category,omitempty"`
	LimitHour     int32                  `protobuf:"varint,10,opt,name=limit_hour,json=limitHour,proto3" json:"limit_hour,omitempty"`
	EndHour       int64                  `protobuf:"varint,11,opt,name=end_hour,json=endHour,proto3" json:"end_hour,omitempty"`
	Type          string                 `protobuf:"bytes,12,opt,name=type,proto3" json:"type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListUserEventsRequest) Reset() {
	*x = ListUserEventsRequest{}
	mi := &file_request_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListUserEventsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUserEventsRequest) ProtoMessage() {}

func (x *ListUserEventsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_request_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUserEventsRequest.ProtoReflect.Descriptor instead.
func (*ListUserEventsRequest) Descriptor() ([]byte, []int) {
	return file_request_proto_rawDescGZIP(), []int{5}
}

func (x *ListUserEventsRequest) GetCtx() *common.Context {
	if x != nil {
		return x.Ctx
	}
	return nil
}

func (x *ListUserEventsRequest) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *ListUserEventsRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ListUserEventsRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *ListUserEventsRequest) GetAnchor() string {
	if x != nil {
		return x.Anchor
	}
	return ""
}

func (x *ListUserEventsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListUserEventsRequest) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *ListUserEventsRequest) GetLimitHour() int32 {
	if x != nil {
		return x.LimitHour
	}
	return 0
}

func (x *ListUserEventsRequest) GetEndHour() int64 {
	if x != nil {
		return x.EndHour
	}
	return 0
}

func (x *ListUserEventsRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type ListEventTypeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ctx           *common.Context        `protobuf:"bytes,1,opt,name=ctx,proto3" json:"ctx,omitempty"`
	AccountId     string                 `protobuf:"bytes,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	FromHour      int64                  `protobuf:"varint,3,opt,name=from_hour,json=fromHour,proto3" json:"from_hour,omitempty"`
	ToHour        int64                  `protobuf:"varint,4,opt,name=to_hour,json=toHour,proto3" json:"to_hour,omitempty"`
	Category      string                 `protobuf:"bytes,5,opt,name=category,proto3" json:"category,omitempty"`
	Keyword       string                 `protobuf:"bytes,6,opt,name=keyword,proto3" json:"keyword,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListEventTypeRequest) Reset() {
	*x = ListEventTypeRequest{}
	mi := &file_request_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListEventTypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListEventTypeRequest) ProtoMessage() {}

func (x *ListEventTypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_request_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListEventTypeRequest.ProtoReflect.Descriptor instead.
func (*ListEventTypeRequest) Descriptor() ([]byte, []int) {
	return file_request_proto_rawDescGZIP(), []int{6}
}

func (x *ListEventTypeRequest) GetCtx() *common.Context {
	if x != nil {
		return x.Ctx
	}
	return nil
}

func (x *ListEventTypeRequest) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *ListEventTypeRequest) GetFromHour() int64 {
	if x != nil {
		return x.FromHour
	}
	return 0
}

func (x *ListEventTypeRequest) GetToHour() int64 {
	if x != nil {
		return x.ToHour
	}
	return 0
}

func (x *ListEventTypeRequest) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *ListEventTypeRequest) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

type PresencesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ctx           *common.Context        `protobuf:"bytes,1,opt,name=ctx,proto3" json:"ctx,omitempty"`
	UserIds       []string               `protobuf:"bytes,2,rep,name=user_ids,json=userIds,proto3" json:"user_ids,omitempty"`
	AccountId     string                 `protobuf:"bytes,3,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PresencesRequest) Reset() {
	*x = PresencesRequest{}
	mi := &file_request_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PresencesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PresencesRequest) ProtoMessage() {}

func (x *PresencesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_request_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PresencesRequest.ProtoReflect.Descriptor instead.
func (*PresencesRequest) Descriptor() ([]byte, []int) {
	return file_request_proto_rawDescGZIP(), []int{7}
}

func (x *PresencesRequest) GetCtx() *common.Context {
	if x != nil {
		return x.Ctx
	}
	return nil
}

func (x *PresencesRequest) GetUserIds() []string {
	if x != nil {
		return x.UserIds
	}
	return nil
}

func (x *PresencesRequest) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

type ListNotiRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ctx           *common.Context        `protobuf:"bytes,1,opt,name=ctx,proto3" json:"ctx,omitempty"`
	AccountId     string                 `protobuf:"bytes,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	AgentId       string                 `protobuf:"bytes,3,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`
	Limit         int32                  `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	Anchor        string                 `protobuf:"bytes,5,opt,name=anchor,proto3" json:"anchor,omitempty"`
	Category      string                 `protobuf:"bytes,6,opt,name=category,proto3" json:"category,omitempty"` // comma separated
	Read          string                 `protobuf:"bytes,7,opt,name=read,proto3" json:"read,omitempty"`         // empty=all,  unread
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListNotiRequest) Reset() {
	*x = ListNotiRequest{}
	mi := &file_request_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListNotiRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNotiRequest) ProtoMessage() {}

func (x *ListNotiRequest) ProtoReflect() protoreflect.Message {
	mi := &file_request_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNotiRequest.ProtoReflect.Descriptor instead.
func (*ListNotiRequest) Descriptor() ([]byte, []int) {
	return file_request_proto_rawDescGZIP(), []int{8}
}

func (x *ListNotiRequest) GetCtx() *common.Context {
	if x != nil {
		return x.Ctx
	}
	return nil
}

func (x *ListNotiRequest) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *ListNotiRequest) GetAgentId() string {
	if x != nil {
		return x.AgentId
	}
	return ""
}

func (x *ListNotiRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListNotiRequest) GetAnchor() string {
	if x != nil {
		return x.Anchor
	}
	return ""
}

func (x *ListNotiRequest) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *ListNotiRequest) GetRead() string {
	if x != nil {
		return x.Read
	}
	return ""
}

type UserRequest struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	Ctx                  *common.Context        `protobuf:"bytes,1,opt,name=ctx,proto3" json:"ctx,omitempty"`
	AccountId            string                 `protobuf:"bytes,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	UserId               string                 `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ObjectId             string                 `protobuf:"bytes,4,opt,name=object_id,json=objectId,proto3" json:"object_id,omitempty"`
	Channel              string                 `protobuf:"bytes,5,opt,name=channel,proto3" json:"channel,omitempty"`
	ChannelSource        string                 `protobuf:"bytes,6,opt,name=channel_source,json=channelSource,proto3" json:"channel_source,omitempty"`
	ProfileId            string                 `protobuf:"bytes,7,opt,name=profile_id,json=profileId,proto3" json:"profile_id,omitempty"`
	LabelSourceChannel   string                 `protobuf:"bytes,9,opt,name=label_source_channel,json=labelSourceChannel,proto3" json:"label_source_channel,omitempty"`
	LabelSourceChannelId string                 `protobuf:"bytes,10,opt,name=label_source_channel_id,json=labelSourceChannelId,proto3" json:"label_source_channel_id,omitempty"`
	LabelSourceId        string                 `protobuf:"bytes,11,opt,name=label_source_id,json=labelSourceId,proto3" json:"label_source_id,omitempty"`
	LabelName            string                 `protobuf:"bytes,12,opt,name=label_name,json=labelName,proto3" json:"label_name,omitempty"`
	SetAsPrimaryOwner    bool                   `protobuf:"varint,13,opt,name=set_as_primary_owner,json=setAsPrimaryOwner,proto3" json:"set_as_primary_owner,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *UserRequest) Reset() {
	*x = UserRequest{}
	mi := &file_request_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserRequest) ProtoMessage() {}

func (x *UserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_request_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserRequest.ProtoReflect.Descriptor instead.
func (*UserRequest) Descriptor() ([]byte, []int) {
	return file_request_proto_rawDescGZIP(), []int{9}
}

func (x *UserRequest) GetCtx() *common.Context {
	if x != nil {
		return x.Ctx
	}
	return nil
}

func (x *UserRequest) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *UserRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UserRequest) GetObjectId() string {
	if x != nil {
		return x.ObjectId
	}
	return ""
}

func (x *UserRequest) GetChannel() string {
	if x != nil {
		return x.Channel
	}
	return ""
}

func (x *UserRequest) GetChannelSource() string {
	if x != nil {
		return x.ChannelSource
	}
	return ""
}

func (x *UserRequest) GetProfileId() string {
	if x != nil {
		return x.ProfileId
	}
	return ""
}

func (x *UserRequest) GetLabelSourceChannel() string {
	if x != nil {
		return x.LabelSourceChannel
	}
	return ""
}

func (x *UserRequest) GetLabelSourceChannelId() string {
	if x != nil {
		return x.LabelSourceChannelId
	}
	return ""
}

func (x *UserRequest) GetLabelSourceId() string {
	if x != nil {
		return x.LabelSourceId
	}
	return ""
}

func (x *UserRequest) GetLabelName() string {
	if x != nil {
		return x.LabelName
	}
	return ""
}

func (x *UserRequest) GetSetAsPrimaryOwner() bool {
	if x != nil {
		return x.SetAsPrimaryOwner
	}
	return false
}

type ListNotesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ctx           *common.Context        `protobuf:"bytes,1,opt,name=ctx,proto3" json:"ctx,omitempty"`
	AccountId     string                 `protobuf:"bytes,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	UserId        string                 `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListNotesRequest) Reset() {
	*x = ListNotesRequest{}
	mi := &file_request_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListNotesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNotesRequest) ProtoMessage() {}

func (x *ListNotesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_request_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNotesRequest.ProtoReflect.Descriptor instead.
func (*ListNotesRequest) Descriptor() ([]byte, []int) {
	return file_request_proto_rawDescGZIP(), []int{10}
}

func (x *ListNotesRequest) GetCtx() *common.Context {
	if x != nil {
		return x.Ctx
	}
	return nil
}

func (x *ListNotesRequest) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *ListNotesRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type DeleteNoteRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AccountId     string                 `protobuf:"bytes,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	TargetId      string                 `protobuf:"bytes,3,opt,name=target_id,json=targetId,proto3" json:"target_id,omitempty"`
	Id            string                 `protobuf:"bytes,4,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteNoteRequest) Reset() {
	*x = DeleteNoteRequest{}
	mi := &file_request_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteNoteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteNoteRequest) ProtoMessage() {}

func (x *DeleteNoteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_request_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteNoteRequest.ProtoReflect.Descriptor instead.
func (*DeleteNoteRequest) Descriptor() ([]byte, []int) {
	return file_request_proto_rawDescGZIP(), []int{11}
}

func (x *DeleteNoteRequest) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *DeleteNoteRequest) GetTargetId() string {
	if x != nil {
		return x.TargetId
	}
	return ""
}

func (x *DeleteNoteRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type UpdateWorkflowSessionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ctx           *common.Context        `protobuf:"bytes,1,opt,name=ctx,proto3" json:"ctx,omitempty"`
	AccountId     string                 `protobuf:"bytes,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	WorkflowId    string                 `protobuf:"bytes,3,opt,name=workflow_id,json=workflowId,proto3" json:"workflow_id,omitempty"`
	SessionId     string                 `protobuf:"bytes,4,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	Command       string                 `protobuf:"bytes,5,opt,name=command,proto3" json:"command,omitempty"`                                 // pause, stop, retry, resume
	NextActionId  string                 `protobuf:"bytes,6,opt,name=next_action_id,json=nextActionId,proto3" json:"next_action_id,omitempty"` // only valid for command resume
	ThreadId      string                 `protobuf:"bytes,7,opt,name=thread_id,json=threadId,proto3" json:"thread_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateWorkflowSessionRequest) Reset() {
	*x = UpdateWorkflowSessionRequest{}
	mi := &file_request_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateWorkflowSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateWorkflowSessionRequest) ProtoMessage() {}

func (x *UpdateWorkflowSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_request_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateWorkflowSessionRequest.ProtoReflect.Descriptor instead.
func (*UpdateWorkflowSessionRequest) Descriptor() ([]byte, []int) {
	return file_request_proto_rawDescGZIP(), []int{12}
}

func (x *UpdateWorkflowSessionRequest) GetCtx() *common.Context {
	if x != nil {
		return x.Ctx
	}
	return nil
}

func (x *UpdateWorkflowSessionRequest) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *UpdateWorkflowSessionRequest) GetWorkflowId() string {
	if x != nil {
		return x.WorkflowId
	}
	return ""
}

func (x *UpdateWorkflowSessionRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *UpdateWorkflowSessionRequest) GetCommand() string {
	if x != nil {
		return x.Command
	}
	return ""
}

func (x *UpdateWorkflowSessionRequest) GetNextActionId() string {
	if x != nil {
		return x.NextActionId
	}
	return ""
}

func (x *UpdateWorkflowSessionRequest) GetThreadId() string {
	if x != nil {
		return x.ThreadId
	}
	return ""
}

type ListWorkflowLogRequest struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	Ctx                  *common.Context        `protobuf:"bytes,1,opt,name=ctx,proto3" json:"ctx,omitempty"`
	AccountId            string                 `protobuf:"bytes,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	WorkflowId           string                 `protobuf:"bytes,3,opt,name=workflow_id,json=workflowId,proto3" json:"workflow_id,omitempty"`
	SessionId            string                 `protobuf:"bytes,4,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	ObjectId             string                 `protobuf:"bytes,5,opt,name=object_id,json=objectId,proto3" json:"object_id,omitempty"`
	Limit                int64                  `protobuf:"varint,6,opt,name=limit,proto3" json:"limit,omitempty"`
	Anchor               string                 `protobuf:"bytes,7,opt,name=anchor,proto3" json:"anchor,omitempty"`
	IsIncludeInternalLog bool                   `protobuf:"varint,8,opt,name=is_include_internal_log,json=isIncludeInternalLog,proto3" json:"is_include_internal_log,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *ListWorkflowLogRequest) Reset() {
	*x = ListWorkflowLogRequest{}
	mi := &file_request_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListWorkflowLogRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWorkflowLogRequest) ProtoMessage() {}

func (x *ListWorkflowLogRequest) ProtoReflect() protoreflect.Message {
	mi := &file_request_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWorkflowLogRequest.ProtoReflect.Descriptor instead.
func (*ListWorkflowLogRequest) Descriptor() ([]byte, []int) {
	return file_request_proto_rawDescGZIP(), []int{13}
}

func (x *ListWorkflowLogRequest) GetCtx() *common.Context {
	if x != nil {
		return x.Ctx
	}
	return nil
}

func (x *ListWorkflowLogRequest) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *ListWorkflowLogRequest) GetWorkflowId() string {
	if x != nil {
		return x.WorkflowId
	}
	return ""
}

func (x *ListWorkflowLogRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *ListWorkflowLogRequest) GetObjectId() string {
	if x != nil {
		return x.ObjectId
	}
	return ""
}

func (x *ListWorkflowLogRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListWorkflowLogRequest) GetAnchor() string {
	if x != nil {
		return x.Anchor
	}
	return ""
}

func (x *ListWorkflowLogRequest) GetIsIncludeInternalLog() bool {
	if x != nil {
		return x.IsIncludeInternalLog
	}
	return false
}

type BotsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ctx           *common.Context        `protobuf:"bytes,1,opt,name=ctx,proto3" json:"ctx,omitempty"`
	Query         string                 `protobuf:"bytes,2,opt,name=query,proto3" json:"query,omitempty"` // (bot category: orders)
	Anchor        string                 `protobuf:"bytes,3,opt,name=anchor,proto3" json:"anchor,omitempty"`
	AccountId     string                 `protobuf:"bytes,4,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BotsRequest) Reset() {
	*x = BotsRequest{}
	mi := &file_request_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BotsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BotsRequest) ProtoMessage() {}

func (x *BotsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_request_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BotsRequest.ProtoReflect.Descriptor instead.
func (*BotsRequest) Descriptor() ([]byte, []int) {
	return file_request_proto_rawDescGZIP(), []int{14}
}

func (x *BotsRequest) GetCtx() *common.Context {
	if x != nil {
		return x.Ctx
	}
	return nil
}

func (x *BotsRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *BotsRequest) GetAnchor() string {
	if x != nil {
		return x.Anchor
	}
	return ""
}

func (x *BotsRequest) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

type ListAIAgentMessageRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Ctx             *common.Context        `protobuf:"bytes,1,opt,name=ctx,proto3" json:"ctx,omitempty"`
	AccountId       string                 `protobuf:"bytes,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	AgentId         string                 `protobuf:"bytes,3,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`
	FromMs          int64                  `protobuf:"varint,4,opt,name=from_ms,json=fromMs,proto3" json:"from_ms,omitempty"`
	ToMs            int64                  `protobuf:"varint,6,opt,name=to_ms,json=toMs,proto3" json:"to_ms,omitempty"`
	Anchor          string                 `protobuf:"bytes,5,opt,name=anchor,proto3" json:"anchor,omitempty"` // hour, day
	CountOnly       bool                   `protobuf:"varint,7,opt,name=count_only,json=countOnly,proto3" json:"count_only,omitempty"`
	Rating          string                 `protobuf:"bytes,8,opt,name=rating,proto3" json:"rating,omitempty"` // '' | thumb_up | thumb_down
	IsMissingSource bool                   `protobuf:"varint,10,opt,name=is_missing_source,json=isMissingSource,proto3" json:"is_missing_source,omitempty"`
	IsRefused       bool                   `protobuf:"varint,11,opt,name=is_refused,json=isRefused,proto3" json:"is_refused,omitempty"`
	Version         int64                  `protobuf:"varint,20,opt,name=version,proto3" json:"version,omitempty"`
	Channel         string                 `protobuf:"bytes,22,opt,name=channel,proto3" json:"channel,omitempty"`
	ChannelSource   string                 `protobuf:"bytes,23,opt,name=channel_source,json=channelSource,proto3" json:"channel_source,omitempty"`
	ChannelId       string                 `protobuf:"bytes,24,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ListAIAgentMessageRequest) Reset() {
	*x = ListAIAgentMessageRequest{}
	mi := &file_request_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAIAgentMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAIAgentMessageRequest) ProtoMessage() {}

func (x *ListAIAgentMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_request_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAIAgentMessageRequest.ProtoReflect.Descriptor instead.
func (*ListAIAgentMessageRequest) Descriptor() ([]byte, []int) {
	return file_request_proto_rawDescGZIP(), []int{15}
}

func (x *ListAIAgentMessageRequest) GetCtx() *common.Context {
	if x != nil {
		return x.Ctx
	}
	return nil
}

func (x *ListAIAgentMessageRequest) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *ListAIAgentMessageRequest) GetAgentId() string {
	if x != nil {
		return x.AgentId
	}
	return ""
}

func (x *ListAIAgentMessageRequest) GetFromMs() int64 {
	if x != nil {
		return x.FromMs
	}
	return 0
}

func (x *ListAIAgentMessageRequest) GetToMs() int64 {
	if x != nil {
		return x.ToMs
	}
	return 0
}

func (x *ListAIAgentMessageRequest) GetAnchor() string {
	if x != nil {
		return x.Anchor
	}
	return ""
}

func (x *ListAIAgentMessageRequest) GetCountOnly() bool {
	if x != nil {
		return x.CountOnly
	}
	return false
}

func (x *ListAIAgentMessageRequest) GetRating() string {
	if x != nil {
		return x.Rating
	}
	return ""
}

func (x *ListAIAgentMessageRequest) GetIsMissingSource() bool {
	if x != nil {
		return x.IsMissingSource
	}
	return false
}

func (x *ListAIAgentMessageRequest) GetIsRefused() bool {
	if x != nil {
		return x.IsRefused
	}
	return false
}

func (x *ListAIAgentMessageRequest) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *ListAIAgentMessageRequest) GetChannel() string {
	if x != nil {
		return x.Channel
	}
	return ""
}

func (x *ListAIAgentMessageRequest) GetChannelSource() string {
	if x != nil {
		return x.ChannelSource
	}
	return ""
}

func (x *ListAIAgentMessageRequest) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

type ReportConvoMessageRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ctx           *common.Context        `protobuf:"bytes,1,opt,name=ctx,proto3" json:"ctx,omitempty"`
	AccountId     string                 `protobuf:"bytes,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	AgentId       string                 `protobuf:"bytes,3,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`
	FromMs        int64                  `protobuf:"varint,4,opt,name=from_ms,json=fromMs,proto3" json:"from_ms,omitempty"`
	ToMs          int64                  `protobuf:"varint,6,opt,name=to_ms,json=toMs,proto3" json:"to_ms,omitempty"`
	Anchor        string                 `protobuf:"bytes,5,opt,name=anchor,proto3" json:"anchor,omitempty"` // hour, day
	CountOnly     bool                   `protobuf:"varint,7,opt,name=count_only,json=countOnly,proto3" json:"count_only,omitempty"`
	Sentiment     string                 `protobuf:"bytes,20,opt,name=sentiment,proto3" json:"sentiment,omitempty"` // "", negative | positive | neutral
	Channel       string                 `protobuf:"bytes,22,opt,name=channel,proto3" json:"channel,omitempty"`
	ChannelSource string                 `protobuf:"bytes,23,opt,name=channel_source,json=channelSource,proto3" json:"channel_source,omitempty"`
	ChannelId     string                 `protobuf:"bytes,24,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReportConvoMessageRequest) Reset() {
	*x = ReportConvoMessageRequest{}
	mi := &file_request_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReportConvoMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportConvoMessageRequest) ProtoMessage() {}

func (x *ReportConvoMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_request_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportConvoMessageRequest.ProtoReflect.Descriptor instead.
func (*ReportConvoMessageRequest) Descriptor() ([]byte, []int) {
	return file_request_proto_rawDescGZIP(), []int{16}
}

func (x *ReportConvoMessageRequest) GetCtx() *common.Context {
	if x != nil {
		return x.Ctx
	}
	return nil
}

func (x *ReportConvoMessageRequest) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *ReportConvoMessageRequest) GetAgentId() string {
	if x != nil {
		return x.AgentId
	}
	return ""
}

func (x *ReportConvoMessageRequest) GetFromMs() int64 {
	if x != nil {
		return x.FromMs
	}
	return 0
}

func (x *ReportConvoMessageRequest) GetToMs() int64 {
	if x != nil {
		return x.ToMs
	}
	return 0
}

func (x *ReportConvoMessageRequest) GetAnchor() string {
	if x != nil {
		return x.Anchor
	}
	return ""
}

func (x *ReportConvoMessageRequest) GetCountOnly() bool {
	if x != nil {
		return x.CountOnly
	}
	return false
}

func (x *ReportConvoMessageRequest) GetSentiment() string {
	if x != nil {
		return x.Sentiment
	}
	return ""
}

func (x *ReportConvoMessageRequest) GetChannel() string {
	if x != nil {
		return x.Channel
	}
	return ""
}

func (x *ReportConvoMessageRequest) GetChannelSource() string {
	if x != nil {
		return x.ChannelSource
	}
	return ""
}

func (x *ReportConvoMessageRequest) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

type ReportAIAgentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ctx           *common.Context        `protobuf:"bytes,1,opt,name=ctx,proto3" json:"ctx,omitempty"`
	AccountId     string                 `protobuf:"bytes,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	AgentId       string                 `protobuf:"bytes,3,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`
	StartHour     int64                  `protobuf:"varint,4,opt,name=start_hour,json=startHour,proto3" json:"start_hour,omitempty"`
	EndHour       int64                  `protobuf:"varint,11,opt,name=end_hour,json=endHour,proto3" json:"end_hour,omitempty"`
	Range         string                 `protobuf:"bytes,5,opt,name=range,proto3" json:"range,omitempty"`                    // hour, day
	Limit         int64                  `protobuf:"varint,6,opt,name=limit,proto3" json:"limit,omitempty"`                   //
	Tz            int64                  `protobuf:"varint,7,opt,name=tz,proto3" json:"tz,omitempty"`                         // do not use
	Metric        string                 `protobuf:"bytes,8,opt,name=metric,proto3" json:"metric,omitempty"`                  // conversations, messages, leads
	GroupBy       string                 `protobuf:"bytes,9,opt,name=group_by,json=groupBy,proto3" json:"group_by,omitempty"` // sentiment
	Anchor        string                 `protobuf:"bytes,10,opt,name=anchor,proto3" json:"anchor,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReportAIAgentRequest) Reset() {
	*x = ReportAIAgentRequest{}
	mi := &file_request_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReportAIAgentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportAIAgentRequest) ProtoMessage() {}

func (x *ReportAIAgentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_request_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportAIAgentRequest.ProtoReflect.Descriptor instead.
func (*ReportAIAgentRequest) Descriptor() ([]byte, []int) {
	return file_request_proto_rawDescGZIP(), []int{17}
}

func (x *ReportAIAgentRequest) GetCtx() *common.Context {
	if x != nil {
		return x.Ctx
	}
	return nil
}

func (x *ReportAIAgentRequest) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *ReportAIAgentRequest) GetAgentId() string {
	if x != nil {
		return x.AgentId
	}
	return ""
}

func (x *ReportAIAgentRequest) GetStartHour() int64 {
	if x != nil {
		return x.StartHour
	}
	return 0
}

func (x *ReportAIAgentRequest) GetEndHour() int64 {
	if x != nil {
		return x.EndHour
	}
	return 0
}

func (x *ReportAIAgentRequest) GetRange() string {
	if x != nil {
		return x.Range
	}
	return ""
}

func (x *ReportAIAgentRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ReportAIAgentRequest) GetTz() int64 {
	if x != nil {
		return x.Tz
	}
	return 0
}

func (x *ReportAIAgentRequest) GetMetric() string {
	if x != nil {
		return x.Metric
	}
	return ""
}

func (x *ReportAIAgentRequest) GetGroupBy() string {
	if x != nil {
		return x.GroupBy
	}
	return ""
}

func (x *ReportAIAgentRequest) GetAnchor() string {
	if x != nil {
		return x.Anchor
	}
	return ""
}

type ReportBotRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AccountId     string                 `protobuf:"bytes,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	BotId         string                 `protobuf:"bytes,3,opt,name=bot_id,json=botId,proto3" json:"bot_id,omitempty"`
	DayFrom       int64                  `protobuf:"varint,4,opt,name=day_from,json=dayFrom,proto3" json:"day_from,omitempty"`
	DayTo         int64                  `protobuf:"varint,5,opt,name=day_to,json=dayTo,proto3" json:"day_to,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReportBotRequest) Reset() {
	*x = ReportBotRequest{}
	mi := &file_request_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReportBotRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportBotRequest) ProtoMessage() {}

func (x *ReportBotRequest) ProtoReflect() protoreflect.Message {
	mi := &file_request_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportBotRequest.ProtoReflect.Descriptor instead.
func (*ReportBotRequest) Descriptor() ([]byte, []int) {
	return file_request_proto_rawDescGZIP(), []int{18}
}

func (x *ReportBotRequest) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *ReportBotRequest) GetBotId() string {
	if x != nil {
		return x.BotId
	}
	return ""
}

func (x *ReportBotRequest) GetDayFrom() int64 {
	if x != nil {
		return x.DayFrom
	}
	return 0
}

func (x *ReportBotRequest) GetDayTo() int64 {
	if x != nil {
		return x.DayTo
	}
	return 0
}

type ActionrunMetricsRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Dim             string                 `protobuf:"bytes,2,opt,name=dim,proto3" json:"dim,omitempty"`
	Tz              int32                  `protobuf:"varint,3,opt,name=tz,proto3" json:"tz,omitempty"`
	AccountId       string                 `protobuf:"bytes,4,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	BotId           string                 `protobuf:"bytes,5,opt,name=bot_id,json=botId,proto3" json:"bot_id,omitempty"`
	CreatedHourFrom int64                  `protobuf:"varint,6,opt,name=created_hour_from,json=createdHourFrom,proto3" json:"created_hour_from,omitempty"`
	CreatedHourTo   int64                  `protobuf:"varint,7,opt,name=created_hour_to,json=createdHourTo,proto3" json:"created_hour_to,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ActionrunMetricsRequest) Reset() {
	*x = ActionrunMetricsRequest{}
	mi := &file_request_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ActionrunMetricsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionrunMetricsRequest) ProtoMessage() {}

func (x *ActionrunMetricsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_request_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionrunMetricsRequest.ProtoReflect.Descriptor instead.
func (*ActionrunMetricsRequest) Descriptor() ([]byte, []int) {
	return file_request_proto_rawDescGZIP(), []int{19}
}

func (x *ActionrunMetricsRequest) GetDim() string {
	if x != nil {
		return x.Dim
	}
	return ""
}

func (x *ActionrunMetricsRequest) GetTz() int32 {
	if x != nil {
		return x.Tz
	}
	return 0
}

func (x *ActionrunMetricsRequest) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *ActionrunMetricsRequest) GetBotId() string {
	if x != nil {
		return x.BotId
	}
	return ""
}

func (x *ActionrunMetricsRequest) GetCreatedHourFrom() int64 {
	if x != nil {
		return x.CreatedHourFrom
	}
	return 0
}

func (x *ActionrunMetricsRequest) GetCreatedHourTo() int64 {
	if x != nil {
		return x.CreatedHourTo
	}
	return 0
}

type BotrunMetricsRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Dim             string                 `protobuf:"bytes,2,opt,name=dim,proto3" json:"dim,omitempty"`
	Tz              int32                  `protobuf:"varint,3,opt,name=tz,proto3" json:"tz,omitempty"`
	AccountId       string                 `protobuf:"bytes,4,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	BotId           string                 `protobuf:"bytes,5,opt,name=bot_id,json=botId,proto3" json:"bot_id,omitempty"`
	CreatedHourFrom int64                  `protobuf:"varint,6,opt,name=created_hour_from,json=createdHourFrom,proto3" json:"created_hour_from,omitempty"`
	CreatedHourTo   int64                  `protobuf:"varint,7,opt,name=created_hour_to,json=createdHourTo,proto3" json:"created_hour_to,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *BotrunMetricsRequest) Reset() {
	*x = BotrunMetricsRequest{}
	mi := &file_request_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BotrunMetricsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BotrunMetricsRequest) ProtoMessage() {}

func (x *BotrunMetricsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_request_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BotrunMetricsRequest.ProtoReflect.Descriptor instead.
func (*BotrunMetricsRequest) Descriptor() ([]byte, []int) {
	return file_request_proto_rawDescGZIP(), []int{20}
}

func (x *BotrunMetricsRequest) GetDim() string {
	if x != nil {
		return x.Dim
	}
	return ""
}

func (x *BotrunMetricsRequest) GetTz() int32 {
	if x != nil {
		return x.Tz
	}
	return 0
}

func (x *BotrunMetricsRequest) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *BotrunMetricsRequest) GetBotId() string {
	if x != nil {
		return x.BotId
	}
	return ""
}

func (x *BotrunMetricsRequest) GetCreatedHourFrom() int64 {
	if x != nil {
		return x.CreatedHourFrom
	}
	return 0
}

func (x *BotrunMetricsRequest) GetCreatedHourTo() int64 {
	if x != nil {
		return x.CreatedHourTo
	}
	return 0
}

type ListObjectsRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	AccountId       string                 `protobuf:"bytes,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	BotId           string                 `protobuf:"bytes,3,opt,name=bot_id,json=botId,proto3" json:"bot_id,omitempty"`
	CreatedHourFrom int64                  `protobuf:"varint,8,opt,name=created_hour_from,json=createdHourFrom,proto3" json:"created_hour_from,omitempty"`
	CreatedHourTo   int64                  `protobuf:"varint,9,opt,name=created_hour_to,json=createdHourTo,proto3" json:"created_hour_to,omitempty"`
	Anchor          string                 `protobuf:"bytes,6,opt,name=anchor,proto3" json:"anchor,omitempty"`
	Limit           int32                  `protobuf:"varint,7,opt,name=limit,proto3" json:"limit,omitempty"`
	DayFrom         int64                  `protobuf:"varint,4,opt,name=day_from,json=dayFrom,proto3" json:"day_from,omitempty"`
	DayTo           int64                  `protobuf:"varint,5,opt,name=day_to,json=dayTo,proto3" json:"day_to,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ListObjectsRequest) Reset() {
	*x = ListObjectsRequest{}
	mi := &file_request_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListObjectsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListObjectsRequest) ProtoMessage() {}

func (x *ListObjectsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_request_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListObjectsRequest.ProtoReflect.Descriptor instead.
func (*ListObjectsRequest) Descriptor() ([]byte, []int) {
	return file_request_proto_rawDescGZIP(), []int{21}
}

func (x *ListObjectsRequest) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *ListObjectsRequest) GetBotId() string {
	if x != nil {
		return x.BotId
	}
	return ""
}

func (x *ListObjectsRequest) GetCreatedHourFrom() int64 {
	if x != nil {
		return x.CreatedHourFrom
	}
	return 0
}

func (x *ListObjectsRequest) GetCreatedHourTo() int64 {
	if x != nil {
		return x.CreatedHourTo
	}
	return 0
}

func (x *ListObjectsRequest) GetAnchor() string {
	if x != nil {
		return x.Anchor
	}
	return ""
}

func (x *ListObjectsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListObjectsRequest) GetDayFrom() int64 {
	if x != nil {
		return x.DayFrom
	}
	return 0
}

func (x *ListObjectsRequest) GetDayTo() int64 {
	if x != nil {
		return x.DayTo
	}
	return 0
}

type ConversionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ctx           *common.Context        `protobuf:"bytes,1,opt,name=ctx,proto3" json:"ctx,omitempty"`
	AccountId     string                 `protobuf:"bytes,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	CampaignId    string                 `protobuf:"bytes,3,opt,name=campaign_id,json=campaignId,proto3" json:"campaign_id,omitempty"`
	Anchor        string                 `protobuf:"bytes,4,opt,name=anchor,proto3" json:"anchor,omitempty"`
	Limit         int32                  `protobuf:"varint,5,opt,name=limit,proto3" json:"limit,omitempty"`
	FromHour      int32                  `protobuf:"varint,7,opt,name=from_hour,json=fromHour,proto3" json:"from_hour,omitempty"`
	ToHour        int32                  `protobuf:"varint,8,opt,name=to_hour,json=toHour,proto3" json:"to_hour,omitempty"`
	WebPluginId   string                 `protobuf:"bytes,9,opt,name=web_plugin_id,json=webPluginId,proto3" json:"web_plugin_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConversionRequest) Reset() {
	*x = ConversionRequest{}
	mi := &file_request_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConversionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConversionRequest) ProtoMessage() {}

func (x *ConversionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_request_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConversionRequest.ProtoReflect.Descriptor instead.
func (*ConversionRequest) Descriptor() ([]byte, []int) {
	return file_request_proto_rawDescGZIP(), []int{22}
}

func (x *ConversionRequest) GetCtx() *common.Context {
	if x != nil {
		return x.Ctx
	}
	return nil
}

func (x *ConversionRequest) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *ConversionRequest) GetCampaignId() string {
	if x != nil {
		return x.CampaignId
	}
	return ""
}

func (x *ConversionRequest) GetAnchor() string {
	if x != nil {
		return x.Anchor
	}
	return ""
}

func (x *ConversionRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ConversionRequest) GetFromHour() int32 {
	if x != nil {
		return x.FromHour
	}
	return 0
}

func (x *ConversionRequest) GetToHour() int32 {
	if x != nil {
		return x.ToHour
	}
	return 0
}

func (x *ConversionRequest) GetWebPluginId() string {
	if x != nil {
		return x.WebPluginId
	}
	return ""
}

type ReportCampaignRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ctx           *common.Context        `protobuf:"bytes,1,opt,name=ctx,proto3" json:"ctx,omitempty"`
	AccountId     string                 `protobuf:"bytes,3,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	CampaignId    string                 `protobuf:"bytes,4,opt,name=campaign_id,json=campaignId,proto3" json:"campaign_id,omitempty"`
	FromHour      int32                  `protobuf:"varint,5,opt,name=from_hour,json=fromHour,proto3" json:"from_hour,omitempty"`
	ToHour        int32                  `protobuf:"varint,6,opt,name=to_hour,json=toHour,proto3" json:"to_hour,omitempty"`
	Range         string                 `protobuf:"bytes,7,opt,name=range,proto3" json:"range,omitempty"`
	Tz            int32                  `protobuf:"varint,8,opt,name=tz,proto3" json:"tz,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReportCampaignRequest) Reset() {
	*x = ReportCampaignRequest{}
	mi := &file_request_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReportCampaignRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportCampaignRequest) ProtoMessage() {}

func (x *ReportCampaignRequest) ProtoReflect() protoreflect.Message {
	mi := &file_request_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportCampaignRequest.ProtoReflect.Descriptor instead.
func (*ReportCampaignRequest) Descriptor() ([]byte, []int) {
	return file_request_proto_rawDescGZIP(), []int{23}
}

func (x *ReportCampaignRequest) GetCtx() *common.Context {
	if x != nil {
		return x.Ctx
	}
	return nil
}

func (x *ReportCampaignRequest) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *ReportCampaignRequest) GetCampaignId() string {
	if x != nil {
		return x.CampaignId
	}
	return ""
}

func (x *ReportCampaignRequest) GetFromHour() int32 {
	if x != nil {
		return x.FromHour
	}
	return 0
}

func (x *ReportCampaignRequest) GetToHour() int32 {
	if x != nil {
		return x.ToHour
	}
	return 0
}

func (x *ReportCampaignRequest) GetRange() string {
	if x != nil {
		return x.Range
	}
	return ""
}

func (x *ReportCampaignRequest) GetTz() int32 {
	if x != nil {
		return x.Tz
	}
	return 0
}

type ReportWebPluginRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ctx           *common.Context        `protobuf:"bytes,1,opt,name=ctx,proto3" json:"ctx,omitempty"`
	AccountId     string                 `protobuf:"bytes,3,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	WebPluginId   string                 `protobuf:"bytes,4,opt,name=web_plugin_id,json=webPluginId,proto3" json:"web_plugin_id,omitempty"`
	FromHour      int32                  `protobuf:"varint,5,opt,name=from_hour,json=fromHour,proto3" json:"from_hour,omitempty"`
	ToHour        int32                  `protobuf:"varint,6,opt,name=to_hour,json=toHour,proto3" json:"to_hour,omitempty"`
	Range         string                 `protobuf:"bytes,7,opt,name=range,proto3" json:"range,omitempty"`
	Tz            int32                  `protobuf:"varint,8,opt,name=tz,proto3" json:"tz,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReportWebPluginRequest) Reset() {
	*x = ReportWebPluginRequest{}
	mi := &file_request_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReportWebPluginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportWebPluginRequest) ProtoMessage() {}

func (x *ReportWebPluginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_request_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportWebPluginRequest.ProtoReflect.Descriptor instead.
func (*ReportWebPluginRequest) Descriptor() ([]byte, []int) {
	return file_request_proto_rawDescGZIP(), []int{24}
}

func (x *ReportWebPluginRequest) GetCtx() *common.Context {
	if x != nil {
		return x.Ctx
	}
	return nil
}

func (x *ReportWebPluginRequest) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *ReportWebPluginRequest) GetWebPluginId() string {
	if x != nil {
		return x.WebPluginId
	}
	return ""
}

func (x *ReportWebPluginRequest) GetFromHour() int32 {
	if x != nil {
		return x.FromHour
	}
	return 0
}

func (x *ReportWebPluginRequest) GetToHour() int32 {
	if x != nil {
		return x.ToHour
	}
	return 0
}

func (x *ReportWebPluginRequest) GetRange() string {
	if x != nil {
		return x.Range
	}
	return ""
}

func (x *ReportWebPluginRequest) GetTz() int32 {
	if x != nil {
		return x.Tz
	}
	return 0
}

type WebPluginConversionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ctx           *common.Context        `protobuf:"bytes,1,opt,name=ctx,proto3" json:"ctx,omitempty"`
	AccountId     string                 `protobuf:"bytes,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	WebPluginId   string                 `protobuf:"bytes,3,opt,name=web_plugin_id,json=webPluginId,proto3" json:"web_plugin_id,omitempty"`
	UnixDayFrom   int64                  `protobuf:"varint,5,opt,name=unix_day_from,json=unixDayFrom,proto3" json:"unix_day_from,omitempty"`
	UnixDayTo     int64                  `protobuf:"varint,6,opt,name=unix_day_to,json=unixDayTo,proto3" json:"unix_day_to,omitempty"`
	Anchor        string                 `protobuf:"bytes,8,opt,name=anchor,proto3" json:"anchor,omitempty"`
	Limit         int32                  `protobuf:"varint,9,opt,name=limit,proto3" json:"limit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WebPluginConversionRequest) Reset() {
	*x = WebPluginConversionRequest{}
	mi := &file_request_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WebPluginConversionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebPluginConversionRequest) ProtoMessage() {}

func (x *WebPluginConversionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_request_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebPluginConversionRequest.ProtoReflect.Descriptor instead.
func (*WebPluginConversionRequest) Descriptor() ([]byte, []int) {
	return file_request_proto_rawDescGZIP(), []int{25}
}

func (x *WebPluginConversionRequest) GetCtx() *common.Context {
	if x != nil {
		return x.Ctx
	}
	return nil
}

func (x *WebPluginConversionRequest) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *WebPluginConversionRequest) GetWebPluginId() string {
	if x != nil {
		return x.WebPluginId
	}
	return ""
}

func (x *WebPluginConversionRequest) GetUnixDayFrom() int64 {
	if x != nil {
		return x.UnixDayFrom
	}
	return 0
}

func (x *WebPluginConversionRequest) GetUnixDayTo() int64 {
	if x != nil {
		return x.UnixDayTo
	}
	return 0
}

func (x *WebPluginConversionRequest) GetAnchor() string {
	if x != nil {
		return x.Anchor
	}
	return ""
}

func (x *WebPluginConversionRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type SearchLocationsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ctx           *common.Context        `protobuf:"bytes,1,opt,name=ctx,proto3" json:"ctx,omitempty"`
	Query         string                 `protobuf:"bytes,2,opt,name=query,proto3" json:"query,omitempty"`
	Limit         int64                  `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchLocationsRequest) Reset() {
	*x = SearchLocationsRequest{}
	mi := &file_request_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchLocationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchLocationsRequest) ProtoMessage() {}

func (x *SearchLocationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_request_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchLocationsRequest.ProtoReflect.Descriptor instead.
func (*SearchLocationsRequest) Descriptor() ([]byte, []int) {
	return file_request_proto_rawDescGZIP(), []int{26}
}

func (x *SearchLocationsRequest) GetCtx() *common.Context {
	if x != nil {
		return x.Ctx
	}
	return nil
}

func (x *SearchLocationsRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *SearchLocationsRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type RecentIndexDeliveryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ctx           *common.Context        `protobuf:"bytes,1,opt,name=ctx,proto3" json:"ctx,omitempty"`
	WebhookId     string                 `protobuf:"bytes,2,opt,name=webhook_id,json=webhookId,proto3" json:"webhook_id,omitempty"`
	Limit         int32                  `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RecentIndexDeliveryRequest) Reset() {
	*x = RecentIndexDeliveryRequest{}
	mi := &file_request_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RecentIndexDeliveryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecentIndexDeliveryRequest) ProtoMessage() {}

func (x *RecentIndexDeliveryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_request_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecentIndexDeliveryRequest.ProtoReflect.Descriptor instead.
func (*RecentIndexDeliveryRequest) Descriptor() ([]byte, []int) {
	return file_request_proto_rawDescGZIP(), []int{27}
}

func (x *RecentIndexDeliveryRequest) GetCtx() *common.Context {
	if x != nil {
		return x.Ctx
	}
	return nil
}

func (x *RecentIndexDeliveryRequest) GetWebhookId() string {
	if x != nil {
		return x.WebhookId
	}
	return ""
}

func (x *RecentIndexDeliveryRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type DeliveryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ctx           *common.Context        `protobuf:"bytes,1,opt,name=ctx,proto3" json:"ctx,omitempty"`
	WebhookId     string                 `protobuf:"bytes,2,opt,name=webhook_id,json=webhookId,proto3" json:"webhook_id,omitempty"`
	Id            int32                  `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeliveryRequest) Reset() {
	*x = DeliveryRequest{}
	mi := &file_request_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeliveryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeliveryRequest) ProtoMessage() {}

func (x *DeliveryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_request_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeliveryRequest.ProtoReflect.Descriptor instead.
func (*DeliveryRequest) Descriptor() ([]byte, []int) {
	return file_request_proto_rawDescGZIP(), []int{28}
}

func (x *DeliveryRequest) GetCtx() *common.Context {
	if x != nil {
		return x.Ctx
	}
	return nil
}

func (x *DeliveryRequest) GetWebhookId() string {
	if x != nil {
		return x.WebhookId
	}
	return ""
}

func (x *DeliveryRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type SearchRequest struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	Ctx                  *common.Context        `protobuf:"bytes,1,opt,name=ctx,proto3" json:"ctx,omitempty"`
	AccountId            string                 `protobuf:"bytes,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	Query                string                 `protobuf:"bytes,4,opt,name=query,proto3" json:"query,omitempty"`
	Limit                int32                  `protobuf:"varint,5,opt,name=limit,proto3" json:"limit,omitempty"`
	AgentId              string                 `protobuf:"bytes,8,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`         // search my user of agent
	Labels               []string               `protobuf:"bytes,9,rep,name=labels,proto3" json:"labels,omitempty"`                          // or
	Agents               []string               `protobuf:"bytes,10,rep,name=agents,proto3" json:"agents,omitempty"`                         // or
	IsPrivate            bool                   `protobuf:"varint,11,opt,name=is_private,json=isPrivate,proto3" json:"is_private,omitempty"` // search in private convo only
	OnlyHeader           bool                   `protobuf:"varint,13,opt,name=only_header,json=onlyHeader,proto3" json:"only_header,omitempty"`
	ConversationId       string                 `protobuf:"bytes,14,opt,name=conversation_id,json=conversationId,proto3" json:"conversation_id,omitempty"` // filter by conversation
	Anchor               string                 `protobuf:"bytes,15,opt,name=anchor,proto3" json:"anchor,omitempty"`
	ExcludeConversations []string               `protobuf:"bytes,16,rep,name=exclude_conversations,json=excludeConversations,proto3" json:"exclude_conversations,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *SearchRequest) Reset() {
	*x = SearchRequest{}
	mi := &file_request_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchRequest) ProtoMessage() {}

func (x *SearchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_request_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchRequest.ProtoReflect.Descriptor instead.
func (*SearchRequest) Descriptor() ([]byte, []int) {
	return file_request_proto_rawDescGZIP(), []int{29}
}

func (x *SearchRequest) GetCtx() *common.Context {
	if x != nil {
		return x.Ctx
	}
	return nil
}

func (x *SearchRequest) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *SearchRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *SearchRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *SearchRequest) GetAgentId() string {
	if x != nil {
		return x.AgentId
	}
	return ""
}

func (x *SearchRequest) GetLabels() []string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *SearchRequest) GetAgents() []string {
	if x != nil {
		return x.Agents
	}
	return nil
}

func (x *SearchRequest) GetIsPrivate() bool {
	if x != nil {
		return x.IsPrivate
	}
	return false
}

func (x *SearchRequest) GetOnlyHeader() bool {
	if x != nil {
		return x.OnlyHeader
	}
	return false
}

func (x *SearchRequest) GetConversationId() string {
	if x != nil {
		return x.ConversationId
	}
	return ""
}

func (x *SearchRequest) GetAnchor() string {
	if x != nil {
		return x.Anchor
	}
	return ""
}

func (x *SearchRequest) GetExcludeConversations() []string {
	if x != nil {
		return x.ExcludeConversations
	}
	return nil
}

type AvailibilityReportRequest struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	Ctx       *common.Context        `protobuf:"bytes,1,opt,name=ctx,proto3" json:"ctx,omitempty"`
	AccountId string                 `protobuf:"bytes,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	AgentId   string                 `protobuf:"bytes,3,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`
	From      string                 `protobuf:"bytes,5,opt,name=from,proto3" json:"from,omitempty"` // try date --rfc-3339=seconds date in rfc 333
	// seconds standard. E.g: 2019-03-07T10:42:01+07:00
	Range          string `protobuf:"bytes,8,opt,name=range,proto3" json:"range,omitempty"`
	NumberOfPoints int32  `protobuf:"varint,13,opt,name=number_of_points,json=numberOfPoints,proto3" json:"number_of_points,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *AvailibilityReportRequest) Reset() {
	*x = AvailibilityReportRequest{}
	mi := &file_request_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AvailibilityReportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvailibilityReportRequest) ProtoMessage() {}

func (x *AvailibilityReportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_request_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvailibilityReportRequest.ProtoReflect.Descriptor instead.
func (*AvailibilityReportRequest) Descriptor() ([]byte, []int) {
	return file_request_proto_rawDescGZIP(), []int{30}
}

func (x *AvailibilityReportRequest) GetCtx() *common.Context {
	if x != nil {
		return x.Ctx
	}
	return nil
}

func (x *AvailibilityReportRequest) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *AvailibilityReportRequest) GetAgentId() string {
	if x != nil {
		return x.AgentId
	}
	return ""
}

func (x *AvailibilityReportRequest) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *AvailibilityReportRequest) GetRange() string {
	if x != nil {
		return x.Range
	}
	return ""
}

func (x *AvailibilityReportRequest) GetNumberOfPoints() int32 {
	if x != nil {
		return x.NumberOfPoints
	}
	return 0
}

type FileUrlDownloadRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ctx           *common.Context        `protobuf:"bytes,1,opt,name=ctx,proto3" json:"ctx,omitempty"`
	AccountId     string                 `protobuf:"bytes,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	Url           string                 `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
	MaxSize       int64                  `protobuf:"varint,4,opt,name=max_size,json=maxSize,proto3" json:"max_size,omitempty"`
	TypePrefix    string                 `protobuf:"bytes,5,opt,name=type_prefix,json=typePrefix,proto3" json:"type_prefix,omitempty"`
	Timeout       int64                  `protobuf:"varint,6,opt,name=timeout,proto3" json:"timeout,omitempty"`                     // ms
	UserAgent     string                 `protobuf:"bytes,7,opt,name=user_agent,json=userAgent,proto3" json:"user_agent,omitempty"` // control client user-agent while download
	TypeHint      string                 `protobuf:"bytes,8,opt,name=type_hint,json=typeHint,proto3" json:"type_hint,omitempty"`    // must from trusted source
	Extension     string                 `protobuf:"bytes,9,opt,name=extension,proto3" json:"extension,omitempty"`                  // xlsx, jped
	MaxHeight     int64                  `protobuf:"varint,10,opt,name=max_height,json=maxHeight,proto3" json:"max_height,omitempty"`
	MaxWidth      int64                  `protobuf:"varint,11,opt,name=max_width,json=maxWidth,proto3" json:"max_width,omitempty"`
	Category      string                 `protobuf:"bytes,12,opt,name=category,proto3" json:"category,omitempty"`
	Force         int64                  `protobuf:"varint,13,opt,name=force,proto3" json:"force,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileUrlDownloadRequest) Reset() {
	*x = FileUrlDownloadRequest{}
	mi := &file_request_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileUrlDownloadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileUrlDownloadRequest) ProtoMessage() {}

func (x *FileUrlDownloadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_request_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileUrlDownloadRequest.ProtoReflect.Descriptor instead.
func (*FileUrlDownloadRequest) Descriptor() ([]byte, []int) {
	return file_request_proto_rawDescGZIP(), []int{31}
}

func (x *FileUrlDownloadRequest) GetCtx() *common.Context {
	if x != nil {
		return x.Ctx
	}
	return nil
}

func (x *FileUrlDownloadRequest) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *FileUrlDownloadRequest) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *FileUrlDownloadRequest) GetMaxSize() int64 {
	if x != nil {
		return x.MaxSize
	}
	return 0
}

func (x *FileUrlDownloadRequest) GetTypePrefix() string {
	if x != nil {
		return x.TypePrefix
	}
	return ""
}

func (x *FileUrlDownloadRequest) GetTimeout() int64 {
	if x != nil {
		return x.Timeout
	}
	return 0
}

func (x *FileUrlDownloadRequest) GetUserAgent() string {
	if x != nil {
		return x.UserAgent
	}
	return ""
}

func (x *FileUrlDownloadRequest) GetTypeHint() string {
	if x != nil {
		return x.TypeHint
	}
	return ""
}

func (x *FileUrlDownloadRequest) GetExtension() string {
	if x != nil {
		return x.Extension
	}
	return ""
}

func (x *FileUrlDownloadRequest) GetMaxHeight() int64 {
	if x != nil {
		return x.MaxHeight
	}
	return 0
}

func (x *FileUrlDownloadRequest) GetMaxWidth() int64 {
	if x != nil {
		return x.MaxWidth
	}
	return 0
}

func (x *FileUrlDownloadRequest) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *FileUrlDownloadRequest) GetForce() int64 {
	if x != nil {
		return x.Force
	}
	return 0
}

type OrderMetricsRequest struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	Dim                string                 `protobuf:"bytes,2,opt,name=dim,proto3" json:"dim,omitempty"`
	Tz                 int32                  `protobuf:"varint,3,opt,name=tz,proto3" json:"tz,omitempty"`
	AccountId          string                 `protobuf:"bytes,10,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	IssueHourFrom      int64                  `protobuf:"varint,11,opt,name=issue_hour_from,json=issueHourFrom,proto3" json:"issue_hour_from,omitempty"`
	IssueHourTo        int64                  `protobuf:"varint,12,opt,name=issue_hour_to,json=issueHourTo,proto3" json:"issue_hour_to,omitempty"`
	PaidHourFrom       int64                  `protobuf:"varint,13,opt,name=paid_hour_from,json=paidHourFrom,proto3" json:"paid_hour_from,omitempty"`
	PaidHourTo         int64                  `protobuf:"varint,14,opt,name=paid_hour_to,json=paidHourTo,proto3" json:"paid_hour_to,omitempty"`
	Channels           []string               `protobuf:"bytes,15,rep,name=channels,proto3" json:"channels,omitempty"`
	NotChannels        []string               `protobuf:"bytes,16,rep,name=not_channels,json=notChannels,proto3" json:"not_channels,omitempty"`
	ChannelTouchpoints []string               `protobuf:"bytes,17,rep,name=channel_touchpoints,json=channelTouchpoints,proto3" json:"channel_touchpoints,omitempty"`
	ProductIds         []string               `protobuf:"bytes,18,rep,name=product_ids,json=productIds,proto3" json:"product_ids,omitempty"` // and
	Salesperson        []string               `protobuf:"bytes,19,rep,name=salesperson,proto3" json:"salesperson,omitempty"`                 // and, agent ids
	PosIds             []string               `protobuf:"bytes,20,rep,name=pos_ids,json=posIds,proto3" json:"pos_ids,omitempty"`
	BusinessHours      *account.BusinessHours `protobuf:"bytes,23,opt,name=business_hours,json=businessHours,proto3" json:"business_hours,omitempty"`
	NotBusinessHours   *account.BusinessHours `protobuf:"bytes,24,opt,name=not_business_hours,json=notBusinessHours,proto3" json:"not_business_hours,omitempty"`
	CreatedHourFrom    int64                  `protobuf:"varint,25,opt,name=created_hour_from,json=createdHourFrom,proto3" json:"created_hour_from,omitempty"`
	CreatedHourTo      int64                  `protobuf:"varint,26,opt,name=created_hour_to,json=createdHourTo,proto3" json:"created_hour_to,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *OrderMetricsRequest) Reset() {
	*x = OrderMetricsRequest{}
	mi := &file_request_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OrderMetricsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderMetricsRequest) ProtoMessage() {}

func (x *OrderMetricsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_request_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderMetricsRequest.ProtoReflect.Descriptor instead.
func (*OrderMetricsRequest) Descriptor() ([]byte, []int) {
	return file_request_proto_rawDescGZIP(), []int{32}
}

func (x *OrderMetricsRequest) GetDim() string {
	if x != nil {
		return x.Dim
	}
	return ""
}

func (x *OrderMetricsRequest) GetTz() int32 {
	if x != nil {
		return x.Tz
	}
	return 0
}

func (x *OrderMetricsRequest) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *OrderMetricsRequest) GetIssueHourFrom() int64 {
	if x != nil {
		return x.IssueHourFrom
	}
	return 0
}

func (x *OrderMetricsRequest) GetIssueHourTo() int64 {
	if x != nil {
		return x.IssueHourTo
	}
	return 0
}

func (x *OrderMetricsRequest) GetPaidHourFrom() int64 {
	if x != nil {
		return x.PaidHourFrom
	}
	return 0
}

func (x *OrderMetricsRequest) GetPaidHourTo() int64 {
	if x != nil {
		return x.PaidHourTo
	}
	return 0
}

func (x *OrderMetricsRequest) GetChannels() []string {
	if x != nil {
		return x.Channels
	}
	return nil
}

func (x *OrderMetricsRequest) GetNotChannels() []string {
	if x != nil {
		return x.NotChannels
	}
	return nil
}

func (x *OrderMetricsRequest) GetChannelTouchpoints() []string {
	if x != nil {
		return x.ChannelTouchpoints
	}
	return nil
}

func (x *OrderMetricsRequest) GetProductIds() []string {
	if x != nil {
		return x.ProductIds
	}
	return nil
}

func (x *OrderMetricsRequest) GetSalesperson() []string {
	if x != nil {
		return x.Salesperson
	}
	return nil
}

func (x *OrderMetricsRequest) GetPosIds() []string {
	if x != nil {
		return x.PosIds
	}
	return nil
}

func (x *OrderMetricsRequest) GetBusinessHours() *account.BusinessHours {
	if x != nil {
		return x.BusinessHours
	}
	return nil
}

func (x *OrderMetricsRequest) GetNotBusinessHours() *account.BusinessHours {
	if x != nil {
		return x.NotBusinessHours
	}
	return nil
}

func (x *OrderMetricsRequest) GetCreatedHourFrom() int64 {
	if x != nil {
		return x.CreatedHourFrom
	}
	return 0
}

func (x *OrderMetricsRequest) GetCreatedHourTo() int64 {
	if x != nil {
		return x.CreatedHourTo
	}
	return 0
}

type OrdersRequest struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	Ctx                 *common.Context        `protobuf:"bytes,1,opt,name=ctx,proto3" json:"ctx,omitempty"`
	AccountId           string                 `protobuf:"bytes,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	UserId              string                 `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // list order by user
	Status              string                 `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`               // list order by status
	CreatedHourFrom     int64                  `protobuf:"varint,5,opt,name=created_hour_from,json=createdHourFrom,proto3" json:"created_hour_from,omitempty"`
	CreatedHourTo       int64                  `protobuf:"varint,6,opt,name=created_hour_to,json=createdHourTo,proto3" json:"created_hour_to,omitempty"`
	DueDateHourFrom     int64                  `protobuf:"varint,20,opt,name=due_date_hour_from,json=dueDateHourFrom,proto3" json:"due_date_hour_from,omitempty"`
	DueDateHourTo       int64                  `protobuf:"varint,21,opt,name=due_date_hour_to,json=dueDateHourTo,proto3" json:"due_date_hour_to,omitempty"`
	IssueHourFrom       int64                  `protobuf:"varint,22,opt,name=issue_hour_from,json=issueHourFrom,proto3" json:"issue_hour_from,omitempty"`
	IssueHourTo         int64                  `protobuf:"varint,23,opt,name=issue_hour_to,json=issueHourTo,proto3" json:"issue_hour_to,omitempty"`
	IncludeDeleted      bool                   `protobuf:"varint,7,opt,name=include_deleted,json=includeDeleted,proto3" json:"include_deleted,omitempty"`
	Limit               int32                  `protobuf:"varint,8,opt,name=limit,proto3" json:"limit,omitempty"`
	Anchor              string                 `protobuf:"bytes,9,opt,name=anchor,proto3" json:"anchor,omitempty"`
	Offset              int32                  `protobuf:"varint,18,opt,name=offset,proto3" json:"offset,omitempty"`
	Dim                 string                 `protobuf:"bytes,17,opt,name=dim,proto3" json:"dim,omitempty"`
	OrderBy             string                 `protobuf:"bytes,19,opt,name=order_by,json=orderBy,proto3" json:"order_by,omitempty"`
	Ids                 []string               `protobuf:"bytes,10,rep,name=ids,proto3" json:"ids,omitempty"`
	Modifieds           []int64                `protobuf:"varint,11,rep,packed,name=modifieds,proto3" json:"modifieds,omitempty"`
	Query               string                 `protobuf:"bytes,12,opt,name=query,proto3" json:"query,omitempty"`
	IsDraft             bool                   `protobuf:"varint,13,opt,name=is_draft,json=isDraft,proto3" json:"is_draft,omitempty"`
	PaymentStatus       string                 `protobuf:"bytes,14,opt,name=payment_status,json=paymentStatus,proto3" json:"payment_status,omitempty"`
	PosIds              []string               `protobuf:"bytes,15,rep,name=pos_ids,json=posIds,proto3" json:"pos_ids,omitempty"`
	Salesperson         []string               `protobuf:"bytes,16,rep,name=salesperson,proto3" json:"salesperson,omitempty"` // agent ids
	Statuses            []string               `protobuf:"bytes,24,rep,name=statuses,proto3" json:"statuses,omitempty"`
	NotStatuses         []string               `protobuf:"bytes,25,rep,name=not_statuses,json=notStatuses,proto3" json:"not_statuses,omitempty"`
	ShippingStatuses    []string               `protobuf:"bytes,26,rep,name=shipping_statuses,json=shippingStatuses,proto3" json:"shipping_statuses,omitempty"`
	NotShippingStatuses []string               `protobuf:"bytes,27,rep,name=not_shipping_statuses,json=notShippingStatuses,proto3" json:"not_shipping_statuses,omitempty"`
	Tags                []string               `protobuf:"bytes,33,rep,name=tags,proto3" json:"tags,omitempty"` // and
	Pipeline            string                 `protobuf:"bytes,30,opt,name=pipeline,proto3" json:"pipeline,omitempty"`
	PipelineStage       string                 `protobuf:"bytes,31,opt,name=pipeline_stage,json=pipelineStage,proto3" json:"pipeline_stage,omitempty"`
	AssignedAgentId     string                 `protobuf:"bytes,32,opt,name=assigned_agent_id,json=assignedAgentId,proto3" json:"assigned_agent_id,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *OrdersRequest) Reset() {
	*x = OrdersRequest{}
	mi := &file_request_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OrdersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrdersRequest) ProtoMessage() {}

func (x *OrdersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_request_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrdersRequest.ProtoReflect.Descriptor instead.
func (*OrdersRequest) Descriptor() ([]byte, []int) {
	return file_request_proto_rawDescGZIP(), []int{33}
}

func (x *OrdersRequest) GetCtx() *common.Context {
	if x != nil {
		return x.Ctx
	}
	return nil
}

func (x *OrdersRequest) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *OrdersRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *OrdersRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *OrdersRequest) GetCreatedHourFrom() int64 {
	if x != nil {
		return x.CreatedHourFrom
	}
	return 0
}

func (x *OrdersRequest) GetCreatedHourTo() int64 {
	if x != nil {
		return x.CreatedHourTo
	}
	return 0
}

func (x *OrdersRequest) GetDueDateHourFrom() int64 {
	if x != nil {
		return x.DueDateHourFrom
	}
	return 0
}

func (x *OrdersRequest) GetDueDateHourTo() int64 {
	if x != nil {
		return x.DueDateHourTo
	}
	return 0
}

func (x *OrdersRequest) GetIssueHourFrom() int64 {
	if x != nil {
		return x.IssueHourFrom
	}
	return 0
}

func (x *OrdersRequest) GetIssueHourTo() int64 {
	if x != nil {
		return x.IssueHourTo
	}
	return 0
}

func (x *OrdersRequest) GetIncludeDeleted() bool {
	if x != nil {
		return x.IncludeDeleted
	}
	return false
}

func (x *OrdersRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *OrdersRequest) GetAnchor() string {
	if x != nil {
		return x.Anchor
	}
	return ""
}

func (x *OrdersRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *OrdersRequest) GetDim() string {
	if x != nil {
		return x.Dim
	}
	return ""
}

func (x *OrdersRequest) GetOrderBy() string {
	if x != nil {
		return x.OrderBy
	}
	return ""
}

func (x *OrdersRequest) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *OrdersRequest) GetModifieds() []int64 {
	if x != nil {
		return x.Modifieds
	}
	return nil
}

func (x *OrdersRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *OrdersRequest) GetIsDraft() bool {
	if x != nil {
		return x.IsDraft
	}
	return false
}

func (x *OrdersRequest) GetPaymentStatus() string {
	if x != nil {
		return x.PaymentStatus
	}
	return ""
}

func (x *OrdersRequest) GetPosIds() []string {
	if x != nil {
		return x.PosIds
	}
	return nil
}

func (x *OrdersRequest) GetSalesperson() []string {
	if x != nil {
		return x.Salesperson
	}
	return nil
}

func (x *OrdersRequest) GetStatuses() []string {
	if x != nil {
		return x.Statuses
	}
	return nil
}

func (x *OrdersRequest) GetNotStatuses() []string {
	if x != nil {
		return x.NotStatuses
	}
	return nil
}

func (x *OrdersRequest) GetShippingStatuses() []string {
	if x != nil {
		return x.ShippingStatuses
	}
	return nil
}

func (x *OrdersRequest) GetNotShippingStatuses() []string {
	if x != nil {
		return x.NotShippingStatuses
	}
	return nil
}

func (x *OrdersRequest) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *OrdersRequest) GetPipeline() string {
	if x != nil {
		return x.Pipeline
	}
	return ""
}

func (x *OrdersRequest) GetPipelineStage() string {
	if x != nil {
		return x.PipelineStage
	}
	return ""
}

func (x *OrdersRequest) GetAssignedAgentId() string {
	if x != nil {
		return x.AssignedAgentId
	}
	return ""
}

type CountOrdersRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ctx           *common.Context        `protobuf:"bytes,1,opt,name=ctx,proto3" json:"ctx,omitempty"`
	AccountId     string                 `protobuf:"bytes,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	Queries       []*OrdersRequest       `protobuf:"bytes,4,rep,name=queries,proto3" json:"queries,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CountOrdersRequest) Reset() {
	*x = CountOrdersRequest{}
	mi := &file_request_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CountOrdersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountOrdersRequest) ProtoMessage() {}

func (x *CountOrdersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_request_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountOrdersRequest.ProtoReflect.Descriptor instead.
func (*CountOrdersRequest) Descriptor() ([]byte, []int) {
	return file_request_proto_rawDescGZIP(), []int{34}
}

func (x *CountOrdersRequest) GetCtx() *common.Context {
	if x != nil {
		return x.Ctx
	}
	return nil
}

func (x *CountOrdersRequest) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *CountOrdersRequest) GetQueries() []*OrdersRequest {
	if x != nil {
		return x.Queries
	}
	return nil
}

type WorkflowReportRequest struct {
	state      protoimpl.MessageState `protogen:"open.v1"`
	Ctx        *common.Context        `protobuf:"bytes,1,opt,name=ctx,proto3" json:"ctx,omitempty"`
	AccountId  string                 `protobuf:"bytes,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	WorkflowId string                 `protobuf:"bytes,3,opt,name=workflow_id,json=workflowId,proto3" json:"workflow_id,omitempty"`
	FromHour   int64                  `protobuf:"varint,6,opt,name=from_hour,json=fromHour,proto3" json:"from_hour,omitempty"`
	ToHour     int64                  `protobuf:"varint,7,opt,name=to_hour,json=toHour,proto3" json:"to_hour,omitempty"`
	// session_started, goal_reached, session_error, any_action, message_sent, message_sent_facebook, message_sent_email, message_sent_zns, assign
	ActionTypes   []string `protobuf:"bytes,8,rep,name=action_types,json=actionTypes,proto3" json:"action_types,omitempty"`
	Unit          string   `protobuf:"bytes,9,opt,name=unit,proto3" json:"unit,omitempty"` // hour, day
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WorkflowReportRequest) Reset() {
	*x = WorkflowReportRequest{}
	mi := &file_request_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkflowReportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkflowReportRequest) ProtoMessage() {}

func (x *WorkflowReportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_request_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkflowReportRequest.ProtoReflect.Descriptor instead.
func (*WorkflowReportRequest) Descriptor() ([]byte, []int) {
	return file_request_proto_rawDescGZIP(), []int{35}
}

func (x *WorkflowReportRequest) GetCtx() *common.Context {
	if x != nil {
		return x.Ctx
	}
	return nil
}

func (x *WorkflowReportRequest) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *WorkflowReportRequest) GetWorkflowId() string {
	if x != nil {
		return x.WorkflowId
	}
	return ""
}

func (x *WorkflowReportRequest) GetFromHour() int64 {
	if x != nil {
		return x.FromHour
	}
	return 0
}

func (x *WorkflowReportRequest) GetToHour() int64 {
	if x != nil {
		return x.ToHour
	}
	return 0
}

func (x *WorkflowReportRequest) GetActionTypes() []string {
	if x != nil {
		return x.ActionTypes
	}
	return nil
}

func (x *WorkflowReportRequest) GetUnit() string {
	if x != nil {
		return x.Unit
	}
	return ""
}

type AuthorizeShopeeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ctx           *common.Context        `protobuf:"bytes,1,opt,name=ctx,proto3" json:"ctx,omitempty"`
	AccountId     string                 `protobuf:"bytes,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	Code          string                 `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`
	ShopId        int64                  `protobuf:"varint,4,opt,name=shop_id,json=shopId,proto3" json:"shop_id,omitempty"`
	MainAccountId string                 `protobuf:"bytes,5,opt,name=main_account_id,json=mainAccountId,proto3" json:"main_account_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AuthorizeShopeeRequest) Reset() {
	*x = AuthorizeShopeeRequest{}
	mi := &file_request_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuthorizeShopeeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthorizeShopeeRequest) ProtoMessage() {}

func (x *AuthorizeShopeeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_request_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthorizeShopeeRequest.ProtoReflect.Descriptor instead.
func (*AuthorizeShopeeRequest) Descriptor() ([]byte, []int) {
	return file_request_proto_rawDescGZIP(), []int{36}
}

func (x *AuthorizeShopeeRequest) GetCtx() *common.Context {
	if x != nil {
		return x.Ctx
	}
	return nil
}

func (x *AuthorizeShopeeRequest) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *AuthorizeShopeeRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *AuthorizeShopeeRequest) GetShopId() int64 {
	if x != nil {
		return x.ShopId
	}
	return 0
}

func (x *AuthorizeShopeeRequest) GetMainAccountId() string {
	if x != nil {
		return x.MainAccountId
	}
	return ""
}

type ShopeeSyncProductRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ctx           *common.Context        `protobuf:"bytes,1,opt,name=ctx,proto3" json:"ctx,omitempty"`
	AccountId     string                 `protobuf:"bytes,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	ShopId        int64                  `protobuf:"varint,3,opt,name=shop_id,json=shopId,proto3" json:"shop_id,omitempty"`
	Offset        int64                  `protobuf:"varint,4,opt,name=offset,proto3" json:"offset,omitempty"`
	PageSize      int64                  `protobuf:"varint,5,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	Status        string                 `protobuf:"bytes,6,opt,name=status,proto3" json:"status,omitempty"`
	Mode          string                 `protobuf:"bytes,8,opt,name=mode,proto3" json:"mode,omitempty"` // override, append only
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ShopeeSyncProductRequest) Reset() {
	*x = ShopeeSyncProductRequest{}
	mi := &file_request_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ShopeeSyncProductRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShopeeSyncProductRequest) ProtoMessage() {}

func (x *ShopeeSyncProductRequest) ProtoReflect() protoreflect.Message {
	mi := &file_request_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShopeeSyncProductRequest.ProtoReflect.Descriptor instead.
func (*ShopeeSyncProductRequest) Descriptor() ([]byte, []int) {
	return file_request_proto_rawDescGZIP(), []int{37}
}

func (x *ShopeeSyncProductRequest) GetCtx() *common.Context {
	if x != nil {
		return x.Ctx
	}
	return nil
}

func (x *ShopeeSyncProductRequest) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *ShopeeSyncProductRequest) GetShopId() int64 {
	if x != nil {
		return x.ShopId
	}
	return 0
}

func (x *ShopeeSyncProductRequest) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ShopeeSyncProductRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ShopeeSyncProductRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ShopeeSyncProductRequest) GetMode() string {
	if x != nil {
		return x.Mode
	}
	return ""
}

type AddressAutocompleteRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ctx           *common.Context        `protobuf:"bytes,1,opt,name=ctx,proto3" json:"ctx,omitempty"`
	AccountId     string                 `protobuf:"bytes,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	Keyword       string                 `protobuf:"bytes,3,opt,name=keyword,proto3" json:"keyword,omitempty"`
	Language      string                 `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	Countries     []string               `protobuf:"bytes,5,rep,name=countries,proto3" json:"countries,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddressAutocompleteRequest) Reset() {
	*x = AddressAutocompleteRequest{}
	mi := &file_request_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddressAutocompleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddressAutocompleteRequest) ProtoMessage() {}

func (x *AddressAutocompleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_request_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddressAutocompleteRequest.ProtoReflect.Descriptor instead.
func (*AddressAutocompleteRequest) Descriptor() ([]byte, []int) {
	return file_request_proto_rawDescGZIP(), []int{38}
}

func (x *AddressAutocompleteRequest) GetCtx() *common.Context {
	if x != nil {
		return x.Ctx
	}
	return nil
}

func (x *AddressAutocompleteRequest) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *AddressAutocompleteRequest) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

func (x *AddressAutocompleteRequest) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *AddressAutocompleteRequest) GetCountries() []string {
	if x != nil {
		return x.Countries
	}
	return nil
}

type TasksRequest struct {
	state                   protoimpl.MessageState `protogen:"open.v1"`
	Ctx                     *common.Context        `protobuf:"bytes,1,opt,name=ctx,proto3" json:"ctx,omitempty"`
	AccountId               string                 `protobuf:"bytes,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	AssociatedTickets       []string               `protobuf:"bytes,4,rep,name=associated_tickets,json=associatedTickets,proto3" json:"associated_tickets,omitempty"`
	AssociatedUsers         []string               `protobuf:"bytes,5,rep,name=associated_users,json=associatedUsers,proto3" json:"associated_users,omitempty"`
	AssociatedOrders        []string               `protobuf:"bytes,7,rep,name=associated_orders,json=associatedOrders,proto3" json:"associated_orders,omitempty"`
	AssociatedConversations []string               `protobuf:"bytes,9,rep,name=associated_conversations,json=associatedConversations,proto3" json:"associated_conversations,omitempty"`
	CreatedHourFrom         int64                  `protobuf:"varint,10,opt,name=created_hour_from,json=createdHourFrom,proto3" json:"created_hour_from,omitempty"`
	CreatedHourTo           int64                  `protobuf:"varint,11,opt,name=created_hour_to,json=createdHourTo,proto3" json:"created_hour_to,omitempty"`
	DueDateHourFrom         int64                  `protobuf:"varint,12,opt,name=due_date_hour_from,json=dueDateHourFrom,proto3" json:"due_date_hour_from,omitempty"`
	DueDateHourTo           int64                  `protobuf:"varint,13,opt,name=due_date_hour_to,json=dueDateHourTo,proto3" json:"due_date_hour_to,omitempty"`
	Assignee                string                 `protobuf:"bytes,14,opt,name=assignee,proto3" json:"assignee,omitempty"`
	Priority                int64                  `protobuf:"varint,15,opt,name=priority,proto3" json:"priority,omitempty"`
	Status                  string                 `protobuf:"bytes,16,opt,name=status,proto3" json:"status,omitempty"`
	Limit                   int32                  `protobuf:"varint,20,opt,name=limit,proto3" json:"limit,omitempty"`
	Anchor                  string                 `protobuf:"bytes,21,opt,name=anchor,proto3" json:"anchor,omitempty"`
	Offset                  int32                  `protobuf:"varint,22,opt,name=offset,proto3" json:"offset,omitempty"`
	OrderBy                 string                 `protobuf:"bytes,30,opt,name=order_by,json=orderBy,proto3" json:"order_by,omitempty"`
	Ids                     []string               `protobuf:"bytes,23,rep,name=ids,proto3" json:"ids,omitempty"`
	LastModifieds           []int64                `protobuf:"varint,24,rep,packed,name=last_modifieds,json=lastModifieds,proto3" json:"last_modifieds,omitempty"` // ms
	Supervisor              string                 `protobuf:"bytes,25,opt,name=supervisor,proto3" json:"supervisor,omitempty"`                                    // task.supervisor = supervisor && task.assignee != supervisor
	Assignees               []string               `protobuf:"bytes,26,rep,name=assignees,proto3" json:"assignees,omitempty"`
	IsPinned                string                 `protobuf:"bytes,28,opt,name=is_pinned,json=isPinned,proto3" json:"is_pinned,omitempty"` // yes/no
	Watcher                 string                 `protobuf:"bytes,29,opt,name=watcher,proto3" json:"watcher,omitempty"`
	Shorten                 bool                   `protobuf:"varint,31,opt,name=shorten,proto3" json:"shorten,omitempty"` // only return pinned, watchers, title, assignee, supervisor, actived, duedate and title
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *TasksRequest) Reset() {
	*x = TasksRequest{}
	mi := &file_request_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TasksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TasksRequest) ProtoMessage() {}

func (x *TasksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_request_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TasksRequest.ProtoReflect.Descriptor instead.
func (*TasksRequest) Descriptor() ([]byte, []int) {
	return file_request_proto_rawDescGZIP(), []int{39}
}

func (x *TasksRequest) GetCtx() *common.Context {
	if x != nil {
		return x.Ctx
	}
	return nil
}

func (x *TasksRequest) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *TasksRequest) GetAssociatedTickets() []string {
	if x != nil {
		return x.AssociatedTickets
	}
	return nil
}

func (x *TasksRequest) GetAssociatedUsers() []string {
	if x != nil {
		return x.AssociatedUsers
	}
	return nil
}

func (x *TasksRequest) GetAssociatedOrders() []string {
	if x != nil {
		return x.AssociatedOrders
	}
	return nil
}

func (x *TasksRequest) GetAssociatedConversations() []string {
	if x != nil {
		return x.AssociatedConversations
	}
	return nil
}

func (x *TasksRequest) GetCreatedHourFrom() int64 {
	if x != nil {
		return x.CreatedHourFrom
	}
	return 0
}

func (x *TasksRequest) GetCreatedHourTo() int64 {
	if x != nil {
		return x.CreatedHourTo
	}
	return 0
}

func (x *TasksRequest) GetDueDateHourFrom() int64 {
	if x != nil {
		return x.DueDateHourFrom
	}
	return 0
}

func (x *TasksRequest) GetDueDateHourTo() int64 {
	if x != nil {
		return x.DueDateHourTo
	}
	return 0
}

func (x *TasksRequest) GetAssignee() string {
	if x != nil {
		return x.Assignee
	}
	return ""
}

func (x *TasksRequest) GetPriority() int64 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *TasksRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *TasksRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *TasksRequest) GetAnchor() string {
	if x != nil {
		return x.Anchor
	}
	return ""
}

func (x *TasksRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *TasksRequest) GetOrderBy() string {
	if x != nil {
		return x.OrderBy
	}
	return ""
}

func (x *TasksRequest) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *TasksRequest) GetLastModifieds() []int64 {
	if x != nil {
		return x.LastModifieds
	}
	return nil
}

func (x *TasksRequest) GetSupervisor() string {
	if x != nil {
		return x.Supervisor
	}
	return ""
}

func (x *TasksRequest) GetAssignees() []string {
	if x != nil {
		return x.Assignees
	}
	return nil
}

func (x *TasksRequest) GetIsPinned() string {
	if x != nil {
		return x.IsPinned
	}
	return ""
}

func (x *TasksRequest) GetWatcher() string {
	if x != nil {
		return x.Watcher
	}
	return ""
}

func (x *TasksRequest) GetShorten() bool {
	if x != nil {
		return x.Shorten
	}
	return false
}

type DocIndexRequest struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Ctx               *common.Context        `protobuf:"bytes,1,opt,name=ctx,proto3" json:"ctx,omitempty"`
	AccountId         string                 `protobuf:"bytes,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	Collection        string                 `protobuf:"bytes,3,opt,name=collection,proto3" json:"collection,omitempty"`
	DocumentId        string                 `protobuf:"bytes,4,opt,name=document_id,json=documentId,proto3" json:"document_id,omitempty"`
	Part              string                 `protobuf:"bytes,5,opt,name=part,proto3" json:"part,omitempty"`
	Content           string                 `protobuf:"bytes,6,opt,name=content,proto3" json:"content,omitempty"`
	IsName            bool                   `protobuf:"varint,7,opt,name=is_name,json=isName,proto3" json:"is_name,omitempty"` // hint for better name search
	IsId              bool                   `protobuf:"varint,10,opt,name=is_id,json=isId,proto3" json:"is_id,omitempty"`      // hint for not indexing using tokenize
	Day               int64                  `protobuf:"varint,8,opt,name=day,proto3" json:"day,omitempty"`                     // unix day for doc, used to order more recent document
	IsPhone           bool                   `protobuf:"varint,11,opt,name=is_phone,json=isPhone,proto3" json:"is_phone,omitempty"`
	IsEmail           bool                   `protobuf:"varint,12,opt,name=is_email,json=isEmail,proto3" json:"is_email,omitempty"`
	Owners            []string               `protobuf:"bytes,9,rep,name=owners,proto3" json:"owners,omitempty"`
	PrimaryDocumentId string                 `protobuf:"bytes,13,opt,name=primary_document_id,json=primaryDocumentId,proto3" json:"primary_document_id,omitempty"`
	Sec               int64                  `protobuf:"varint,14,opt,name=sec,proto3" json:"sec,omitempty"` // unix sec for doc, used to order more recent document
	Locale            string                 `protobuf:"bytes,15,opt,name=locale,proto3" json:"locale,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *DocIndexRequest) Reset() {
	*x = DocIndexRequest{}
	mi := &file_request_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DocIndexRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DocIndexRequest) ProtoMessage() {}

func (x *DocIndexRequest) ProtoReflect() protoreflect.Message {
	mi := &file_request_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DocIndexRequest.ProtoReflect.Descriptor instead.
func (*DocIndexRequest) Descriptor() ([]byte, []int) {
	return file_request_proto_rawDescGZIP(), []int{40}
}

func (x *DocIndexRequest) GetCtx() *common.Context {
	if x != nil {
		return x.Ctx
	}
	return nil
}

func (x *DocIndexRequest) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *DocIndexRequest) GetCollection() string {
	if x != nil {
		return x.Collection
	}
	return ""
}

func (x *DocIndexRequest) GetDocumentId() string {
	if x != nil {
		return x.DocumentId
	}
	return ""
}

func (x *DocIndexRequest) GetPart() string {
	if x != nil {
		return x.Part
	}
	return ""
}

func (x *DocIndexRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *DocIndexRequest) GetIsName() bool {
	if x != nil {
		return x.IsName
	}
	return false
}

func (x *DocIndexRequest) GetIsId() bool {
	if x != nil {
		return x.IsId
	}
	return false
}

func (x *DocIndexRequest) GetDay() int64 {
	if x != nil {
		return x.Day
	}
	return 0
}

func (x *DocIndexRequest) GetIsPhone() bool {
	if x != nil {
		return x.IsPhone
	}
	return false
}

func (x *DocIndexRequest) GetIsEmail() bool {
	if x != nil {
		return x.IsEmail
	}
	return false
}

func (x *DocIndexRequest) GetOwners() []string {
	if x != nil {
		return x.Owners
	}
	return nil
}

func (x *DocIndexRequest) GetPrimaryDocumentId() string {
	if x != nil {
		return x.PrimaryDocumentId
	}
	return ""
}

func (x *DocIndexRequest) GetSec() int64 {
	if x != nil {
		return x.Sec
	}
	return 0
}

func (x *DocIndexRequest) GetLocale() string {
	if x != nil {
		return x.Locale
	}
	return ""
}

type DocSearchRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ctx           *common.Context        `protobuf:"bytes,1,opt,name=ctx,proto3" json:"ctx,omitempty"`
	AccountId     string                 `protobuf:"bytes,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	Collection    string                 `protobuf:"bytes,3,opt,name=collection,proto3" json:"collection,omitempty"`
	Query         string                 `protobuf:"bytes,5,opt,name=query,proto3" json:"query,omitempty"`
	Anchor        string                 `protobuf:"bytes,6,opt,name=anchor,proto3" json:"anchor,omitempty"`
	Limit         int64                  `protobuf:"varint,7,opt,name=limit,proto3" json:"limit,omitempty"`
	IncludeParts  []string               `protobuf:"bytes,8,rep,name=include_parts,json=includeParts,proto3" json:"include_parts,omitempty"` // only include those parts
	DocDistinct   bool                   `protobuf:"varint,9,opt,name=doc_distinct,json=docDistinct,proto3" json:"doc_distinct,omitempty"`   // distinct document
	IncludeOwners []string               `protobuf:"bytes,10,rep,name=include_owners,json=includeOwners,proto3" json:"include_owners,omitempty"`
	DayAnchor     int64                  `protobuf:"varint,11,opt,name=day_anchor,json=dayAnchor,proto3" json:"day_anchor,omitempty"`
	IsOnlyId      bool                   `protobuf:"varint,12,opt,name=is_only_id,json=isOnlyId,proto3" json:"is_only_id,omitempty"`
	Locale        string                 `protobuf:"bytes,13,opt,name=locale,proto3" json:"locale,omitempty"`
	IsShorten     bool                   `protobuf:"varint,14,opt,name=is_shorten,json=isShorten,proto3" json:"is_shorten,omitempty"`
	FromMonth     int64                  `protobuf:"varint,15,opt,name=from_month,json=fromMonth,proto3" json:"from_month,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DocSearchRequest) Reset() {
	*x = DocSearchRequest{}
	mi := &file_request_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DocSearchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DocSearchRequest) ProtoMessage() {}

func (x *DocSearchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_request_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DocSearchRequest.ProtoReflect.Descriptor instead.
func (*DocSearchRequest) Descriptor() ([]byte, []int) {
	return file_request_proto_rawDescGZIP(), []int{41}
}

func (x *DocSearchRequest) GetCtx() *common.Context {
	if x != nil {
		return x.Ctx
	}
	return nil
}

func (x *DocSearchRequest) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *DocSearchRequest) GetCollection() string {
	if x != nil {
		return x.Collection
	}
	return ""
}

func (x *DocSearchRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *DocSearchRequest) GetAnchor() string {
	if x != nil {
		return x.Anchor
	}
	return ""
}

func (x *DocSearchRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *DocSearchRequest) GetIncludeParts() []string {
	if x != nil {
		return x.IncludeParts
	}
	return nil
}

func (x *DocSearchRequest) GetDocDistinct() bool {
	if x != nil {
		return x.DocDistinct
	}
	return false
}

func (x *DocSearchRequest) GetIncludeOwners() []string {
	if x != nil {
		return x.IncludeOwners
	}
	return nil
}

func (x *DocSearchRequest) GetDayAnchor() int64 {
	if x != nil {
		return x.DayAnchor
	}
	return 0
}

func (x *DocSearchRequest) GetIsOnlyId() bool {
	if x != nil {
		return x.IsOnlyId
	}
	return false
}

func (x *DocSearchRequest) GetLocale() string {
	if x != nil {
		return x.Locale
	}
	return ""
}

func (x *DocSearchRequest) GetIsShorten() bool {
	if x != nil {
		return x.IsShorten
	}
	return false
}

func (x *DocSearchRequest) GetFromMonth() int64 {
	if x != nil {
		return x.FromMonth
	}
	return 0
}

type CreateAgentRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Ctx             *common.Context        `protobuf:"bytes,1,opt,name=ctx,proto3" json:"ctx,omitempty"`
	AccountId       string                 `protobuf:"bytes,3,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"` // subiz only
	Fullname        string                 `protobuf:"bytes,4,opt,name=fullname,proto3" json:"fullname,omitempty"`
	Email           string                 `protobuf:"bytes,5,opt,name=email,proto3" json:"email,omitempty"` // reflect from agent profile
	Phone           string                 `protobuf:"bytes,8,opt,name=phone,proto3" json:"phone,omitempty"` // reflect form agent profile
	AvatarUrl       string                 `protobuf:"bytes,13,opt,name=avatar_url,json=avatarUrl,proto3" json:"avatar_url,omitempty"`
	AvatarUrl_128   string                 `protobuf:"bytes,18,opt,name=avatar_url_128,json=avatarUrl128,proto3" json:"avatar_url_128,omitempty"`
	Lang            string                 `protobuf:"bytes,14,opt,name=lang,proto3" json:"lang,omitempty"`
	Timezone        string                 `protobuf:"bytes,16,opt,name=timezone,proto3" json:"timezone,omitempty"`
	State           string                 `protobuf:"bytes,22,opt,name=state,proto3" json:"state,omitempty"` // active default
	InitialPassword string                 `protobuf:"bytes,23,opt,name=initial_password,json=initialPassword,proto3" json:"initial_password,omitempty"`
	// DashboardAgent dashboard_setting = 40;
	Scopes        []string `protobuf:"bytes,41,rep,name=scopes,proto3" json:"scopes,omitempty"`        // owner, supervisor
	Extension     int64    `protobuf:"varint,43,opt,name=extension,proto3" json:"extension,omitempty"` // 2343 3442
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateAgentRequest) Reset() {
	*x = CreateAgentRequest{}
	mi := &file_request_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateAgentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAgentRequest) ProtoMessage() {}

func (x *CreateAgentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_request_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAgentRequest.ProtoReflect.Descriptor instead.
func (*CreateAgentRequest) Descriptor() ([]byte, []int) {
	return file_request_proto_rawDescGZIP(), []int{42}
}

func (x *CreateAgentRequest) GetCtx() *common.Context {
	if x != nil {
		return x.Ctx
	}
	return nil
}

func (x *CreateAgentRequest) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *CreateAgentRequest) GetFullname() string {
	if x != nil {
		return x.Fullname
	}
	return ""
}

func (x *CreateAgentRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *CreateAgentRequest) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *CreateAgentRequest) GetAvatarUrl() string {
	if x != nil {
		return x.AvatarUrl
	}
	return ""
}

func (x *CreateAgentRequest) GetAvatarUrl_128() string {
	if x != nil {
		return x.AvatarUrl_128
	}
	return ""
}

func (x *CreateAgentRequest) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

func (x *CreateAgentRequest) GetTimezone() string {
	if x != nil {
		return x.Timezone
	}
	return ""
}

func (x *CreateAgentRequest) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *CreateAgentRequest) GetInitialPassword() string {
	if x != nil {
		return x.InitialPassword
	}
	return ""
}

func (x *CreateAgentRequest) GetScopes() []string {
	if x != nil {
		return x.Scopes
	}
	return nil
}

func (x *CreateAgentRequest) GetExtension() int64 {
	if x != nil {
		return x.Extension
	}
	return 0
}

type ListConversationsRequest struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Ctx               *common.Context        `protobuf:"bytes,1,opt,name=ctx,proto3" json:"ctx,omitempty"`
	AccountId         string                 `protobuf:"bytes,3,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	MemberId          string                 `protobuf:"bytes,8,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`                 // ignore
	IntegrationId     string                 `protobuf:"bytes,10,opt,name=integration_id,json=integrationId,proto3" json:"integration_id,omitempty"` // deprecated
	UserId            string                 `protobuf:"bytes,11,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Limit             int32                  `protobuf:"varint,5,opt,name=limit,proto3" json:"limit,omitempty"`
	AgentId           string                 `protobuf:"bytes,12,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"` // list conversations of agent
	UserIds           []string               `protobuf:"bytes,13,rep,name=user_ids,json=userIds,proto3" json:"user_ids,omitempty"` // for live, only return id and state
	State             string                 `protobuf:"bytes,14,opt,name=state,proto3" json:"state,omitempty"`
	TicketIncluded    bool                   `protobuf:"varint,15,opt,name=ticket_included,json=ticketIncluded,proto3" json:"ticket_included,omitempty"` // for agent only
	IdOnly            bool                   `protobuf:"varint,16,opt,name=id_only,json=idOnly,proto3" json:"id_only,omitempty"`                         // internal usage
	TouchpointChannel string                 `protobuf:"bytes,17,opt,name=touchpoint_channel,json=touchpointChannel,proto3" json:"touchpoint_channel,omitempty"`
	TouchpointSource  string                 `protobuf:"bytes,18,opt,name=touchpoint_source,json=touchpointSource,proto3" json:"touchpoint_source,omitempty"`
	TouchpointId      string                 `protobuf:"bytes,19,opt,name=touchpoint_id,json=touchpointId,proto3" json:"touchpoint_id,omitempty"`
	TicketIdOnly      bool                   `protobuf:"varint,20,opt,name=ticket_id_only,json=ticketIdOnly,proto3" json:"ticket_id_only,omitempty"`
	MinActivedMs      int64                  `protobuf:"varint,21,opt,name=min_actived_ms,json=minActivedMs,proto3" json:"min_actived_ms,omitempty"`
	MaxActivedMs      int64                  `protobuf:"varint,22,opt,name=max_actived_ms,json=maxActivedMs,proto3" json:"max_actived_ms,omitempty"`
	UserEventIncluded bool                   `protobuf:"varint,23,opt,name=user_event_included,json=userEventIncluded,proto3" json:"user_event_included,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *ListConversationsRequest) Reset() {
	*x = ListConversationsRequest{}
	mi := &file_request_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListConversationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListConversationsRequest) ProtoMessage() {}

func (x *ListConversationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_request_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListConversationsRequest.ProtoReflect.Descriptor instead.
func (*ListConversationsRequest) Descriptor() ([]byte, []int) {
	return file_request_proto_rawDescGZIP(), []int{43}
}

func (x *ListConversationsRequest) GetCtx() *common.Context {
	if x != nil {
		return x.Ctx
	}
	return nil
}

func (x *ListConversationsRequest) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *ListConversationsRequest) GetMemberId() string {
	if x != nil {
		return x.MemberId
	}
	return ""
}

func (x *ListConversationsRequest) GetIntegrationId() string {
	if x != nil {
		return x.IntegrationId
	}
	return ""
}

func (x *ListConversationsRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ListConversationsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListConversationsRequest) GetAgentId() string {
	if x != nil {
		return x.AgentId
	}
	return ""
}

func (x *ListConversationsRequest) GetUserIds() []string {
	if x != nil {
		return x.UserIds
	}
	return nil
}

func (x *ListConversationsRequest) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *ListConversationsRequest) GetTicketIncluded() bool {
	if x != nil {
		return x.TicketIncluded
	}
	return false
}

func (x *ListConversationsRequest) GetIdOnly() bool {
	if x != nil {
		return x.IdOnly
	}
	return false
}

func (x *ListConversationsRequest) GetTouchpointChannel() string {
	if x != nil {
		return x.TouchpointChannel
	}
	return ""
}

func (x *ListConversationsRequest) GetTouchpointSource() string {
	if x != nil {
		return x.TouchpointSource
	}
	return ""
}

func (x *ListConversationsRequest) GetTouchpointId() string {
	if x != nil {
		return x.TouchpointId
	}
	return ""
}

func (x *ListConversationsRequest) GetTicketIdOnly() bool {
	if x != nil {
		return x.TicketIdOnly
	}
	return false
}

func (x *ListConversationsRequest) GetMinActivedMs() int64 {
	if x != nil {
		return x.MinActivedMs
	}
	return 0
}

func (x *ListConversationsRequest) GetMaxActivedMs() int64 {
	if x != nil {
		return x.MaxActivedMs
	}
	return 0
}

func (x *ListConversationsRequest) GetUserEventIncluded() bool {
	if x != nil {
		return x.UserEventIncluded
	}
	return false
}

type ListConversationEventsRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Ctx            *common.Context        `protobuf:"bytes,1,opt,name=ctx,proto3" json:"ctx,omitempty"`
	AccountId      string                 `protobuf:"bytes,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	ConversationId string                 `protobuf:"bytes,3,opt,name=conversation_id,json=conversationId,proto3" json:"conversation_id,omitempty"`
	StartId        string                 `protobuf:"bytes,4,opt,name=start_id,json=startId,proto3" json:"start_id,omitempty"`
	TicketId       string                 `protobuf:"bytes,5,opt,name=ticket_id,json=ticketId,proto3" json:"ticket_id,omitempty"`
	Limit          int32                  `protobuf:"varint,6,opt,name=limit,proto3" json:"limit,omitempty"`
	MessageType    string                 `protobuf:"bytes,15,opt,name=message_type,json=messageType,proto3" json:"message_type,omitempty"` // 'empty', file, image, link, pinned
	IsPrivate      bool                   `protobuf:"varint,7,opt,name=is_private,json=isPrivate,proto3" json:"is_private,omitempty"`
	ByTypeOnly     bool                   `protobuf:"varint,8,opt,name=by_type_only,json=byTypeOnly,proto3" json:"by_type_only,omitempty"`
	MaxChars       int64                  `protobuf:"varint,9,opt,name=max_chars,json=maxChars,proto3" json:"max_chars,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ListConversationEventsRequest) Reset() {
	*x = ListConversationEventsRequest{}
	mi := &file_request_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListConversationEventsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListConversationEventsRequest) ProtoMessage() {}

func (x *ListConversationEventsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_request_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListConversationEventsRequest.ProtoReflect.Descriptor instead.
func (*ListConversationEventsRequest) Descriptor() ([]byte, []int) {
	return file_request_proto_rawDescGZIP(), []int{44}
}

func (x *ListConversationEventsRequest) GetCtx() *common.Context {
	if x != nil {
		return x.Ctx
	}
	return nil
}

func (x *ListConversationEventsRequest) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *ListConversationEventsRequest) GetConversationId() string {
	if x != nil {
		return x.ConversationId
	}
	return ""
}

func (x *ListConversationEventsRequest) GetStartId() string {
	if x != nil {
		return x.StartId
	}
	return ""
}

func (x *ListConversationEventsRequest) GetTicketId() string {
	if x != nil {
		return x.TicketId
	}
	return ""
}

func (x *ListConversationEventsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListConversationEventsRequest) GetMessageType() string {
	if x != nil {
		return x.MessageType
	}
	return ""
}

func (x *ListConversationEventsRequest) GetIsPrivate() bool {
	if x != nil {
		return x.IsPrivate
	}
	return false
}

func (x *ListConversationEventsRequest) GetByTypeOnly() bool {
	if x != nil {
		return x.ByTypeOnly
	}
	return false
}

func (x *ListConversationEventsRequest) GetMaxChars() int64 {
	if x != nil {
		return x.MaxChars
	}
	return 0
}

type ListWorkflowSessionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ctx           *common.Context        `protobuf:"bytes,1,opt,name=ctx,proto3" json:"ctx,omitempty"`
	AccountId     string                 `protobuf:"bytes,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	WorkflowId    string                 `protobuf:"bytes,3,opt,name=workflow_id,json=workflowId,proto3" json:"workflow_id,omitempty"`
	FromHour      int64                  `protobuf:"varint,4,opt,name=from_hour,json=fromHour,proto3" json:"from_hour,omitempty"`
	ToHour        int64                  `protobuf:"varint,5,opt,name=to_hour,json=toHour,proto3" json:"to_hour,omitempty"`
	Status        string                 `protobuf:"bytes,6,opt,name=status,proto3" json:"status,omitempty"` // error
	Limit         int64                  `protobuf:"varint,7,opt,name=limit,proto3" json:"limit,omitempty"`
	Anchor        string                 `protobuf:"bytes,8,opt,name=anchor,proto3" json:"anchor,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListWorkflowSessionRequest) Reset() {
	*x = ListWorkflowSessionRequest{}
	mi := &file_request_proto_msgTypes[45]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListWorkflowSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWorkflowSessionRequest) ProtoMessage() {}

func (x *ListWorkflowSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_request_proto_msgTypes[45]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWorkflowSessionRequest.ProtoReflect.Descriptor instead.
func (*ListWorkflowSessionRequest) Descriptor() ([]byte, []int) {
	return file_request_proto_rawDescGZIP(), []int{45}
}

func (x *ListWorkflowSessionRequest) GetCtx() *common.Context {
	if x != nil {
		return x.Ctx
	}
	return nil
}

func (x *ListWorkflowSessionRequest) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *ListWorkflowSessionRequest) GetWorkflowId() string {
	if x != nil {
		return x.WorkflowId
	}
	return ""
}

func (x *ListWorkflowSessionRequest) GetFromHour() int64 {
	if x != nil {
		return x.FromHour
	}
	return 0
}

func (x *ListWorkflowSessionRequest) GetToHour() int64 {
	if x != nil {
		return x.ToHour
	}
	return 0
}

func (x *ListWorkflowSessionRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ListWorkflowSessionRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListWorkflowSessionRequest) GetAnchor() string {
	if x != nil {
		return x.Anchor
	}
	return ""
}

type BillsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AccountId     string                 `protobuf:"bytes,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	FromHour      int64                  `protobuf:"varint,2,opt,name=from_hour,json=fromHour,proto3" json:"from_hour,omitempty"`
	ToHour        int64                  `protobuf:"varint,3,opt,name=to_hour,json=toHour,proto3" json:"to_hour,omitempty"`
	Limit         int32                  `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	Anchor        string                 `protobuf:"bytes,5,opt,name=anchor,proto3" json:"anchor,omitempty"`
	Offset        int32                  `protobuf:"varint,6,opt,name=offset,proto3" json:"offset,omitempty"`
	OrderIds      []string               `protobuf:"bytes,7,rep,name=order_ids,json=orderIds,proto3" json:"order_ids,omitempty"`
	OrderBy       string                 `protobuf:"bytes,8,opt,name=order_by,json=orderBy,proto3" json:"order_by,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BillsRequest) Reset() {
	*x = BillsRequest{}
	mi := &file_request_proto_msgTypes[46]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BillsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BillsRequest) ProtoMessage() {}

func (x *BillsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_request_proto_msgTypes[46]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BillsRequest.ProtoReflect.Descriptor instead.
func (*BillsRequest) Descriptor() ([]byte, []int) {
	return file_request_proto_rawDescGZIP(), []int{46}
}

func (x *BillsRequest) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *BillsRequest) GetFromHour() int64 {
	if x != nil {
		return x.FromHour
	}
	return 0
}

func (x *BillsRequest) GetToHour() int64 {
	if x != nil {
		return x.ToHour
	}
	return 0
}

func (x *BillsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *BillsRequest) GetAnchor() string {
	if x != nil {
		return x.Anchor
	}
	return ""
}

func (x *BillsRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *BillsRequest) GetOrderIds() []string {
	if x != nil {
		return x.OrderIds
	}
	return nil
}

func (x *BillsRequest) GetOrderBy() string {
	if x != nil {
		return x.OrderBy
	}
	return ""
}

type ListArticleRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ctx           *common.Context        `protobuf:"bytes,1,opt,name=ctx,proto3" json:"ctx,omitempty"`
	AccountId     string                 `protobuf:"bytes,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	Kb            string                 `protobuf:"bytes,3,opt,name=kb,proto3" json:"kb,omitempty"`
	Category      string                 `protobuf:"bytes,4,opt,name=category,proto3" json:"category,omitempty"`
	Topic         string                 `protobuf:"bytes,5,opt,name=topic,proto3" json:"topic,omitempty"`
	OrderBy       string                 `protobuf:"bytes,7,opt,name=order_by,json=orderBy,proto3" json:"order_by,omitempty"`
	Anchor        string                 `protobuf:"bytes,8,opt,name=anchor,proto3" json:"anchor,omitempty"`
	Limit         int32                  `protobuf:"varint,9,opt,name=limit,proto3" json:"limit,omitempty"`
	Shorten       bool                   `protobuf:"varint,10,opt,name=shorten,proto3" json:"shorten,omitempty"`
	Locale        string                 `protobuf:"bytes,11,opt,name=locale,proto3" json:"locale,omitempty"` // vi-VN or vi_VN or vi
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListArticleRequest) Reset() {
	*x = ListArticleRequest{}
	mi := &file_request_proto_msgTypes[47]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListArticleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListArticleRequest) ProtoMessage() {}

func (x *ListArticleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_request_proto_msgTypes[47]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListArticleRequest.ProtoReflect.Descriptor instead.
func (*ListArticleRequest) Descriptor() ([]byte, []int) {
	return file_request_proto_rawDescGZIP(), []int{47}
}

func (x *ListArticleRequest) GetCtx() *common.Context {
	if x != nil {
		return x.Ctx
	}
	return nil
}

func (x *ListArticleRequest) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *ListArticleRequest) GetKb() string {
	if x != nil {
		return x.Kb
	}
	return ""
}

func (x *ListArticleRequest) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *ListArticleRequest) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *ListArticleRequest) GetOrderBy() string {
	if x != nil {
		return x.OrderBy
	}
	return ""
}

func (x *ListArticleRequest) GetAnchor() string {
	if x != nil {
		return x.Anchor
	}
	return ""
}

func (x *ListArticleRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListArticleRequest) GetShorten() bool {
	if x != nil {
		return x.Shorten
	}
	return false
}

func (x *ListArticleRequest) GetLocale() string {
	if x != nil {
		return x.Locale
	}
	return ""
}

type SearchArticleRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ctx           *common.Context        `protobuf:"bytes,1,opt,name=ctx,proto3" json:"ctx,omitempty"`
	AccountId     string                 `protobuf:"bytes,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	Kb            string                 `protobuf:"bytes,3,opt,name=kb,proto3" json:"kb,omitempty"`
	Category      string                 `protobuf:"bytes,4,opt,name=category,proto3" json:"category,omitempty"` //
	Query         string                 `protobuf:"bytes,5,opt,name=query,proto3" json:"query,omitempty"`
	Locale        string                 `protobuf:"bytes,6,opt,name=locale,proto3" json:"locale,omitempty"` // vi_VN, en_US - required
	OrderBy       string                 `protobuf:"bytes,7,opt,name=order_by,json=orderBy,proto3" json:"order_by,omitempty"`
	Anchor        string                 `protobuf:"bytes,8,opt,name=anchor,proto3" json:"anchor,omitempty"`
	Limit         int32                  `protobuf:"varint,9,opt,name=limit,proto3" json:"limit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchArticleRequest) Reset() {
	*x = SearchArticleRequest{}
	mi := &file_request_proto_msgTypes[48]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchArticleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchArticleRequest) ProtoMessage() {}

func (x *SearchArticleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_request_proto_msgTypes[48]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchArticleRequest.ProtoReflect.Descriptor instead.
func (*SearchArticleRequest) Descriptor() ([]byte, []int) {
	return file_request_proto_rawDescGZIP(), []int{48}
}

func (x *SearchArticleRequest) GetCtx() *common.Context {
	if x != nil {
		return x.Ctx
	}
	return nil
}

func (x *SearchArticleRequest) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *SearchArticleRequest) GetKb() string {
	if x != nil {
		return x.Kb
	}
	return ""
}

func (x *SearchArticleRequest) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *SearchArticleRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *SearchArticleRequest) GetLocale() string {
	if x != nil {
		return x.Locale
	}
	return ""
}

func (x *SearchArticleRequest) GetOrderBy() string {
	if x != nil {
		return x.OrderBy
	}
	return ""
}

func (x *SearchArticleRequest) GetAnchor() string {
	if x != nil {
		return x.Anchor
	}
	return ""
}

func (x *SearchArticleRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type RedeemRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ctx           *common.Context        `protobuf:"bytes,1,opt,name=ctx,proto3" json:"ctx,omitempty"`
	AccountId     string                 `protobuf:"bytes,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	Code          string                 `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RedeemRequest) Reset() {
	*x = RedeemRequest{}
	mi := &file_request_proto_msgTypes[49]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RedeemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RedeemRequest) ProtoMessage() {}

func (x *RedeemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_request_proto_msgTypes[49]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RedeemRequest.ProtoReflect.Descriptor instead.
func (*RedeemRequest) Descriptor() ([]byte, []int) {
	return file_request_proto_rawDescGZIP(), []int{49}
}

func (x *RedeemRequest) GetCtx() *common.Context {
	if x != nil {
		return x.Ctx
	}
	return nil
}

func (x *RedeemRequest) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *RedeemRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type ListVersions struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ctx           *common.Context        `protobuf:"bytes,1,opt,name=ctx,proto3" json:"ctx,omitempty"`
	AccountId     string                 `protobuf:"bytes,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	Id            string                 `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	Anchor        string                 `protobuf:"bytes,4,opt,name=anchor,proto3" json:"anchor,omitempty"`
	Limit         int64                  `protobuf:"varint,5,opt,name=limit,proto3" json:"limit,omitempty"`
	Locale        string                 `protobuf:"bytes,6,opt,name=locale,proto3" json:"locale,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListVersions) Reset() {
	*x = ListVersions{}
	mi := &file_request_proto_msgTypes[50]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListVersions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVersions) ProtoMessage() {}

func (x *ListVersions) ProtoReflect() protoreflect.Message {
	mi := &file_request_proto_msgTypes[50]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListVersions.ProtoReflect.Descriptor instead.
func (*ListVersions) Descriptor() ([]byte, []int) {
	return file_request_proto_rawDescGZIP(), []int{50}
}

func (x *ListVersions) GetCtx() *common.Context {
	if x != nil {
		return x.Ctx
	}
	return nil
}

func (x *ListVersions) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *ListVersions) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ListVersions) GetAnchor() string {
	if x != nil {
		return x.Anchor
	}
	return ""
}

func (x *ListVersions) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListVersions) GetLocale() string {
	if x != nil {
		return x.Locale
	}
	return ""
}

type ReportCountRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ctx           *common.Context        `protobuf:"bytes,1,opt,name=ctx,proto3" json:"ctx,omitempty"`
	AccountId     string                 `protobuf:"bytes,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	Id            string                 `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	FromHour      int64                  `protobuf:"varint,6,opt,name=from_hour,json=fromHour,proto3" json:"from_hour,omitempty"`
	ToHour        int64                  `protobuf:"varint,7,opt,name=to_hour,json=toHour,proto3" json:"to_hour,omitempty"`
	EventTypes    []string               `protobuf:"bytes,8,rep,name=event_types,json=eventTypes,proto3" json:"event_types,omitempty"`
	Unit          string                 `protobuf:"bytes,9,opt,name=unit,proto3" json:"unit,omitempty"` // hour, day
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReportCountRequest) Reset() {
	*x = ReportCountRequest{}
	mi := &file_request_proto_msgTypes[51]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReportCountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportCountRequest) ProtoMessage() {}

func (x *ReportCountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_request_proto_msgTypes[51]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportCountRequest.ProtoReflect.Descriptor instead.
func (*ReportCountRequest) Descriptor() ([]byte, []int) {
	return file_request_proto_rawDescGZIP(), []int{51}
}

func (x *ReportCountRequest) GetCtx() *common.Context {
	if x != nil {
		return x.Ctx
	}
	return nil
}

func (x *ReportCountRequest) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *ReportCountRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ReportCountRequest) GetFromHour() int64 {
	if x != nil {
		return x.FromHour
	}
	return 0
}

func (x *ReportCountRequest) GetToHour() int64 {
	if x != nil {
		return x.ToHour
	}
	return 0
}

func (x *ReportCountRequest) GetEventTypes() []string {
	if x != nil {
		return x.EventTypes
	}
	return nil
}

func (x *ReportCountRequest) GetUnit() string {
	if x != nil {
		return x.Unit
	}
	return ""
}

type CounterReportRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ctx           *common.Context        `protobuf:"bytes,1,opt,name=ctx,proto3" json:"ctx,omitempty"`
	AccountId     string                 `protobuf:"bytes,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	TimeSeries    string                 `protobuf:"bytes,3,opt,name=time_series,json=timeSeries,proto3" json:"time_series,omitempty"`
	FromSec       int64                  `protobuf:"varint,5,opt,name=from_sec,json=fromSec,proto3" json:"from_sec,omitempty"`
	Range         string                 `protobuf:"bytes,6,opt,name=range,proto3" json:"range,omitempty"` // min, hour, day
	Tz            string                 `protobuf:"bytes,7,opt,name=tz,proto3" json:"tz,omitempty"`       // +00:07
	Limit         int64                  `protobuf:"varint,8,opt,name=limit,proto3" json:"limit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CounterReportRequest) Reset() {
	*x = CounterReportRequest{}
	mi := &file_request_proto_msgTypes[52]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CounterReportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CounterReportRequest) ProtoMessage() {}

func (x *CounterReportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_request_proto_msgTypes[52]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CounterReportRequest.ProtoReflect.Descriptor instead.
func (*CounterReportRequest) Descriptor() ([]byte, []int) {
	return file_request_proto_rawDescGZIP(), []int{52}
}

func (x *CounterReportRequest) GetCtx() *common.Context {
	if x != nil {
		return x.Ctx
	}
	return nil
}

func (x *CounterReportRequest) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *CounterReportRequest) GetTimeSeries() string {
	if x != nil {
		return x.TimeSeries
	}
	return ""
}

func (x *CounterReportRequest) GetFromSec() int64 {
	if x != nil {
		return x.FromSec
	}
	return 0
}

func (x *CounterReportRequest) GetRange() string {
	if x != nil {
		return x.Range
	}
	return ""
}

func (x *CounterReportRequest) GetTz() string {
	if x != nil {
		return x.Tz
	}
	return ""
}

func (x *CounterReportRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type ListKnowledgeBaseEventRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ctx           *common.Context        `protobuf:"bytes,1,opt,name=ctx,proto3" json:"ctx,omitempty"`
	AccountId     string                 `protobuf:"bytes,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	KbId          string                 `protobuf:"bytes,3,opt,name=kb_id,json=kbId,proto3" json:"kb_id,omitempty"`
	FromHour      int64                  `protobuf:"varint,4,opt,name=from_hour,json=fromHour,proto3" json:"from_hour,omitempty"`
	ToHour        int64                  `protobuf:"varint,5,opt,name=to_hour,json=toHour,proto3" json:"to_hour,omitempty"`
	EventType     string                 `protobuf:"bytes,6,opt,name=event_type,json=eventType,proto3" json:"event_type,omitempty"`
	By            string                 `protobuf:"bytes,7,opt,name=by,proto3" json:"by,omitempty"`
	Anchor        string                 `protobuf:"bytes,8,opt,name=anchor,proto3" json:"anchor,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListKnowledgeBaseEventRequest) Reset() {
	*x = ListKnowledgeBaseEventRequest{}
	mi := &file_request_proto_msgTypes[53]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListKnowledgeBaseEventRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListKnowledgeBaseEventRequest) ProtoMessage() {}

func (x *ListKnowledgeBaseEventRequest) ProtoReflect() protoreflect.Message {
	mi := &file_request_proto_msgTypes[53]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListKnowledgeBaseEventRequest.ProtoReflect.Descriptor instead.
func (*ListKnowledgeBaseEventRequest) Descriptor() ([]byte, []int) {
	return file_request_proto_rawDescGZIP(), []int{53}
}

func (x *ListKnowledgeBaseEventRequest) GetCtx() *common.Context {
	if x != nil {
		return x.Ctx
	}
	return nil
}

func (x *ListKnowledgeBaseEventRequest) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *ListKnowledgeBaseEventRequest) GetKbId() string {
	if x != nil {
		return x.KbId
	}
	return ""
}

func (x *ListKnowledgeBaseEventRequest) GetFromHour() int64 {
	if x != nil {
		return x.FromHour
	}
	return 0
}

func (x *ListKnowledgeBaseEventRequest) GetToHour() int64 {
	if x != nil {
		return x.ToHour
	}
	return 0
}

func (x *ListKnowledgeBaseEventRequest) GetEventType() string {
	if x != nil {
		return x.EventType
	}
	return ""
}

func (x *ListKnowledgeBaseEventRequest) GetBy() string {
	if x != nil {
		return x.By
	}
	return ""
}

func (x *ListKnowledgeBaseEventRequest) GetAnchor() string {
	if x != nil {
		return x.Anchor
	}
	return ""
}

type CreateAccountRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ctx           *common.Context        `protobuf:"bytes,1,opt,name=ctx,proto3" json:"ctx,omitempty"`
	Fullname      string                 `protobuf:"bytes,2,opt,name=fullname,proto3" json:"fullname,omitempty"`
	Email         string                 `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	Lang          string                 `protobuf:"bytes,4,opt,name=lang,proto3" json:"lang,omitempty"`
	Password      string                 `protobuf:"bytes,5,opt,name=password,proto3" json:"password,omitempty"`
	AccountName   string                 `protobuf:"bytes,6,opt,name=account_name,json=accountName,proto3" json:"account_name,omitempty"`
	AccountUrl    string                 `protobuf:"bytes,7,opt,name=account_url,json=accountUrl,proto3" json:"account_url,omitempty"`
	AvatarUrl     string                 `protobuf:"bytes,8,opt,name=avatar_url,json=avatarUrl,proto3" json:"avatar_url,omitempty"`
	Timezone      string                 `protobuf:"bytes,9,opt,name=timezone,proto3" json:"timezone,omitempty"`
	Phone         string                 `protobuf:"bytes,10,opt,name=phone,proto3" json:"phone,omitempty"`
	CountryCode   string                 `protobuf:"bytes,11,opt,name=country_code,json=countryCode,proto3" json:"country_code,omitempty"`
	ReferrerFrom  string                 `protobuf:"bytes,12,opt,name=referrer_from,json=referrerFrom,proto3" json:"referrer_from,omitempty"` // from cookie
	GaClientId    string                 `protobuf:"bytes,13,opt,name=ga_client_id,json=gaClientId,proto3" json:"ga_client_id,omitempty"`
	SubizUserId   string                 `protobuf:"bytes,16,opt,name=subiz_user_id,json=subizUserId,proto3" json:"subiz_user_id,omitempty"` // merge after registry
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateAccountRequest) Reset() {
	*x = CreateAccountRequest{}
	mi := &file_request_proto_msgTypes[54]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAccountRequest) ProtoMessage() {}

func (x *CreateAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_request_proto_msgTypes[54]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAccountRequest.ProtoReflect.Descriptor instead.
func (*CreateAccountRequest) Descriptor() ([]byte, []int) {
	return file_request_proto_rawDescGZIP(), []int{54}
}

func (x *CreateAccountRequest) GetCtx() *common.Context {
	if x != nil {
		return x.Ctx
	}
	return nil
}

func (x *CreateAccountRequest) GetFullname() string {
	if x != nil {
		return x.Fullname
	}
	return ""
}

func (x *CreateAccountRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *CreateAccountRequest) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

func (x *CreateAccountRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *CreateAccountRequest) GetAccountName() string {
	if x != nil {
		return x.AccountName
	}
	return ""
}

func (x *CreateAccountRequest) GetAccountUrl() string {
	if x != nil {
		return x.AccountUrl
	}
	return ""
}

func (x *CreateAccountRequest) GetAvatarUrl() string {
	if x != nil {
		return x.AvatarUrl
	}
	return ""
}

func (x *CreateAccountRequest) GetTimezone() string {
	if x != nil {
		return x.Timezone
	}
	return ""
}

func (x *CreateAccountRequest) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *CreateAccountRequest) GetCountryCode() string {
	if x != nil {
		return x.CountryCode
	}
	return ""
}

func (x *CreateAccountRequest) GetReferrerFrom() string {
	if x != nil {
		return x.ReferrerFrom
	}
	return ""
}

func (x *CreateAccountRequest) GetGaClientId() string {
	if x != nil {
		return x.GaClientId
	}
	return ""
}

func (x *CreateAccountRequest) GetSubizUserId() string {
	if x != nil {
		return x.SubizUserId
	}
	return ""
}

type NewPassword struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ctx           *common.Context        `protobuf:"bytes,1,opt,name=ctx,proto3" json:"ctx,omitempty"`
	Token         string                 `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	NewPassword   string                 `protobuf:"bytes,3,opt,name=new_password,json=newPassword,proto3" json:"new_password,omitempty"`
	OldPassword   string                 `protobuf:"bytes,5,opt,name=old_password,json=oldPassword,proto3" json:"old_password,omitempty"`
	Email         string                 `protobuf:"bytes,8,opt,name=email,proto3" json:"email,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NewPassword) Reset() {
	*x = NewPassword{}
	mi := &file_request_proto_msgTypes[55]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NewPassword) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewPassword) ProtoMessage() {}

func (x *NewPassword) ProtoReflect() protoreflect.Message {
	mi := &file_request_proto_msgTypes[55]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewPassword.ProtoReflect.Descriptor instead.
func (*NewPassword) Descriptor() ([]byte, []int) {
	return file_request_proto_rawDescGZIP(), []int{55}
}

func (x *NewPassword) GetCtx() *common.Context {
	if x != nil {
		return x.Ctx
	}
	return nil
}

func (x *NewPassword) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *NewPassword) GetNewPassword() string {
	if x != nil {
		return x.NewPassword
	}
	return ""
}

func (x *NewPassword) GetOldPassword() string {
	if x != nil {
		return x.OldPassword
	}
	return ""
}

func (x *NewPassword) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

type CrawlUrlRequest struct {
	state                         protoimpl.MessageState `protogen:"open.v1"`
	Ctx                           *common.Context        `protobuf:"bytes,1,opt,name=ctx,proto3" json:"ctx,omitempty"`
	AccountId                     string                 `protobuf:"bytes,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	LastMd5                       string                 `protobuf:"bytes,3,opt,name=last_md5,json=lastMd5,proto3" json:"last_md5,omitempty"`
	LinkOnly                      bool                   `protobuf:"varint,4,opt,name=link_only,json=linkOnly,proto3" json:"link_only,omitempty"`
	JavascriptEnabled             bool                   `protobuf:"varint,5,opt,name=javascript_enabled,json=javascriptEnabled,proto3" json:"javascript_enabled,omitempty"`
	Timeout                       int64                  `protobuf:"varint,6,opt,name=timeout,proto3" json:"timeout,omitempty"` // ms 30_000 default
	MaxDepth                      int64                  `protobuf:"varint,7,opt,name=max_depth,json=maxDepth,proto3" json:"max_depth,omitempty"`
	MaxLinks                      int64                  `protobuf:"varint,8,opt,name=max_links,json=maxLinks,proto3" json:"max_links,omitempty"` // max 1000
	LinkRegex                     string                 `protobuf:"bytes,10,opt,name=link_regex,json=linkRegex,proto3" json:"link_regex,omitempty"`
	LinkExcludeRegexs             []string               `protobuf:"bytes,14,rep,name=link_exclude_regexs,json=linkExcludeRegexs,proto3" json:"link_exclude_regexs,omitempty"`
	UseSitemapXml                 int64                  `protobuf:"varint,11,opt,name=use_sitemap_xml,json=useSitemapXml,proto3" json:"use_sitemap_xml,omitempty"`
	SitemapUrl                    string                 `protobuf:"bytes,12,opt,name=sitemap_url,json=sitemapUrl,proto3" json:"sitemap_url,omitempty"` // default domain/robots.txt
	Anchor                        string                 `protobuf:"bytes,13,opt,name=anchor,proto3" json:"anchor,omitempty"`
	Force                         bool                   `protobuf:"varint,15,opt,name=force,proto3" json:"force,omitempty"`
	Url                           string                 `protobuf:"bytes,16,opt,name=url,proto3" json:"url,omitempty"`
	CrawlKey                      string                 `protobuf:"bytes,17,opt,name=crawl_key,json=crawlKey,proto3" json:"crawl_key,omitempty"`
	SummaryModel                  string                 `protobuf:"bytes,18,opt,name=summary_model,json=summaryModel,proto3" json:"summary_model,omitempty"` // use llm to summary the webpage
	ByPassDomainVerificationCheck bool                   `protobuf:"varint,19,opt,name=by_pass_domain_verification_check,json=byPassDomainVerificationCheck,proto3" json:"by_pass_domain_verification_check,omitempty"`
	unknownFields                 protoimpl.UnknownFields
	sizeCache                     protoimpl.SizeCache
}

func (x *CrawlUrlRequest) Reset() {
	*x = CrawlUrlRequest{}
	mi := &file_request_proto_msgTypes[56]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CrawlUrlRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CrawlUrlRequest) ProtoMessage() {}

func (x *CrawlUrlRequest) ProtoReflect() protoreflect.Message {
	mi := &file_request_proto_msgTypes[56]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CrawlUrlRequest.ProtoReflect.Descriptor instead.
func (*CrawlUrlRequest) Descriptor() ([]byte, []int) {
	return file_request_proto_rawDescGZIP(), []int{56}
}

func (x *CrawlUrlRequest) GetCtx() *common.Context {
	if x != nil {
		return x.Ctx
	}
	return nil
}

func (x *CrawlUrlRequest) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *CrawlUrlRequest) GetLastMd5() string {
	if x != nil {
		return x.LastMd5
	}
	return ""
}

func (x *CrawlUrlRequest) GetLinkOnly() bool {
	if x != nil {
		return x.LinkOnly
	}
	return false
}

func (x *CrawlUrlRequest) GetJavascriptEnabled() bool {
	if x != nil {
		return x.JavascriptEnabled
	}
	return false
}

func (x *CrawlUrlRequest) GetTimeout() int64 {
	if x != nil {
		return x.Timeout
	}
	return 0
}

func (x *CrawlUrlRequest) GetMaxDepth() int64 {
	if x != nil {
		return x.MaxDepth
	}
	return 0
}

func (x *CrawlUrlRequest) GetMaxLinks() int64 {
	if x != nil {
		return x.MaxLinks
	}
	return 0
}

func (x *CrawlUrlRequest) GetLinkRegex() string {
	if x != nil {
		return x.LinkRegex
	}
	return ""
}

func (x *CrawlUrlRequest) GetLinkExcludeRegexs() []string {
	if x != nil {
		return x.LinkExcludeRegexs
	}
	return nil
}

func (x *CrawlUrlRequest) GetUseSitemapXml() int64 {
	if x != nil {
		return x.UseSitemapXml
	}
	return 0
}

func (x *CrawlUrlRequest) GetSitemapUrl() string {
	if x != nil {
		return x.SitemapUrl
	}
	return ""
}

func (x *CrawlUrlRequest) GetAnchor() string {
	if x != nil {
		return x.Anchor
	}
	return ""
}

func (x *CrawlUrlRequest) GetForce() bool {
	if x != nil {
		return x.Force
	}
	return false
}

func (x *CrawlUrlRequest) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *CrawlUrlRequest) GetCrawlKey() string {
	if x != nil {
		return x.CrawlKey
	}
	return ""
}

func (x *CrawlUrlRequest) GetSummaryModel() string {
	if x != nil {
		return x.SummaryModel
	}
	return ""
}

func (x *CrawlUrlRequest) GetByPassDomainVerificationCheck() bool {
	if x != nil {
		return x.ByPassDomainVerificationCheck
	}
	return false
}

type ListAIDataEntryRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Ctx              *common.Context        `protobuf:"bytes,1,opt,name=ctx,proto3" json:"ctx,omitempty"`
	AccountId        string                 `protobuf:"bytes,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	GroupId          string                 `protobuf:"bytes,3,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	Keyword          string                 `protobuf:"bytes,4,opt,name=keyword,proto3" json:"keyword,omitempty"`
	Anchor           string                 `protobuf:"bytes,9,opt,name=anchor,proto3" json:"anchor,omitempty"`
	Limit            int64                  `protobuf:"varint,6,opt,name=limit,proto3" json:"limit,omitempty"`
	Type             string                 `protobuf:"bytes,7,opt,name=type,proto3" json:"type,omitempty"`
	RefererId        string                 `protobuf:"bytes,8,opt,name=referer_id,json=refererId,proto3" json:"referer_id,omitempty"`
	Status           string                 `protobuf:"bytes,10,opt,name=status,proto3" json:"status,omitempty"`
	IgnoreIds        []string               `protobuf:"bytes,11,rep,name=ignore_ids,json=ignoreIds,proto3" json:"ignore_ids,omitempty"`
	OnlyIds          []string               `protobuf:"bytes,13,rep,name=only_ids,json=onlyIds,proto3" json:"only_ids,omitempty"` // only
	IdOnly           bool                   `protobuf:"varint,12,opt,name=id_only,json=idOnly,proto3" json:"id_only,omitempty"`
	IsSuggestion     bool                   `protobuf:"varint,15,opt,name=is_suggestion,json=isSuggestion,proto3" json:"is_suggestion,omitempty"`
	AiAgentId        string                 `protobuf:"bytes,16,opt,name=ai_agent_id,json=aiAgentId,proto3" json:"ai_agent_id,omitempty"`
	ExcludeAiAgentId string                 `protobuf:"bytes,17,opt,name=exclude_ai_agent_id,json=excludeAiAgentId,proto3" json:"exclude_ai_agent_id,omitempty"`
	AiAgentVersion   int64                  `protobuf:"varint,18,opt,name=ai_agent_version,json=aiAgentVersion,proto3" json:"ai_agent_version,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ListAIDataEntryRequest) Reset() {
	*x = ListAIDataEntryRequest{}
	mi := &file_request_proto_msgTypes[57]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAIDataEntryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAIDataEntryRequest) ProtoMessage() {}

func (x *ListAIDataEntryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_request_proto_msgTypes[57]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAIDataEntryRequest.ProtoReflect.Descriptor instead.
func (*ListAIDataEntryRequest) Descriptor() ([]byte, []int) {
	return file_request_proto_rawDescGZIP(), []int{57}
}

func (x *ListAIDataEntryRequest) GetCtx() *common.Context {
	if x != nil {
		return x.Ctx
	}
	return nil
}

func (x *ListAIDataEntryRequest) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *ListAIDataEntryRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *ListAIDataEntryRequest) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

func (x *ListAIDataEntryRequest) GetAnchor() string {
	if x != nil {
		return x.Anchor
	}
	return ""
}

func (x *ListAIDataEntryRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListAIDataEntryRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ListAIDataEntryRequest) GetRefererId() string {
	if x != nil {
		return x.RefererId
	}
	return ""
}

func (x *ListAIDataEntryRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ListAIDataEntryRequest) GetIgnoreIds() []string {
	if x != nil {
		return x.IgnoreIds
	}
	return nil
}

func (x *ListAIDataEntryRequest) GetOnlyIds() []string {
	if x != nil {
		return x.OnlyIds
	}
	return nil
}

func (x *ListAIDataEntryRequest) GetIdOnly() bool {
	if x != nil {
		return x.IdOnly
	}
	return false
}

func (x *ListAIDataEntryRequest) GetIsSuggestion() bool {
	if x != nil {
		return x.IsSuggestion
	}
	return false
}

func (x *ListAIDataEntryRequest) GetAiAgentId() string {
	if x != nil {
		return x.AiAgentId
	}
	return ""
}

func (x *ListAIDataEntryRequest) GetExcludeAiAgentId() string {
	if x != nil {
		return x.ExcludeAiAgentId
	}
	return ""
}

func (x *ListAIDataEntryRequest) GetAiAgentVersion() int64 {
	if x != nil {
		return x.AiAgentVersion
	}
	return 0
}

type CampaignSendLogRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Ctx            *common.Context        `protobuf:"bytes,1,opt,name=ctx,proto3" json:"ctx,omitempty"`
	AccountId      string                 `protobuf:"bytes,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	CampaignId     string                 `protobuf:"bytes,3,opt,name=campaign_id,json=campaignId,proto3" json:"campaign_id,omitempty"`
	Anchor         string                 `protobuf:"bytes,4,opt,name=anchor,proto3" json:"anchor,omitempty"`
	Limit          int32                  `protobuf:"varint,5,opt,name=limit,proto3" json:"limit,omitempty"`
	Status         string                 `protobuf:"bytes,6,opt,name=status,proto3" json:"status,omitempty"`
	UserId         string                 `protobuf:"bytes,7,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	SeenAtGt       int64                  `protobuf:"varint,8,opt,name=seen_at_gt,json=seenAtGt,proto3" json:"seen_at_gt,omitempty"`
	ClickedAtGt    int64                  `protobuf:"varint,9,opt,name=clicked_at_gt,json=clickedAtGt,proto3" json:"clicked_at_gt,omitempty"`
	ReceivedAtGt   int64                  `protobuf:"varint,10,opt,name=received_at_gt,json=receivedAtGt,proto3" json:"received_at_gt,omitempty"`
	DeliveredAtGt  int64                  `protobuf:"varint,11,opt,name=delivered_at_gt,json=deliveredAtGt,proto3" json:"delivered_at_gt,omitempty"`
	SeenAtLte      int64                  `protobuf:"varint,12,opt,name=seen_at_lte,json=seenAtLte,proto3" json:"seen_at_lte,omitempty"`
	ClickedAtLte   int64                  `protobuf:"varint,13,opt,name=clicked_at_lte,json=clickedAtLte,proto3" json:"clicked_at_lte,omitempty"`
	ReceivedAtLte  int64                  `protobuf:"varint,14,opt,name=received_at_lte,json=receivedAtLte,proto3" json:"received_at_lte,omitempty"`
	DeliveredAtLte int64                  `protobuf:"varint,15,opt,name=delivered_at_lte,json=deliveredAtLte,proto3" json:"delivered_at_lte,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CampaignSendLogRequest) Reset() {
	*x = CampaignSendLogRequest{}
	mi := &file_request_proto_msgTypes[58]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CampaignSendLogRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CampaignSendLogRequest) ProtoMessage() {}

func (x *CampaignSendLogRequest) ProtoReflect() protoreflect.Message {
	mi := &file_request_proto_msgTypes[58]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CampaignSendLogRequest.ProtoReflect.Descriptor instead.
func (*CampaignSendLogRequest) Descriptor() ([]byte, []int) {
	return file_request_proto_rawDescGZIP(), []int{58}
}

func (x *CampaignSendLogRequest) GetCtx() *common.Context {
	if x != nil {
		return x.Ctx
	}
	return nil
}

func (x *CampaignSendLogRequest) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *CampaignSendLogRequest) GetCampaignId() string {
	if x != nil {
		return x.CampaignId
	}
	return ""
}

func (x *CampaignSendLogRequest) GetAnchor() string {
	if x != nil {
		return x.Anchor
	}
	return ""
}

func (x *CampaignSendLogRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *CampaignSendLogRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *CampaignSendLogRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *CampaignSendLogRequest) GetSeenAtGt() int64 {
	if x != nil {
		return x.SeenAtGt
	}
	return 0
}

func (x *CampaignSendLogRequest) GetClickedAtGt() int64 {
	if x != nil {
		return x.ClickedAtGt
	}
	return 0
}

func (x *CampaignSendLogRequest) GetReceivedAtGt() int64 {
	if x != nil {
		return x.ReceivedAtGt
	}
	return 0
}

func (x *CampaignSendLogRequest) GetDeliveredAtGt() int64 {
	if x != nil {
		return x.DeliveredAtGt
	}
	return 0
}

func (x *CampaignSendLogRequest) GetSeenAtLte() int64 {
	if x != nil {
		return x.SeenAtLte
	}
	return 0
}

func (x *CampaignSendLogRequest) GetClickedAtLte() int64 {
	if x != nil {
		return x.ClickedAtLte
	}
	return 0
}

func (x *CampaignSendLogRequest) GetReceivedAtLte() int64 {
	if x != nil {
		return x.ReceivedAtLte
	}
	return 0
}

func (x *CampaignSendLogRequest) GetDeliveredAtLte() int64 {
	if x != nil {
		return x.DeliveredAtLte
	}
	return 0
}

type AiQnaSuggestionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ctx           *common.Context        `protobuf:"bytes,1,opt,name=ctx,proto3" json:"ctx,omitempty"`
	AccountId     string                 `protobuf:"bytes,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	AiAgentId     string                 `protobuf:"bytes,4,opt,name=ai_agent_id,json=aiAgentId,proto3" json:"ai_agent_id,omitempty"`
	Limit         int64                  `protobuf:"varint,5,opt,name=limit,proto3" json:"limit,omitempty"`
	Anchor        string                 `protobuf:"bytes,6,opt,name=anchor,proto3" json:"anchor,omitempty"`
	Status        string                 `protobuf:"bytes,7,opt,name=status,proto3" json:"status,omitempty"`
	Query         string                 `protobuf:"bytes,8,opt,name=query,proto3" json:"query,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AiQnaSuggestionRequest) Reset() {
	*x = AiQnaSuggestionRequest{}
	mi := &file_request_proto_msgTypes[59]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AiQnaSuggestionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AiQnaSuggestionRequest) ProtoMessage() {}

func (x *AiQnaSuggestionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_request_proto_msgTypes[59]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AiQnaSuggestionRequest.ProtoReflect.Descriptor instead.
func (*AiQnaSuggestionRequest) Descriptor() ([]byte, []int) {
	return file_request_proto_rawDescGZIP(), []int{59}
}

func (x *AiQnaSuggestionRequest) GetCtx() *common.Context {
	if x != nil {
		return x.Ctx
	}
	return nil
}

func (x *AiQnaSuggestionRequest) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *AiQnaSuggestionRequest) GetAiAgentId() string {
	if x != nil {
		return x.AiAgentId
	}
	return ""
}

func (x *AiQnaSuggestionRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *AiQnaSuggestionRequest) GetAnchor() string {
	if x != nil {
		return x.Anchor
	}
	return ""
}

func (x *AiQnaSuggestionRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *AiQnaSuggestionRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

type AiResponseSourceRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ctx           *common.Context        `protobuf:"bytes,1,opt,name=ctx,proto3" json:"ctx,omitempty"`
	AccountId     string                 `protobuf:"bytes,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	CallId        string                 `protobuf:"bytes,3,opt,name=call_id,json=callId,proto3" json:"call_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AiResponseSourceRequest) Reset() {
	*x = AiResponseSourceRequest{}
	mi := &file_request_proto_msgTypes[60]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AiResponseSourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AiResponseSourceRequest) ProtoMessage() {}

func (x *AiResponseSourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_request_proto_msgTypes[60]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AiResponseSourceRequest.ProtoReflect.Descriptor instead.
func (*AiResponseSourceRequest) Descriptor() ([]byte, []int) {
	return file_request_proto_rawDescGZIP(), []int{60}
}

func (x *AiResponseSourceRequest) GetCtx() *common.Context {
	if x != nil {
		return x.Ctx
	}
	return nil
}

func (x *AiResponseSourceRequest) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *AiResponseSourceRequest) GetCallId() string {
	if x != nil {
		return x.CallId
	}
	return ""
}

type FacebookPostRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ctx           *common.Context        `protobuf:"bytes,1,opt,name=ctx,proto3" json:"ctx,omitempty"`
	AccountId     string                 `protobuf:"bytes,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	PageId        string                 `protobuf:"bytes,3,opt,name=page_id,json=pageId,proto3" json:"page_id,omitempty"` // "," delimiter
	Query         string                 `protobuf:"bytes,4,opt,name=query,proto3" json:"query,omitempty"`
	IsHidden      bool                   `protobuf:"varint,8,opt,name=is_hidden,json=isHidden,proto3" json:"is_hidden,omitempty"`
	IsPublished   bool                   `protobuf:"varint,9,opt,name=is_published,json=isPublished,proto3" json:"is_published,omitempty"`
	Limit         int64                  `protobuf:"varint,10,opt,name=limit,proto3" json:"limit,omitempty"`
	Anchor        string                 `protobuf:"bytes,11,opt,name=anchor,proto3" json:"anchor,omitempty"` // string channel = 10; // facebook, instagram
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FacebookPostRequest) Reset() {
	*x = FacebookPostRequest{}
	mi := &file_request_proto_msgTypes[61]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FacebookPostRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FacebookPostRequest) ProtoMessage() {}

func (x *FacebookPostRequest) ProtoReflect() protoreflect.Message {
	mi := &file_request_proto_msgTypes[61]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FacebookPostRequest.ProtoReflect.Descriptor instead.
func (*FacebookPostRequest) Descriptor() ([]byte, []int) {
	return file_request_proto_rawDescGZIP(), []int{61}
}

func (x *FacebookPostRequest) GetCtx() *common.Context {
	if x != nil {
		return x.Ctx
	}
	return nil
}

func (x *FacebookPostRequest) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *FacebookPostRequest) GetPageId() string {
	if x != nil {
		return x.PageId
	}
	return ""
}

func (x *FacebookPostRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *FacebookPostRequest) GetIsHidden() bool {
	if x != nil {
		return x.IsHidden
	}
	return false
}

func (x *FacebookPostRequest) GetIsPublished() bool {
	if x != nil {
		return x.IsPublished
	}
	return false
}

func (x *FacebookPostRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *FacebookPostRequest) GetAnchor() string {
	if x != nil {
		return x.Anchor
	}
	return ""
}

type ListRuleRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ctx           *common.Context        `protobuf:"bytes,1,opt,name=ctx,proto3" json:"ctx,omitempty"`
	AccountId     string                 `protobuf:"bytes,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	Keyword       string                 `protobuf:"bytes,3,opt,name=keyword,proto3" json:"keyword,omitempty"`
	AssignedTo    string                 `protobuf:"bytes,4,opt,name=assigned_to,json=assignedTo,proto3" json:"assigned_to,omitempty"`
	Channel       string                 `protobuf:"bytes,5,opt,name=channel,proto3" json:"channel,omitempty"`
	IntegrationId string                 `protobuf:"bytes,6,opt,name=integration_id,json=integrationId,proto3" json:"integration_id,omitempty"`
	Limit         int64                  `protobuf:"varint,10,opt,name=limit,proto3" json:"limit,omitempty"`
	Anchor        string                 `protobuf:"bytes,11,opt,name=anchor,proto3" json:"anchor,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListRuleRequest) Reset() {
	*x = ListRuleRequest{}
	mi := &file_request_proto_msgTypes[62]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListRuleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRuleRequest) ProtoMessage() {}

func (x *ListRuleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_request_proto_msgTypes[62]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRuleRequest.ProtoReflect.Descriptor instead.
func (*ListRuleRequest) Descriptor() ([]byte, []int) {
	return file_request_proto_rawDescGZIP(), []int{62}
}

func (x *ListRuleRequest) GetCtx() *common.Context {
	if x != nil {
		return x.Ctx
	}
	return nil
}

func (x *ListRuleRequest) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *ListRuleRequest) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

func (x *ListRuleRequest) GetAssignedTo() string {
	if x != nil {
		return x.AssignedTo
	}
	return ""
}

func (x *ListRuleRequest) GetChannel() string {
	if x != nil {
		return x.Channel
	}
	return ""
}

func (x *ListRuleRequest) GetIntegrationId() string {
	if x != nil {
		return x.IntegrationId
	}
	return ""
}

func (x *ListRuleRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListRuleRequest) GetAnchor() string {
	if x != nil {
		return x.Anchor
	}
	return ""
}

type ListZNSTemplateRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ctx           *common.Context        `protobuf:"bytes,1,opt,name=ctx,proto3" json:"ctx,omitempty"`
	AccountId     string                 `protobuf:"bytes,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	OaId          string                 `protobuf:"bytes,3,opt,name=oa_id,json=oaId,proto3" json:"oa_id,omitempty"`
	Type          string                 `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	Keyword       string                 `protobuf:"bytes,5,opt,name=keyword,proto3" json:"keyword,omitempty"`
	Status        string                 `protobuf:"bytes,6,opt,name=status,proto3" json:"status,omitempty"`
	Limit         int64                  `protobuf:"varint,7,opt,name=limit,proto3" json:"limit,omitempty"`
	Anchor        string                 `protobuf:"bytes,8,opt,name=anchor,proto3" json:"anchor,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListZNSTemplateRequest) Reset() {
	*x = ListZNSTemplateRequest{}
	mi := &file_request_proto_msgTypes[63]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListZNSTemplateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListZNSTemplateRequest) ProtoMessage() {}

func (x *ListZNSTemplateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_request_proto_msgTypes[63]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListZNSTemplateRequest.ProtoReflect.Descriptor instead.
func (*ListZNSTemplateRequest) Descriptor() ([]byte, []int) {
	return file_request_proto_rawDescGZIP(), []int{63}
}

func (x *ListZNSTemplateRequest) GetCtx() *common.Context {
	if x != nil {
		return x.Ctx
	}
	return nil
}

func (x *ListZNSTemplateRequest) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *ListZNSTemplateRequest) GetOaId() string {
	if x != nil {
		return x.OaId
	}
	return ""
}

func (x *ListZNSTemplateRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ListZNSTemplateRequest) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

func (x *ListZNSTemplateRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ListZNSTemplateRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListZNSTemplateRequest) GetAnchor() string {
	if x != nil {
		return x.Anchor
	}
	return ""
}

type ListEmailSignatureRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ctx           *common.Context        `protobuf:"bytes,1,opt,name=ctx,proto3" json:"ctx,omitempty"`
	AccountId     string                 `protobuf:"bytes,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	AgentId       string                 `protobuf:"bytes,3,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"` // of agent
	Keyword       string                 `protobuf:"bytes,4,opt,name=keyword,proto3" json:"keyword,omitempty"`
	Limit         int64                  `protobuf:"varint,7,opt,name=limit,proto3" json:"limit,omitempty"`
	Anchor        string                 `protobuf:"bytes,8,opt,name=anchor,proto3" json:"anchor,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListEmailSignatureRequest) Reset() {
	*x = ListEmailSignatureRequest{}
	mi := &file_request_proto_msgTypes[64]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListEmailSignatureRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListEmailSignatureRequest) ProtoMessage() {}

func (x *ListEmailSignatureRequest) ProtoReflect() protoreflect.Message {
	mi := &file_request_proto_msgTypes[64]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListEmailSignatureRequest.ProtoReflect.Descriptor instead.
func (*ListEmailSignatureRequest) Descriptor() ([]byte, []int) {
	return file_request_proto_rawDescGZIP(), []int{64}
}

func (x *ListEmailSignatureRequest) GetCtx() *common.Context {
	if x != nil {
		return x.Ctx
	}
	return nil
}

func (x *ListEmailSignatureRequest) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *ListEmailSignatureRequest) GetAgentId() string {
	if x != nil {
		return x.AgentId
	}
	return ""
}

func (x *ListEmailSignatureRequest) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

func (x *ListEmailSignatureRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListEmailSignatureRequest) GetAnchor() string {
	if x != nil {
		return x.Anchor
	}
	return ""
}

type CreditSpendReportRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ctx           *common.Context        `protobuf:"bytes,1,opt,name=ctx,proto3" json:"ctx,omitempty"`
	AccountId     string                 `protobuf:"bytes,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	CreditId      string                 `protobuf:"bytes,3,opt,name=credit_id,json=creditId,proto3" json:"credit_id,omitempty"`
	FromTime      int64                  `protobuf:"varint,4,opt,name=from_time,json=fromTime,proto3" json:"from_time,omitempty"` // ms
	Unit          string                 `protobuf:"bytes,5,opt,name=unit,proto3" json:"unit,omitempty"`                          // hour, day, month
	Item          string                 `protobuf:"bytes,6,opt,name=item,proto3" json:"item,omitempty"`                          // just filter
	ItemId        string                 `protobuf:"bytes,7,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	Limit         int64                  `protobuf:"varint,8,opt,name=limit,proto3" json:"limit,omitempty"` // default: 24, 30, 24
	ServiceId     string                 `protobuf:"bytes,9,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	CountOnly     bool                   `protobuf:"varint,10,opt,name=count_only,json=countOnly,proto3" json:"count_only,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreditSpendReportRequest) Reset() {
	*x = CreditSpendReportRequest{}
	mi := &file_request_proto_msgTypes[65]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreditSpendReportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreditSpendReportRequest) ProtoMessage() {}

func (x *CreditSpendReportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_request_proto_msgTypes[65]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreditSpendReportRequest.ProtoReflect.Descriptor instead.
func (*CreditSpendReportRequest) Descriptor() ([]byte, []int) {
	return file_request_proto_rawDescGZIP(), []int{65}
}

func (x *CreditSpendReportRequest) GetCtx() *common.Context {
	if x != nil {
		return x.Ctx
	}
	return nil
}

func (x *CreditSpendReportRequest) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *CreditSpendReportRequest) GetCreditId() string {
	if x != nil {
		return x.CreditId
	}
	return ""
}

func (x *CreditSpendReportRequest) GetFromTime() int64 {
	if x != nil {
		return x.FromTime
	}
	return 0
}

func (x *CreditSpendReportRequest) GetUnit() string {
	if x != nil {
		return x.Unit
	}
	return ""
}

func (x *CreditSpendReportRequest) GetItem() string {
	if x != nil {
		return x.Item
	}
	return ""
}

func (x *CreditSpendReportRequest) GetItemId() string {
	if x != nil {
		return x.ItemId
	}
	return ""
}

func (x *CreditSpendReportRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *CreditSpendReportRequest) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

func (x *CreditSpendReportRequest) GetCountOnly() bool {
	if x != nil {
		return x.CountOnly
	}
	return false
}

type CreditSpendLogRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ctx           *common.Context        `protobuf:"bytes,1,opt,name=ctx,proto3" json:"ctx,omitempty"`
	AccountId     string                 `protobuf:"bytes,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	CreatedFrom   int64                  `protobuf:"varint,4,opt,name=created_from,json=createdFrom,proto3" json:"created_from,omitempty"` // ms
	Keyword       string                 `protobuf:"bytes,5,opt,name=keyword,proto3" json:"keyword,omitempty"`
	ServiceId     string                 `protobuf:"bytes,6,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"` // just filter
	Item          string                 `protobuf:"bytes,7,opt,name=item,proto3" json:"item,omitempty"`                            // just filter
	ItemId        string                 `protobuf:"bytes,8,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`          // filter by source
	CreditId      string                 `protobuf:"bytes,12,opt,name=credit_id,json=creditId,proto3" json:"credit_id,omitempty"`
	Limit         int64                  `protobuf:"varint,10,opt,name=limit,proto3" json:"limit,omitempty"` // max : 20
	Anchor        string                 `protobuf:"bytes,11,opt,name=anchor,proto3" json:"anchor,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreditSpendLogRequest) Reset() {
	*x = CreditSpendLogRequest{}
	mi := &file_request_proto_msgTypes[66]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreditSpendLogRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreditSpendLogRequest) ProtoMessage() {}

func (x *CreditSpendLogRequest) ProtoReflect() protoreflect.Message {
	mi := &file_request_proto_msgTypes[66]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreditSpendLogRequest.ProtoReflect.Descriptor instead.
func (*CreditSpendLogRequest) Descriptor() ([]byte, []int) {
	return file_request_proto_rawDescGZIP(), []int{66}
}

func (x *CreditSpendLogRequest) GetCtx() *common.Context {
	if x != nil {
		return x.Ctx
	}
	return nil
}

func (x *CreditSpendLogRequest) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *CreditSpendLogRequest) GetCreatedFrom() int64 {
	if x != nil {
		return x.CreatedFrom
	}
	return 0
}

func (x *CreditSpendLogRequest) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

func (x *CreditSpendLogRequest) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

func (x *CreditSpendLogRequest) GetItem() string {
	if x != nil {
		return x.Item
	}
	return ""
}

func (x *CreditSpendLogRequest) GetItemId() string {
	if x != nil {
		return x.ItemId
	}
	return ""
}

func (x *CreditSpendLogRequest) GetCreditId() string {
	if x != nil {
		return x.CreditId
	}
	return ""
}

func (x *CreditSpendLogRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *CreditSpendLogRequest) GetAnchor() string {
	if x != nil {
		return x.Anchor
	}
	return ""
}

type LLMSpansRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ctx           *common.Context        `protobuf:"bytes,1,opt,name=ctx,proto3" json:"ctx,omitempty"`
	AccountId     string                 `protobuf:"bytes,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	WorkflowId    string                 `protobuf:"bytes,3,opt,name=workflow_id,json=workflowId,proto3" json:"workflow_id,omitempty"` // agent_id
	SessionId     string                 `protobuf:"bytes,4,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	TraceId       string                 `protobuf:"bytes,5,opt,name=trace_id,json=traceId,proto3" json:"trace_id,omitempty"`
	SpanId        string                 `protobuf:"bytes,6,opt,name=span_id,json=spanId,proto3" json:"span_id,omitempty"` // could be empty for filtering
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LLMSpansRequest) Reset() {
	*x = LLMSpansRequest{}
	mi := &file_request_proto_msgTypes[67]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LLMSpansRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LLMSpansRequest) ProtoMessage() {}

func (x *LLMSpansRequest) ProtoReflect() protoreflect.Message {
	mi := &file_request_proto_msgTypes[67]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LLMSpansRequest.ProtoReflect.Descriptor instead.
func (*LLMSpansRequest) Descriptor() ([]byte, []int) {
	return file_request_proto_rawDescGZIP(), []int{67}
}

func (x *LLMSpansRequest) GetCtx() *common.Context {
	if x != nil {
		return x.Ctx
	}
	return nil
}

func (x *LLMSpansRequest) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *LLMSpansRequest) GetWorkflowId() string {
	if x != nil {
		return x.WorkflowId
	}
	return ""
}

func (x *LLMSpansRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *LLMSpansRequest) GetTraceId() string {
	if x != nil {
		return x.TraceId
	}
	return ""
}

func (x *LLMSpansRequest) GetSpanId() string {
	if x != nil {
		return x.SpanId
	}
	return ""
}

type AIAgentTraceRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Ctx            *common.Context        `protobuf:"bytes,1,opt,name=ctx,proto3" json:"ctx,omitempty"`
	AccountId      string                 `protobuf:"bytes,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	ConversationId string                 `protobuf:"bytes,3,opt,name=conversation_id,json=conversationId,proto3" json:"conversation_id,omitempty"` // agent_id
	MessageId      string                 `protobuf:"bytes,5,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`                // filter
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *AIAgentTraceRequest) Reset() {
	*x = AIAgentTraceRequest{}
	mi := &file_request_proto_msgTypes[68]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AIAgentTraceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AIAgentTraceRequest) ProtoMessage() {}

func (x *AIAgentTraceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_request_proto_msgTypes[68]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AIAgentTraceRequest.ProtoReflect.Descriptor instead.
func (*AIAgentTraceRequest) Descriptor() ([]byte, []int) {
	return file_request_proto_rawDescGZIP(), []int{68}
}

func (x *AIAgentTraceRequest) GetCtx() *common.Context {
	if x != nil {
		return x.Ctx
	}
	return nil
}

func (x *AIAgentTraceRequest) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *AIAgentTraceRequest) GetConversationId() string {
	if x != nil {
		return x.ConversationId
	}
	return ""
}

func (x *AIAgentTraceRequest) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

type LLMTracesRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Ctx            *common.Context        `protobuf:"bytes,1,opt,name=ctx,proto3" json:"ctx,omitempty"`
	AccountId      string                 `protobuf:"bytes,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	WorkflowId     string                 `protobuf:"bytes,3,opt,name=workflow_id,json=workflowId,proto3" json:"workflow_id,omitempty"`             // agent_id
	Version        int64                  `protobuf:"varint,5,opt,name=version,proto3" json:"version,omitempty"`                                    // filter
	ConversationId string                 `protobuf:"bytes,6,opt,name=conversation_id,json=conversationId,proto3" json:"conversation_id,omitempty"` // filter
	Feedback       int64                  `protobuf:"varint,8,opt,name=feedback,proto3" json:"feedback,omitempty"`                                  // filter by feedback
	Limit          int64                  `protobuf:"varint,10,opt,name=limit,proto3" json:"limit,omitempty"`
	Anchor         string                 `protobuf:"bytes,11,opt,name=anchor,proto3" json:"anchor,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *LLMTracesRequest) Reset() {
	*x = LLMTracesRequest{}
	mi := &file_request_proto_msgTypes[69]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LLMTracesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LLMTracesRequest) ProtoMessage() {}

func (x *LLMTracesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_request_proto_msgTypes[69]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LLMTracesRequest.ProtoReflect.Descriptor instead.
func (*LLMTracesRequest) Descriptor() ([]byte, []int) {
	return file_request_proto_rawDescGZIP(), []int{69}
}

func (x *LLMTracesRequest) GetCtx() *common.Context {
	if x != nil {
		return x.Ctx
	}
	return nil
}

func (x *LLMTracesRequest) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *LLMTracesRequest) GetWorkflowId() string {
	if x != nil {
		return x.WorkflowId
	}
	return ""
}

func (x *LLMTracesRequest) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *LLMTracesRequest) GetConversationId() string {
	if x != nil {
		return x.ConversationId
	}
	return ""
}

func (x *LLMTracesRequest) GetFeedback() int64 {
	if x != nil {
		return x.Feedback
	}
	return 0
}

func (x *LLMTracesRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *LLMTracesRequest) GetAnchor() string {
	if x != nil {
		return x.Anchor
	}
	return ""
}

type SuggestAIDataEntryRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Ctx            *common.Context        `protobuf:"bytes,1,opt,name=ctx,proto3" json:"ctx,omitempty"`
	AccountId      string                 `protobuf:"bytes,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	ConversationId string                 `protobuf:"bytes,3,opt,name=conversation_id,json=conversationId,proto3" json:"conversation_id,omitempty"`
	EventId        string                 `protobuf:"bytes,4,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	AiAgentId      string                 `protobuf:"bytes,5,opt,name=ai_agent_id,json=aiAgentId,proto3" json:"ai_agent_id,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *SuggestAIDataEntryRequest) Reset() {
	*x = SuggestAIDataEntryRequest{}
	mi := &file_request_proto_msgTypes[70]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SuggestAIDataEntryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuggestAIDataEntryRequest) ProtoMessage() {}

func (x *SuggestAIDataEntryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_request_proto_msgTypes[70]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuggestAIDataEntryRequest.ProtoReflect.Descriptor instead.
func (*SuggestAIDataEntryRequest) Descriptor() ([]byte, []int) {
	return file_request_proto_rawDescGZIP(), []int{70}
}

func (x *SuggestAIDataEntryRequest) GetCtx() *common.Context {
	if x != nil {
		return x.Ctx
	}
	return nil
}

func (x *SuggestAIDataEntryRequest) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *SuggestAIDataEntryRequest) GetConversationId() string {
	if x != nil {
		return x.ConversationId
	}
	return ""
}

func (x *SuggestAIDataEntryRequest) GetEventId() string {
	if x != nil {
		return x.EventId
	}
	return ""
}

func (x *SuggestAIDataEntryRequest) GetAiAgentId() string {
	if x != nil {
		return x.AiAgentId
	}
	return ""
}

type ListAgentOnlineRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ctx           *common.Context        `protobuf:"bytes,1,opt,name=ctx,proto3" json:"ctx,omitempty"`
	AccountId     string                 `protobuf:"bytes,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	PingAfterMs   int64                  `protobuf:"varint,3,opt,name=ping_after_ms,json=pingAfterMs,proto3" json:"ping_after_ms,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListAgentOnlineRequest) Reset() {
	*x = ListAgentOnlineRequest{}
	mi := &file_request_proto_msgTypes[71]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAgentOnlineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAgentOnlineRequest) ProtoMessage() {}

func (x *ListAgentOnlineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_request_proto_msgTypes[71]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAgentOnlineRequest.ProtoReflect.Descriptor instead.
func (*ListAgentOnlineRequest) Descriptor() ([]byte, []int) {
	return file_request_proto_rawDescGZIP(), []int{71}
}

func (x *ListAgentOnlineRequest) GetCtx() *common.Context {
	if x != nil {
		return x.Ctx
	}
	return nil
}

func (x *ListAgentOnlineRequest) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *ListAgentOnlineRequest) GetPingAfterMs() int64 {
	if x != nil {
		return x.PingAfterMs
	}
	return 0
}

type GenerateFormTokenRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Ctx             *common.Context        `protobuf:"bytes,1,opt,name=ctx,proto3" json:"ctx,omitempty"`
	AccountId       string                 `protobuf:"bytes,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	FormId          string                 `protobuf:"bytes,3,opt,name=form_id,json=formId,proto3" json:"form_id,omitempty"` // widget_offline, widget_prechat
	UserId          string                 `protobuf:"bytes,5,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ConversationId  string                 `protobuf:"bytes,6,opt,name=conversation_id,json=conversationId,proto3" json:"conversation_id,omitempty"`
	EventId         string                 `protobuf:"bytes,7,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	AttachmentIndex int64                  `protobuf:"varint,8,opt,name=attachment_index,json=attachmentIndex,proto3" json:"attachment_index,omitempty"`
	Channel         string                 `protobuf:"bytes,9,opt,name=channel,proto3" json:"channel,omitempty"`
	ChannelSource   string                 `protobuf:"bytes,10,opt,name=channel_source,json=channelSource,proto3" json:"channel_source,omitempty"`
	ChannelId       string                 `protobuf:"bytes,11,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	Expired         int64                  `protobuf:"varint,13,opt,name=expired,proto3" json:"expired,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *GenerateFormTokenRequest) Reset() {
	*x = GenerateFormTokenRequest{}
	mi := &file_request_proto_msgTypes[72]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenerateFormTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateFormTokenRequest) ProtoMessage() {}

func (x *GenerateFormTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_request_proto_msgTypes[72]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateFormTokenRequest.ProtoReflect.Descriptor instead.
func (*GenerateFormTokenRequest) Descriptor() ([]byte, []int) {
	return file_request_proto_rawDescGZIP(), []int{72}
}

func (x *GenerateFormTokenRequest) GetCtx() *common.Context {
	if x != nil {
		return x.Ctx
	}
	return nil
}

func (x *GenerateFormTokenRequest) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *GenerateFormTokenRequest) GetFormId() string {
	if x != nil {
		return x.FormId
	}
	return ""
}

func (x *GenerateFormTokenRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GenerateFormTokenRequest) GetConversationId() string {
	if x != nil {
		return x.ConversationId
	}
	return ""
}

func (x *GenerateFormTokenRequest) GetEventId() string {
	if x != nil {
		return x.EventId
	}
	return ""
}

func (x *GenerateFormTokenRequest) GetAttachmentIndex() int64 {
	if x != nil {
		return x.AttachmentIndex
	}
	return 0
}

func (x *GenerateFormTokenRequest) GetChannel() string {
	if x != nil {
		return x.Channel
	}
	return ""
}

func (x *GenerateFormTokenRequest) GetChannelSource() string {
	if x != nil {
		return x.ChannelSource
	}
	return ""
}

func (x *GenerateFormTokenRequest) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *GenerateFormTokenRequest) GetExpired() int64 {
	if x != nil {
		return x.Expired
	}
	return 0
}

type ConvertProductRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ctx           *common.Context        `protobuf:"bytes,1,opt,name=ctx,proto3" json:"ctx,omitempty"`
	AccountId     string                 `protobuf:"bytes,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	FileId        string                 `protobuf:"bytes,3,opt,name=file_id,json=fileId,proto3" json:"file_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConvertProductRequest) Reset() {
	*x = ConvertProductRequest{}
	mi := &file_request_proto_msgTypes[73]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConvertProductRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConvertProductRequest) ProtoMessage() {}

func (x *ConvertProductRequest) ProtoReflect() protoreflect.Message {
	mi := &file_request_proto_msgTypes[73]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConvertProductRequest.ProtoReflect.Descriptor instead.
func (*ConvertProductRequest) Descriptor() ([]byte, []int) {
	return file_request_proto_rawDescGZIP(), []int{73}
}

func (x *ConvertProductRequest) GetCtx() *common.Context {
	if x != nil {
		return x.Ctx
	}
	return nil
}

func (x *ConvertProductRequest) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *ConvertProductRequest) GetFileId() string {
	if x != nil {
		return x.FileId
	}
	return ""
}

type FilterProductRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Ctx             *common.Context        `protobuf:"bytes,1,opt,name=ctx,proto3" json:"ctx,omitempty"`
	AccountId       string                 `protobuf:"bytes,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	CategoryId      string                 `protobuf:"bytes,4,opt,name=category_id,json=categoryId,proto3" json:"category_id,omitempty"`          // required
	CelExpression   string                 `protobuf:"bytes,5,opt,name=cel_expression,json=celExpression,proto3" json:"cel_expression,omitempty"` // filter
	SortBy          string                 `protobuf:"bytes,6,opt,name=sort_by,json=sortBy,proto3" json:"sort_by,omitempty"`
	Limit           int64                  `protobuf:"varint,7,opt,name=limit,proto3" json:"limit,omitempty"`
	OnlyProductIds  []string               `protobuf:"bytes,8,rep,name=only_product_ids,json=onlyProductIds,proto3" json:"only_product_ids,omitempty"`
	ExcludeProducts []string               `protobuf:"bytes,9,rep,name=exclude_products,json=excludeProducts,proto3" json:"exclude_products,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *FilterProductRequest) Reset() {
	*x = FilterProductRequest{}
	mi := &file_request_proto_msgTypes[74]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FilterProductRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilterProductRequest) ProtoMessage() {}

func (x *FilterProductRequest) ProtoReflect() protoreflect.Message {
	mi := &file_request_proto_msgTypes[74]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilterProductRequest.ProtoReflect.Descriptor instead.
func (*FilterProductRequest) Descriptor() ([]byte, []int) {
	return file_request_proto_rawDescGZIP(), []int{74}
}

func (x *FilterProductRequest) GetCtx() *common.Context {
	if x != nil {
		return x.Ctx
	}
	return nil
}

func (x *FilterProductRequest) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *FilterProductRequest) GetCategoryId() string {
	if x != nil {
		return x.CategoryId
	}
	return ""
}

func (x *FilterProductRequest) GetCelExpression() string {
	if x != nil {
		return x.CelExpression
	}
	return ""
}

func (x *FilterProductRequest) GetSortBy() string {
	if x != nil {
		return x.SortBy
	}
	return ""
}

func (x *FilterProductRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *FilterProductRequest) GetOnlyProductIds() []string {
	if x != nil {
		return x.OnlyProductIds
	}
	return nil
}

func (x *FilterProductRequest) GetExcludeProducts() []string {
	if x != nil {
		return x.ExcludeProducts
	}
	return nil
}

type MarkRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ctx           *common.Context        `protobuf:"bytes,1,opt,name=ctx,proto3" json:"ctx,omitempty"`
	Topic         string                 `protobuf:"bytes,4,opt,name=topic,proto3" json:"topic,omitempty"`
	Partition     int32                  `protobuf:"varint,5,opt,name=partition,proto3" json:"partition,omitempty"`
	Offsets       []int64                `protobuf:"varint,6,rep,packed,name=offsets,proto3" json:"offsets,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MarkRequest) Reset() {
	*x = MarkRequest{}
	mi := &file_request_proto_msgTypes[75]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MarkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkRequest) ProtoMessage() {}

func (x *MarkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_request_proto_msgTypes[75]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkRequest.ProtoReflect.Descriptor instead.
func (*MarkRequest) Descriptor() ([]byte, []int) {
	return file_request_proto_rawDescGZIP(), []int{75}
}

func (x *MarkRequest) GetCtx() *common.Context {
	if x != nil {
		return x.Ctx
	}
	return nil
}

func (x *MarkRequest) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *MarkRequest) GetPartition() int32 {
	if x != nil {
		return x.Partition
	}
	return 0
}

func (x *MarkRequest) GetOffsets() []int64 {
	if x != nil {
		return x.Offsets
	}
	return nil
}

type CommitRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ctx           *common.Context        `protobuf:"bytes,1,opt,name=ctx,proto3" json:"ctx,omitempty"`
	Topic         string                 `protobuf:"bytes,4,opt,name=topic,proto3" json:"topic,omitempty"`
	Partition     int32                  `protobuf:"varint,5,opt,name=partition,proto3" json:"partition,omitempty"`
	Offset        int64                  `protobuf:"varint,6,opt,name=offset,proto3" json:"offset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CommitRequest) Reset() {
	*x = CommitRequest{}
	mi := &file_request_proto_msgTypes[76]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommitRequest) ProtoMessage() {}

func (x *CommitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_request_proto_msgTypes[76]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommitRequest.ProtoReflect.Descriptor instead.
func (*CommitRequest) Descriptor() ([]byte, []int) {
	return file_request_proto_rawDescGZIP(), []int{76}
}

func (x *CommitRequest) GetCtx() *common.Context {
	if x != nil {
		return x.Ctx
	}
	return nil
}

func (x *CommitRequest) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *CommitRequest) GetPartition() int32 {
	if x != nil {
		return x.Partition
	}
	return 0
}

func (x *CommitRequest) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type SegmentUsersRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ctx           *common.Context        `protobuf:"bytes,1,opt,name=ctx,proto3" json:"ctx,omitempty"`
	AccountId     string                 `protobuf:"bytes,3,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	SegmentId     string                 `protobuf:"bytes,4,opt,name=segment_id,json=segmentId,proto3" json:"segment_id,omitempty"`
	UserIds       []string               `protobuf:"bytes,5,rep,name=user_ids,json=userIds,proto3" json:"user_ids,omitempty"`
	Created       int64                  `protobuf:"varint,6,opt,name=created,proto3" json:"created,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SegmentUsersRequest) Reset() {
	*x = SegmentUsersRequest{}
	mi := &file_request_proto_msgTypes[77]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SegmentUsersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SegmentUsersRequest) ProtoMessage() {}

func (x *SegmentUsersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_request_proto_msgTypes[77]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SegmentUsersRequest.ProtoReflect.Descriptor instead.
func (*SegmentUsersRequest) Descriptor() ([]byte, []int) {
	return file_request_proto_rawDescGZIP(), []int{77}
}

func (x *SegmentUsersRequest) GetCtx() *common.Context {
	if x != nil {
		return x.Ctx
	}
	return nil
}

func (x *SegmentUsersRequest) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *SegmentUsersRequest) GetSegmentId() string {
	if x != nil {
		return x.SegmentId
	}
	return ""
}

func (x *SegmentUsersRequest) GetUserIds() []string {
	if x != nil {
		return x.UserIds
	}
	return nil
}

func (x *SegmentUsersRequest) GetCreated() int64 {
	if x != nil {
		return x.Created
	}
	return 0
}

type UserSegmentSyncStatusCheck struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	Ctx                   *common.Context        `protobuf:"bytes,1,opt,name=ctx,proto3" json:"ctx,omitempty"`
	AccountId             string                 `protobuf:"bytes,3,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	SegmentId             string                 `protobuf:"bytes,4,opt,name=segment_id,json=segmentId,proto3" json:"segment_id,omitempty"`
	ExternalSegmentSyncId string                 `protobuf:"bytes,5,opt,name=external_segment_sync_id,json=externalSegmentSyncId,proto3" json:"external_segment_sync_id,omitempty"`
	UserId                string                 `protobuf:"bytes,6,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *UserSegmentSyncStatusCheck) Reset() {
	*x = UserSegmentSyncStatusCheck{}
	mi := &file_request_proto_msgTypes[78]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserSegmentSyncStatusCheck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserSegmentSyncStatusCheck) ProtoMessage() {}

func (x *UserSegmentSyncStatusCheck) ProtoReflect() protoreflect.Message {
	mi := &file_request_proto_msgTypes[78]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserSegmentSyncStatusCheck.ProtoReflect.Descriptor instead.
func (*UserSegmentSyncStatusCheck) Descriptor() ([]byte, []int) {
	return file_request_proto_rawDescGZIP(), []int{78}
}

func (x *UserSegmentSyncStatusCheck) GetCtx() *common.Context {
	if x != nil {
		return x.Ctx
	}
	return nil
}

func (x *UserSegmentSyncStatusCheck) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *UserSegmentSyncStatusCheck) GetSegmentId() string {
	if x != nil {
		return x.SegmentId
	}
	return ""
}

func (x *UserSegmentSyncStatusCheck) GetExternalSegmentSyncId() string {
	if x != nil {
		return x.ExternalSegmentSyncId
	}
	return ""
}

func (x *UserSegmentSyncStatusCheck) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type ListPageSettingRequest struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	Ctx                *common.Context        `protobuf:"bytes,1,opt,name=ctx,proto3" json:"ctx,omitempty"`
	AccountId          string                 `protobuf:"bytes,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`                               // string page_id = 4;
	OnlyLeadConversion bool                   `protobuf:"varint,4,opt,name=only_lead_conversion,json=onlyLeadConversion,proto3" json:"only_lead_conversion,omitempty"` // true
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *ListPageSettingRequest) Reset() {
	*x = ListPageSettingRequest{}
	mi := &file_request_proto_msgTypes[79]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPageSettingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPageSettingRequest) ProtoMessage() {}

func (x *ListPageSettingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_request_proto_msgTypes[79]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPageSettingRequest.ProtoReflect.Descriptor instead.
func (*ListPageSettingRequest) Descriptor() ([]byte, []int) {
	return file_request_proto_rawDescGZIP(), []int{79}
}

func (x *ListPageSettingRequest) GetCtx() *common.Context {
	if x != nil {
		return x.Ctx
	}
	return nil
}

func (x *ListPageSettingRequest) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *ListPageSettingRequest) GetOnlyLeadConversion() bool {
	if x != nil {
		return x.OnlyLeadConversion
	}
	return false
}

type AIAgentDataEntryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ctx           *common.Context        `protobuf:"bytes,1,opt,name=ctx,proto3" json:"ctx,omitempty"`
	AccountId     string                 `protobuf:"bytes,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	AgentId       string                 `protobuf:"bytes,3,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`
	Mode          string                 `protobuf:"bytes,4,opt,name=mode,proto3" json:"mode,omitempty"` // draft, active
	EntryIds      []string               `protobuf:"bytes,5,rep,name=entry_ids,json=entryIds,proto3" json:"entry_ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AIAgentDataEntryRequest) Reset() {
	*x = AIAgentDataEntryRequest{}
	mi := &file_request_proto_msgTypes[80]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AIAgentDataEntryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AIAgentDataEntryRequest) ProtoMessage() {}

func (x *AIAgentDataEntryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_request_proto_msgTypes[80]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AIAgentDataEntryRequest.ProtoReflect.Descriptor instead.
func (*AIAgentDataEntryRequest) Descriptor() ([]byte, []int) {
	return file_request_proto_rawDescGZIP(), []int{80}
}

func (x *AIAgentDataEntryRequest) GetCtx() *common.Context {
	if x != nil {
		return x.Ctx
	}
	return nil
}

func (x *AIAgentDataEntryRequest) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *AIAgentDataEntryRequest) GetAgentId() string {
	if x != nil {
		return x.AgentId
	}
	return ""
}

func (x *AIAgentDataEntryRequest) GetMode() string {
	if x != nil {
		return x.Mode
	}
	return ""
}

func (x *AIAgentDataEntryRequest) GetEntryIds() []string {
	if x != nil {
		return x.EntryIds
	}
	return nil
}

type WidgetSettingRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ctx           *common.Context        `protobuf:"bytes,1,opt,name=ctx,proto3" json:"ctx,omitempty"`
	AccountId     string                 `protobuf:"bytes,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	Url           string                 `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
	IncludeBotIds []string               `protobuf:"bytes,4,rep,name=include_bot_ids,json=includeBotIds,proto3" json:"include_bot_ids,omitempty"`
	UserId        string                 `protobuf:"bytes,5,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WidgetSettingRequest) Reset() {
	*x = WidgetSettingRequest{}
	mi := &file_request_proto_msgTypes[81]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WidgetSettingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WidgetSettingRequest) ProtoMessage() {}

func (x *WidgetSettingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_request_proto_msgTypes[81]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WidgetSettingRequest.ProtoReflect.Descriptor instead.
func (*WidgetSettingRequest) Descriptor() ([]byte, []int) {
	return file_request_proto_rawDescGZIP(), []int{81}
}

func (x *WidgetSettingRequest) GetCtx() *common.Context {
	if x != nil {
		return x.Ctx
	}
	return nil
}

func (x *WidgetSettingRequest) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *WidgetSettingRequest) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *WidgetSettingRequest) GetIncludeBotIds() []string {
	if x != nil {
		return x.IncludeBotIds
	}
	return nil
}

func (x *WidgetSettingRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

var File_request_proto protoreflect.FileDescriptor

const file_request_proto_rawDesc = "" +
	"\n" +
	"\rrequest.proto\x12\x06header\x1a\fcommon.proto\x1a\raccount.proto\"\xe4\x01\n" +
	"\n" +
	"TagRequest\x12!\n" +
	"\x03ctx\x18\x01 \x01(\v2\x0f.common.ContextR\x03ctx\x12\x1d\n" +
	"\n" +
	"account_id\x18\x02 \x01(\tR\taccountId\x12'\n" +
	"\x0fconversation_id\x18\x03 \x01(\tR\x0econversationId\x12\x0e\n" +
	"\x02id\x18\x04 \x01(\tR\x02id\x12\x19\n" +
	"\border_id\x18\x05 \x01(\tR\aorderId\x12\x1b\n" +
	"\tticket_id\x18\x06 \x01(\tR\bticketId\x12#\n" +
	"\rticket_number\x18\a \x01(\tR\fticketNumber\"\xb6\x01\n" +
	"\x11UserReportRequest\x12!\n" +
	"\x03ctx\x18\x01 \x01(\v2\x0f.common.ContextR\x03ctx\x12\x1d\n" +
	"\n" +
	"account_id\x18\x02 \x01(\tR\taccountId\x12\x1b\n" +
	"\tfrom_time\x18\x04 \x01(\x03R\bfromTime\x12\x12\n" +
	"\x04unit\x18\x05 \x01(\tR\x04unit\x12\x14\n" +
	"\x05limit\x18\b \x01(\x03R\x05limit\x12\x18\n" +
	"\ametrics\x18\t \x03(\tR\ametrics\"\x8b\a\n" +
	"\x1aConversationMetricsRequest\x12\x1d\n" +
	"\n" +
	"account_id\x18\x02 \x01(\tR\taccountId\x12*\n" +
	"\x11created_hour_from\x18\x03 \x01(\x03R\x0fcreatedHourFrom\x12&\n" +
	"\x0fcreated_hour_to\x18\x04 \x01(\x03R\rcreatedHourTo\x121\n" +
	"\x15latest_sent_hour_from\x18\x10 \x01(\x03R\x12latestSentHourFrom\x12-\n" +
	"\x13latest_sent_hour_to\x18\x11 \x01(\x03R\x10latestSentHourTo\x12\x1a\n" +
	"\bchannels\x18\x05 \x03(\tR\bchannels\x12/\n" +
	"\x13channel_touchpoints\x18\x06 \x03(\tR\x12channelTouchpoints\x12\x18\n" +
	"\aratings\x18\b \x03(\x05R\aratings\x12\x12\n" +
	"\x04tags\x18\a \x03(\tR\x04tags\x12\x1b\n" +
	"\tagent_ids\x18\t \x03(\tR\bagentIds\x12$\n" +
	"\x0eagent_sent_ids\x18\x0e \x03(\tR\fagentSentIds\x129\n" +
	"\x19first_replied_duration_gt\x18\x0f \x01(\x03R\x16firstRepliedDurationGt\x12/\n" +
	"\x14send_duration_sum_gt\x18\x15 \x01(\x03R\x11sendDurationSumGt\x12;\n" +
	"\x1afirst_replied_duration_lte\x18\x16 \x01(\x03R\x17firstRepliedDurationLte\x129\n" +
	"\x19first_replied_duration_of\x18\x17 \x01(\tR\x16firstRepliedDurationOf\x12!\n" +
	"\fnot_channels\x18\x12 \x03(\tR\vnotChannels\x12=\n" +
	"\x0ebusiness_hours\x18\x13 \x01(\v2\x16.account.BusinessHoursR\rbusinessHours\x12D\n" +
	"\x12not_business_hours\x18\x14 \x01(\v2\x16.account.BusinessHoursR\x10notBusinessHours\x12\x0e\n" +
	"\x02tz\x18\n" +
	" \x01(\x05R\x02tz\x12\x10\n" +
	"\x03dim\x18\v \x01(\tR\x03dim\x12\x16\n" +
	"\x06anchor\x18\f \x01(\tR\x06anchor\x12\x14\n" +
	"\x05limit\x18\r \x01(\x05R\x05limit\"\x9f\x03\n" +
	"\x13AgentMetricsRequest\x12\x1d\n" +
	"\n" +
	"account_id\x18\x02 \x01(\tR\taccountId\x12*\n" +
	"\x11created_hour_from\x18\x03 \x01(\x03R\x0fcreatedHourFrom\x12&\n" +
	"\x0fcreated_hour_to\x18\x04 \x01(\x03R\rcreatedHourTo\x12\x1b\n" +
	"\tagent_ids\x18\x05 \x03(\tR\bagentIds\x12\x1a\n" +
	"\bchannels\x18\x06 \x03(\tR\bchannels\x12!\n" +
	"\fnot_channels\x18\a \x03(\tR\vnotChannels\x12=\n" +
	"\x0ebusiness_hours\x18\b \x01(\v2\x16.account.BusinessHoursR\rbusinessHours\x12D\n" +
	"\x12not_business_hours\x18\t \x01(\v2\x16.account.BusinessHoursR\x10notBusinessHours\x12\x0e\n" +
	"\x02tz\x18\n" +
	" \x01(\x05R\x02tz\x12\x10\n" +
	"\x03dim\x18\v \x01(\tR\x03dim\x12\x12\n" +
	"\x04tags\x18\f \x03(\tR\x04tags\"\xf4\x03\n" +
	"\x12CallMetricsRequest\x12\x1d\n" +
	"\n" +
	"account_id\x18\x02 \x01(\tR\taccountId\x12*\n" +
	"\x11created_hour_from\x18\x03 \x01(\x03R\x0fcreatedHourFrom\x12&\n" +
	"\x0fcreated_hour_to\x18\x04 \x01(\x03R\rcreatedHourTo\x12\x1b\n" +
	"\tagent_ids\x18\x05 \x03(\tR\bagentIds\x12\x16\n" +
	"\x06phones\x18\x06 \x03(\tR\x06phones\x12\x1c\n" +
	"\tdirection\x18\a \x01(\tR\tdirection\x12\x12\n" +
	"\x04tags\x18\b \x03(\tR\x04tags\x12=\n" +
	"\x0ebusiness_hours\x18\v \x01(\v2\x16.account.BusinessHoursR\rbusinessHours\x12D\n" +
	"\x12not_business_hours\x18\f \x01(\v2\x16.account.BusinessHoursR\x10notBusinessHours\x12\x0e\n" +
	"\x02tz\x18\t \x01(\x05R\x02tz\x12\x10\n" +
	"\x03dim\x18\n" +
	" \x01(\tR\x03dim\x12/\n" +
	"\x14call_duration_sum_gt\x18\x0f \x01(\x03R\x11callDurationSumGt\x12\x16\n" +
	"\x06anchor\x18\r \x01(\tR\x06anchor\x12\x14\n" +
	"\x05limit\x18\x0e \x01(\x05R\x05limit\"\xa0\x02\n" +
	"\x15ListUserEventsRequest\x12!\n" +
	"\x03ctx\x18\x01 \x01(\v2\x0f.common.ContextR\x03ctx\x12\x1d\n" +
	"\n" +
	"account_id\x18\x02 \x01(\tR\taccountId\x12\x17\n" +
	"\auser_id\x18\x03 \x01(\tR\x06userId\x12\x14\n" +
	"\x05query\x18\x04 \x01(\tR\x05query\x12\x16\n" +
	"\x06anchor\x18\x05 \x01(\tR\x06anchor\x12\x14\n" +
	"\x05limit\x18\x06 \x01(\x05R\x05limit\x12\x1a\n" +
	"\bcategory\x18\t \x01(\tR\bcategory\x12\x1d\n" +
	"\n" +
	"limit_hour\x18\n" +
	" \x01(\x05R\tlimitHour\x12\x19\n" +
	"\bend_hour\x18\v \x01(\x03R\aendHour\x12\x12\n" +
	"\x04type\x18\f \x01(\tR\x04type\"\xc4\x01\n" +
	"\x14ListEventTypeRequest\x12!\n" +
	"\x03ctx\x18\x01 \x01(\v2\x0f.common.ContextR\x03ctx\x12\x1d\n" +
	"\n" +
	"account_id\x18\x02 \x01(\tR\taccountId\x12\x1b\n" +
	"\tfrom_hour\x18\x03 \x01(\x03R\bfromHour\x12\x17\n" +
	"\ato_hour\x18\x04 \x01(\x03R\x06toHour\x12\x1a\n" +
	"\bcategory\x18\x05 \x01(\tR\bcategory\x12\x18\n" +
	"\akeyword\x18\x06 \x01(\tR\akeyword\"o\n" +
	"\x10PresencesRequest\x12!\n" +
	"\x03ctx\x18\x01 \x01(\v2\x0f.common.ContextR\x03ctx\x12\x19\n" +
	"\buser_ids\x18\x02 \x03(\tR\auserIds\x12\x1d\n" +
	"\n" +
	"account_id\x18\x03 \x01(\tR\taccountId\"\xcc\x01\n" +
	"\x0fListNotiRequest\x12!\n" +
	"\x03ctx\x18\x01 \x01(\v2\x0f.common.ContextR\x03ctx\x12\x1d\n" +
	"\n" +
	"account_id\x18\x02 \x01(\tR\taccountId\x12\x19\n" +
	"\bagent_id\x18\x03 \x01(\tR\aagentId\x12\x14\n" +
	"\x05limit\x18\x04 \x01(\x05R\x05limit\x12\x16\n" +
	"\x06anchor\x18\x05 \x01(\tR\x06anchor\x12\x1a\n" +
	"\bcategory\x18\x06 \x01(\tR\bcategory\x12\x12\n" +
	"\x04read\x18\a \x01(\tR\x04read\"\xc6\x03\n" +
	"\vUserRequest\x12!\n" +
	"\x03ctx\x18\x01 \x01(\v2\x0f.common.ContextR\x03ctx\x12\x1d\n" +
	"\n" +
	"account_id\x18\x02 \x01(\tR\taccountId\x12\x17\n" +
	"\auser_id\x18\x03 \x01(\tR\x06userId\x12\x1b\n" +
	"\tobject_id\x18\x04 \x01(\tR\bobjectId\x12\x18\n" +
	"\achannel\x18\x05 \x01(\tR\achannel\x12%\n" +
	"\x0echannel_source\x18\x06 \x01(\tR\rchannelSource\x12\x1d\n" +
	"\n" +
	"profile_id\x18\a \x01(\tR\tprofileId\x120\n" +
	"\x14label_source_channel\x18\t \x01(\tR\x12labelSourceChannel\x125\n" +
	"\x17label_source_channel_id\x18\n" +
	" \x01(\tR\x14labelSourceChannelId\x12&\n" +
	"\x0flabel_source_id\x18\v \x01(\tR\rlabelSourceId\x12\x1d\n" +
	"\n" +
	"label_name\x18\f \x01(\tR\tlabelName\x12/\n" +
	"\x14set_as_primary_owner\x18\r \x01(\bR\x11setAsPrimaryOwner\"m\n" +
	"\x10ListNotesRequest\x12!\n" +
	"\x03ctx\x18\x01 \x01(\v2\x0f.common.ContextR\x03ctx\x12\x1d\n" +
	"\n" +
	"account_id\x18\x02 \x01(\tR\taccountId\x12\x17\n" +
	"\auser_id\x18\x03 \x01(\tR\x06userId\"_\n" +
	"\x11DeleteNoteRequest\x12\x1d\n" +
	"\n" +
	"account_id\x18\x02 \x01(\tR\taccountId\x12\x1b\n" +
	"\ttarget_id\x18\x03 \x01(\tR\btargetId\x12\x0e\n" +
	"\x02id\x18\x04 \x01(\tR\x02id\"\xfd\x01\n" +
	"\x1cUpdateWorkflowSessionRequest\x12!\n" +
	"\x03ctx\x18\x01 \x01(\v2\x0f.common.ContextR\x03ctx\x12\x1d\n" +
	"\n" +
	"account_id\x18\x02 \x01(\tR\taccountId\x12\x1f\n" +
	"\vworkflow_id\x18\x03 \x01(\tR\n" +
	"workflowId\x12\x1d\n" +
	"\n" +
	"session_id\x18\x04 \x01(\tR\tsessionId\x12\x18\n" +
	"\acommand\x18\x05 \x01(\tR\acommand\x12$\n" +
	"\x0enext_action_id\x18\x06 \x01(\tR\fnextActionId\x12\x1b\n" +
	"\tthread_id\x18\a \x01(\tR\bthreadId\"\x9c\x02\n" +
	"\x16ListWorkflowLogRequest\x12!\n" +
	"\x03ctx\x18\x01 \x01(\v2\x0f.common.ContextR\x03ctx\x12\x1d\n" +
	"\n" +
	"account_id\x18\x02 \x01(\tR\taccountId\x12\x1f\n" +
	"\vworkflow_id\x18\x03 \x01(\tR\n" +
	"workflowId\x12\x1d\n" +
	"\n" +
	"session_id\x18\x04 \x01(\tR\tsessionId\x12\x1b\n" +
	"\tobject_id\x18\x05 \x01(\tR\bobjectId\x12\x14\n" +
	"\x05limit\x18\x06 \x01(\x03R\x05limit\x12\x16\n" +
	"\x06anchor\x18\a \x01(\tR\x06anchor\x125\n" +
	"\x17is_include_internal_log\x18\b \x01(\bR\x14isIncludeInternalLog\"}\n" +
	"\vBotsRequest\x12!\n" +
	"\x03ctx\x18\x01 \x01(\v2\x0f.common.ContextR\x03ctx\x12\x14\n" +
	"\x05query\x18\x02 \x01(\tR\x05query\x12\x16\n" +
	"\x06anchor\x18\x03 \x01(\tR\x06anchor\x12\x1d\n" +
	"\n" +
	"account_id\x18\x04 \x01(\tR\taccountId\"\xba\x03\n" +
	"\x19ListAIAgentMessageRequest\x12!\n" +
	"\x03ctx\x18\x01 \x01(\v2\x0f.common.ContextR\x03ctx\x12\x1d\n" +
	"\n" +
	"account_id\x18\x02 \x01(\tR\taccountId\x12\x19\n" +
	"\bagent_id\x18\x03 \x01(\tR\aagentId\x12\x17\n" +
	"\afrom_ms\x18\x04 \x01(\x03R\x06fromMs\x12\x13\n" +
	"\x05to_ms\x18\x06 \x01(\x03R\x04toMs\x12\x16\n" +
	"\x06anchor\x18\x05 \x01(\tR\x06anchor\x12\x1d\n" +
	"\n" +
	"count_only\x18\a \x01(\bR\tcountOnly\x12\x16\n" +
	"\x06rating\x18\b \x01(\tR\x06rating\x12*\n" +
	"\x11is_missing_source\x18\n" +
	" \x01(\bR\x0fisMissingSource\x12\x1d\n" +
	"\n" +
	"is_refused\x18\v \x01(\bR\tisRefused\x12\x18\n" +
	"\aversion\x18\x14 \x01(\x03R\aversion\x12\x18\n" +
	"\achannel\x18\x16 \x01(\tR\achannel\x12%\n" +
	"\x0echannel_source\x18\x17 \x01(\tR\rchannelSource\x12\x1d\n" +
	"\n" +
	"channel_id\x18\x18 \x01(\tR\tchannelId\"\xdb\x02\n" +
	"\x19ReportConvoMessageRequest\x12!\n" +
	"\x03ctx\x18\x01 \x01(\v2\x0f.common.ContextR\x03ctx\x12\x1d\n" +
	"\n" +
	"account_id\x18\x02 \x01(\tR\taccountId\x12\x19\n" +
	"\bagent_id\x18\x03 \x01(\tR\aagentId\x12\x17\n" +
	"\afrom_ms\x18\x04 \x01(\x03R\x06fromMs\x12\x13\n" +
	"\x05to_ms\x18\x06 \x01(\x03R\x04toMs\x12\x16\n" +
	"\x06anchor\x18\x05 \x01(\tR\x06anchor\x12\x1d\n" +
	"\n" +
	"count_only\x18\a \x01(\bR\tcountOnly\x12\x1c\n" +
	"\tsentiment\x18\x14 \x01(\tR\tsentiment\x12\x18\n" +
	"\achannel\x18\x16 \x01(\tR\achannel\x12%\n" +
	"\x0echannel_source\x18\x17 \x01(\tR\rchannelSource\x12\x1d\n" +
	"\n" +
	"channel_id\x18\x18 \x01(\tR\tchannelId\"\xb4\x02\n" +
	"\x14ReportAIAgentRequest\x12!\n" +
	"\x03ctx\x18\x01 \x01(\v2\x0f.common.ContextR\x03ctx\x12\x1d\n" +
	"\n" +
	"account_id\x18\x02 \x01(\tR\taccountId\x12\x19\n" +
	"\bagent_id\x18\x03 \x01(\tR\aagentId\x12\x1d\n" +
	"\n" +
	"start_hour\x18\x04 \x01(\x03R\tstartHour\x12\x19\n" +
	"\bend_hour\x18\v \x01(\x03R\aendHour\x12\x14\n" +
	"\x05range\x18\x05 \x01(\tR\x05range\x12\x14\n" +
	"\x05limit\x18\x06 \x01(\x03R\x05limit\x12\x0e\n" +
	"\x02tz\x18\a \x01(\x03R\x02tz\x12\x16\n" +
	"\x06metric\x18\b \x01(\tR\x06metric\x12\x19\n" +
	"\bgroup_by\x18\t \x01(\tR\agroupBy\x12\x16\n" +
	"\x06anchor\x18\n" +
	" \x01(\tR\x06anchor\"z\n" +
	"\x10ReportBotRequest\x12\x1d\n" +
	"\n" +
	"account_id\x18\x02 \x01(\tR\taccountId\x12\x15\n" +
	"\x06bot_id\x18\x03 \x01(\tR\x05botId\x12\x19\n" +
	"\bday_from\x18\x04 \x01(\x03R\adayFrom\x12\x15\n" +
	"\x06day_to\x18\x05 \x01(\x03R\x05dayTo\"\xc5\x01\n" +
	"\x17ActionrunMetricsRequest\x12\x10\n" +
	"\x03dim\x18\x02 \x01(\tR\x03dim\x12\x0e\n" +
	"\x02tz\x18\x03 \x01(\x05R\x02tz\x12\x1d\n" +
	"\n" +
	"account_id\x18\x04 \x01(\tR\taccountId\x12\x15\n" +
	"\x06bot_id\x18\x05 \x01(\tR\x05botId\x12*\n" +
	"\x11created_hour_from\x18\x06 \x01(\x03R\x0fcreatedHourFrom\x12&\n" +
	"\x0fcreated_hour_to\x18\a \x01(\x03R\rcreatedHourTo\"\xc2\x01\n" +
	"\x14BotrunMetricsRequest\x12\x10\n" +
	"\x03dim\x18\x02 \x01(\tR\x03dim\x12\x0e\n" +
	"\x02tz\x18\x03 \x01(\x05R\x02tz\x12\x1d\n" +
	"\n" +
	"account_id\x18\x04 \x01(\tR\taccountId\x12\x15\n" +
	"\x06bot_id\x18\x05 \x01(\tR\x05botId\x12*\n" +
	"\x11created_hour_from\x18\x06 \x01(\x03R\x0fcreatedHourFrom\x12&\n" +
	"\x0fcreated_hour_to\x18\a \x01(\x03R\rcreatedHourTo\"\xfe\x01\n" +
	"\x12ListObjectsRequest\x12\x1d\n" +
	"\n" +
	"account_id\x18\x02 \x01(\tR\taccountId\x12\x15\n" +
	"\x06bot_id\x18\x03 \x01(\tR\x05botId\x12*\n" +
	"\x11created_hour_from\x18\b \x01(\x03R\x0fcreatedHourFrom\x12&\n" +
	"\x0fcreated_hour_to\x18\t \x01(\x03R\rcreatedHourTo\x12\x16\n" +
	"\x06anchor\x18\x06 \x01(\tR\x06anchor\x12\x14\n" +
	"\x05limit\x18\a \x01(\x05R\x05limit\x12\x19\n" +
	"\bday_from\x18\x04 \x01(\x03R\adayFrom\x12\x15\n" +
	"\x06day_to\x18\x05 \x01(\x03R\x05dayTo\"\xfe\x01\n" +
	"\x11ConversionRequest\x12!\n" +
	"\x03ctx\x18\x01 \x01(\v2\x0f.common.ContextR\x03ctx\x12\x1d\n" +
	"\n" +
	"account_id\x18\x02 \x01(\tR\taccountId\x12\x1f\n" +
	"\vcampaign_id\x18\x03 \x01(\tR\n" +
	"campaignId\x12\x16\n" +
	"\x06anchor\x18\x04 \x01(\tR\x06anchor\x12\x14\n" +
	"\x05limit\x18\x05 \x01(\x05R\x05limit\x12\x1b\n" +
	"\tfrom_hour\x18\a \x01(\x05R\bfromHour\x12\x17\n" +
	"\ato_hour\x18\b \x01(\x05R\x06toHour\x12\"\n" +
	"\rweb_plugin_id\x18\t \x01(\tR\vwebPluginId\"\xf2\x01\n" +
	"\x15ReportCampaignRequest\x12!\n" +
	"\x03ctx\x18\x01 \x01(\v2\x0f.common.ContextR\x03ctx\x12\x1d\n" +
	"\n" +
	"account_id\x18\x03 \x01(\tR\taccountId\x12\x1f\n" +
	"\vcampaign_id\x18\x04 \x01(\tR\n" +
	"campaignId\x12\x1b\n" +
	"\tfrom_hour\x18\x05 \x01(\x05R\bfromHour\x12\x17\n" +
	"\ato_hour\x18\x06 \x01(\x05R\x06toHour\x12\x14\n" +
	"\x05range\x18\a \x01(\tR\x05range\x12\x0e\n" +
	"\x02tz\x18\b \x01(\x05R\x02tz\"\x1a\n" +
	"\x05Range\x12\b\n" +
	"\x04hour\x10\x00\x12\a\n" +
	"\x03day\x10\x01\"\xf6\x01\n" +
	"\x16ReportWebPluginRequest\x12!\n" +
	"\x03ctx\x18\x01 \x01(\v2\x0f.common.ContextR\x03ctx\x12\x1d\n" +
	"\n" +
	"account_id\x18\x03 \x01(\tR\taccountId\x12\"\n" +
	"\rweb_plugin_id\x18\x04 \x01(\tR\vwebPluginId\x12\x1b\n" +
	"\tfrom_hour\x18\x05 \x01(\x05R\bfromHour\x12\x17\n" +
	"\ato_hour\x18\x06 \x01(\x05R\x06toHour\x12\x14\n" +
	"\x05range\x18\a \x01(\tR\x05range\x12\x0e\n" +
	"\x02tz\x18\b \x01(\x05R\x02tz\"\x1a\n" +
	"\x05Range\x12\b\n" +
	"\x04hour\x10\x00\x12\a\n" +
	"\x03day\x10\x01\"\xf4\x01\n" +
	"\x1aWebPluginConversionRequest\x12!\n" +
	"\x03ctx\x18\x01 \x01(\v2\x0f.common.ContextR\x03ctx\x12\x1d\n" +
	"\n" +
	"account_id\x18\x02 \x01(\tR\taccountId\x12\"\n" +
	"\rweb_plugin_id\x18\x03 \x01(\tR\vwebPluginId\x12\"\n" +
	"\runix_day_from\x18\x05 \x01(\x03R\vunixDayFrom\x12\x1e\n" +
	"\vunix_day_to\x18\x06 \x01(\x03R\tunixDayTo\x12\x16\n" +
	"\x06anchor\x18\b \x01(\tR\x06anchor\x12\x14\n" +
	"\x05limit\x18\t \x01(\x05R\x05limit\"g\n" +
	"\x16SearchLocationsRequest\x12!\n" +
	"\x03ctx\x18\x01 \x01(\v2\x0f.common.ContextR\x03ctx\x12\x14\n" +
	"\x05query\x18\x02 \x01(\tR\x05query\x12\x14\n" +
	"\x05limit\x18\x04 \x01(\x03R\x05limit\"t\n" +
	"\x1aRecentIndexDeliveryRequest\x12!\n" +
	"\x03ctx\x18\x01 \x01(\v2\x0f.common.ContextR\x03ctx\x12\x1d\n" +
	"\n" +
	"webhook_id\x18\x02 \x01(\tR\twebhookId\x12\x14\n" +
	"\x05limit\x18\x03 \x01(\x05R\x05limit\"c\n" +
	"\x0fDeliveryRequest\x12!\n" +
	"\x03ctx\x18\x01 \x01(\v2\x0f.common.ContextR\x03ctx\x12\x1d\n" +
	"\n" +
	"webhook_id\x18\x02 \x01(\tR\twebhookId\x12\x0e\n" +
	"\x02id\x18\x03 \x01(\x05R\x02id\"\xfe\x02\n" +
	"\rSearchRequest\x12!\n" +
	"\x03ctx\x18\x01 \x01(\v2\x0f.common.ContextR\x03ctx\x12\x1d\n" +
	"\n" +
	"account_id\x18\x02 \x01(\tR\taccountId\x12\x14\n" +
	"\x05query\x18\x04 \x01(\tR\x05query\x12\x14\n" +
	"\x05limit\x18\x05 \x01(\x05R\x05limit\x12\x19\n" +
	"\bagent_id\x18\b \x01(\tR\aagentId\x12\x16\n" +
	"\x06labels\x18\t \x03(\tR\x06labels\x12\x16\n" +
	"\x06agents\x18\n" +
	" \x03(\tR\x06agents\x12\x1d\n" +
	"\n" +
	"is_private\x18\v \x01(\bR\tisPrivate\x12\x1f\n" +
	"\vonly_header\x18\r \x01(\bR\n" +
	"onlyHeader\x12'\n" +
	"\x0fconversation_id\x18\x0e \x01(\tR\x0econversationId\x12\x16\n" +
	"\x06anchor\x18\x0f \x01(\tR\x06anchor\x123\n" +
	"\x15exclude_conversations\x18\x10 \x03(\tR\x14excludeConversations\"\xf3\x01\n" +
	"\x19AvailibilityReportRequest\x12!\n" +
	"\x03ctx\x18\x01 \x01(\v2\x0f.common.ContextR\x03ctx\x12\x1d\n" +
	"\n" +
	"account_id\x18\x02 \x01(\tR\taccountId\x12\x19\n" +
	"\bagent_id\x18\x03 \x01(\tR\aagentId\x12\x12\n" +
	"\x04from\x18\x05 \x01(\tR\x04from\x12\x14\n" +
	"\x05range\x18\b \x01(\tR\x05range\x12(\n" +
	"\x10number_of_points\x18\r \x01(\x05R\x0enumberOfPoints\"%\n" +
	"\x05Range\x12\b\n" +
	"\x04hour\x10\x00\x12\a\n" +
	"\x03day\x10\x01\x12\t\n" +
	"\x05month\x10\x02\"\x8a\x03\n" +
	"\x16FileUrlDownloadRequest\x12!\n" +
	"\x03ctx\x18\x01 \x01(\v2\x0f.common.ContextR\x03ctx\x12\x1d\n" +
	"\n" +
	"account_id\x18\x02 \x01(\tR\taccountId\x12\x10\n" +
	"\x03url\x18\x03 \x01(\tR\x03url\x12\x19\n" +
	"\bmax_size\x18\x04 \x01(\x03R\amaxSize\x12\x1f\n" +
	"\vtype_prefix\x18\x05 \x01(\tR\n" +
	"typePrefix\x12\x18\n" +
	"\atimeout\x18\x06 \x01(\x03R\atimeout\x12\x1d\n" +
	"\n" +
	"user_agent\x18\a \x01(\tR\tuserAgent\x12\x1b\n" +
	"\ttype_hint\x18\b \x01(\tR\btypeHint\x12\x1c\n" +
	"\textension\x18\t \x01(\tR\textension\x12\x1d\n" +
	"\n" +
	"max_height\x18\n" +
	" \x01(\x03R\tmaxHeight\x12\x1b\n" +
	"\tmax_width\x18\v \x01(\x03R\bmaxWidth\x12\x1a\n" +
	"\bcategory\x18\f \x01(\tR\bcategory\x12\x14\n" +
	"\x05force\x18\r \x01(\x03R\x05force\"\x8f\x05\n" +
	"\x13OrderMetricsRequest\x12\x10\n" +
	"\x03dim\x18\x02 \x01(\tR\x03dim\x12\x0e\n" +
	"\x02tz\x18\x03 \x01(\x05R\x02tz\x12\x1d\n" +
	"\n" +
	"account_id\x18\n" +
	" \x01(\tR\taccountId\x12&\n" +
	"\x0fissue_hour_from\x18\v \x01(\x03R\rissueHourFrom\x12\"\n" +
	"\rissue_hour_to\x18\f \x01(\x03R\vissueHourTo\x12$\n" +
	"\x0epaid_hour_from\x18\r \x01(\x03R\fpaidHourFrom\x12 \n" +
	"\fpaid_hour_to\x18\x0e \x01(\x03R\n" +
	"paidHourTo\x12\x1a\n" +
	"\bchannels\x18\x0f \x03(\tR\bchannels\x12!\n" +
	"\fnot_channels\x18\x10 \x03(\tR\vnotChannels\x12/\n" +
	"\x13channel_touchpoints\x18\x11 \x03(\tR\x12channelTouchpoints\x12\x1f\n" +
	"\vproduct_ids\x18\x12 \x03(\tR\n" +
	"productIds\x12 \n" +
	"\vsalesperson\x18\x13 \x03(\tR\vsalesperson\x12\x17\n" +
	"\apos_ids\x18\x14 \x03(\tR\x06posIds\x12=\n" +
	"\x0ebusiness_hours\x18\x17 \x01(\v2\x16.account.BusinessHoursR\rbusinessHours\x12D\n" +
	"\x12not_business_hours\x18\x18 \x01(\v2\x16.account.BusinessHoursR\x10notBusinessHours\x12*\n" +
	"\x11created_hour_from\x18\x19 \x01(\x03R\x0fcreatedHourFrom\x12&\n" +
	"\x0fcreated_hour_to\x18\x1a \x01(\x03R\rcreatedHourTo\"\xfa\a\n" +
	"\rOrdersRequest\x12!\n" +
	"\x03ctx\x18\x01 \x01(\v2\x0f.common.ContextR\x03ctx\x12\x1d\n" +
	"\n" +
	"account_id\x18\x02 \x01(\tR\taccountId\x12\x17\n" +
	"\auser_id\x18\x03 \x01(\tR\x06userId\x12\x16\n" +
	"\x06status\x18\x04 \x01(\tR\x06status\x12*\n" +
	"\x11created_hour_from\x18\x05 \x01(\x03R\x0fcreatedHourFrom\x12&\n" +
	"\x0fcreated_hour_to\x18\x06 \x01(\x03R\rcreatedHourTo\x12+\n" +
	"\x12due_date_hour_from\x18\x14 \x01(\x03R\x0fdueDateHourFrom\x12'\n" +
	"\x10due_date_hour_to\x18\x15 \x01(\x03R\rdueDateHourTo\x12&\n" +
	"\x0fissue_hour_from\x18\x16 \x01(\x03R\rissueHourFrom\x12\"\n" +
	"\rissue_hour_to\x18\x17 \x01(\x03R\vissueHourTo\x12'\n" +
	"\x0finclude_deleted\x18\a \x01(\bR\x0eincludeDeleted\x12\x14\n" +
	"\x05limit\x18\b \x01(\x05R\x05limit\x12\x16\n" +
	"\x06anchor\x18\t \x01(\tR\x06anchor\x12\x16\n" +
	"\x06offset\x18\x12 \x01(\x05R\x06offset\x12\x10\n" +
	"\x03dim\x18\x11 \x01(\tR\x03dim\x12\x19\n" +
	"\border_by\x18\x13 \x01(\tR\aorderBy\x12\x10\n" +
	"\x03ids\x18\n" +
	" \x03(\tR\x03ids\x12\x1c\n" +
	"\tmodifieds\x18\v \x03(\x03R\tmodifieds\x12\x14\n" +
	"\x05query\x18\f \x01(\tR\x05query\x12\x19\n" +
	"\bis_draft\x18\r \x01(\bR\aisDraft\x12%\n" +
	"\x0epayment_status\x18\x0e \x01(\tR\rpaymentStatus\x12\x17\n" +
	"\apos_ids\x18\x0f \x03(\tR\x06posIds\x12 \n" +
	"\vsalesperson\x18\x10 \x03(\tR\vsalesperson\x12\x1a\n" +
	"\bstatuses\x18\x18 \x03(\tR\bstatuses\x12!\n" +
	"\fnot_statuses\x18\x19 \x03(\tR\vnotStatuses\x12+\n" +
	"\x11shipping_statuses\x18\x1a \x03(\tR\x10shippingStatuses\x122\n" +
	"\x15not_shipping_statuses\x18\x1b \x03(\tR\x13notShippingStatuses\x12\x12\n" +
	"\x04tags\x18! \x03(\tR\x04tags\x12\x1a\n" +
	"\bpipeline\x18\x1e \x01(\tR\bpipeline\x12%\n" +
	"\x0epipeline_stage\x18\x1f \x01(\tR\rpipelineStage\x12*\n" +
	"\x11assigned_agent_id\x18  \x01(\tR\x0fassignedAgentId\"\x87\x01\n" +
	"\x12CountOrdersRequest\x12!\n" +
	"\x03ctx\x18\x01 \x01(\v2\x0f.common.ContextR\x03ctx\x12\x1d\n" +
	"\n" +
	"account_id\x18\x02 \x01(\tR\taccountId\x12/\n" +
	"\aqueries\x18\x04 \x03(\v2\x15.header.OrdersRequestR\aqueries\"\xe7\x01\n" +
	"\x15WorkflowReportRequest\x12!\n" +
	"\x03ctx\x18\x01 \x01(\v2\x0f.common.ContextR\x03ctx\x12\x1d\n" +
	"\n" +
	"account_id\x18\x02 \x01(\tR\taccountId\x12\x1f\n" +
	"\vworkflow_id\x18\x03 \x01(\tR\n" +
	"workflowId\x12\x1b\n" +
	"\tfrom_hour\x18\x06 \x01(\x03R\bfromHour\x12\x17\n" +
	"\ato_hour\x18\a \x01(\x03R\x06toHour\x12!\n" +
	"\faction_types\x18\b \x03(\tR\vactionTypes\x12\x12\n" +
	"\x04unit\x18\t \x01(\tR\x04unit\"\xaf\x01\n" +
	"\x16AuthorizeShopeeRequest\x12!\n" +
	"\x03ctx\x18\x01 \x01(\v2\x0f.common.ContextR\x03ctx\x12\x1d\n" +
	"\n" +
	"account_id\x18\x02 \x01(\tR\taccountId\x12\x12\n" +
	"\x04code\x18\x03 \x01(\tR\x04code\x12\x17\n" +
	"\ashop_id\x18\x04 \x01(\x03R\x06shopId\x12&\n" +
	"\x0fmain_account_id\x18\x05 \x01(\tR\rmainAccountId\"\xd6\x01\n" +
	"\x18ShopeeSyncProductRequest\x12!\n" +
	"\x03ctx\x18\x01 \x01(\v2\x0f.common.ContextR\x03ctx\x12\x1d\n" +
	"\n" +
	"account_id\x18\x02 \x01(\tR\taccountId\x12\x17\n" +
	"\ashop_id\x18\x03 \x01(\x03R\x06shopId\x12\x16\n" +
	"\x06offset\x18\x04 \x01(\x03R\x06offset\x12\x1b\n" +
	"\tpage_size\x18\x05 \x01(\x03R\bpageSize\x12\x16\n" +
	"\x06status\x18\x06 \x01(\tR\x06status\x12\x12\n" +
	"\x04mode\x18\b \x01(\tR\x04mode\"\xb2\x01\n" +
	"\x1aAddressAutocompleteRequest\x12!\n" +
	"\x03ctx\x18\x01 \x01(\v2\x0f.common.ContextR\x03ctx\x12\x1d\n" +
	"\n" +
	"account_id\x18\x02 \x01(\tR\taccountId\x12\x18\n" +
	"\akeyword\x18\x03 \x01(\tR\akeyword\x12\x1a\n" +
	"\blanguage\x18\x04 \x01(\tR\blanguage\x12\x1c\n" +
	"\tcountries\x18\x05 \x03(\tR\tcountries\"\xb5\x06\n" +
	"\fTasksRequest\x12!\n" +
	"\x03ctx\x18\x01 \x01(\v2\x0f.common.ContextR\x03ctx\x12\x1d\n" +
	"\n" +
	"account_id\x18\x02 \x01(\tR\taccountId\x12-\n" +
	"\x12associated_tickets\x18\x04 \x03(\tR\x11associatedTickets\x12)\n" +
	"\x10associated_users\x18\x05 \x03(\tR\x0fassociatedUsers\x12+\n" +
	"\x11associated_orders\x18\a \x03(\tR\x10associatedOrders\x129\n" +
	"\x18associated_conversations\x18\t \x03(\tR\x17associatedConversations\x12*\n" +
	"\x11created_hour_from\x18\n" +
	" \x01(\x03R\x0fcreatedHourFrom\x12&\n" +
	"\x0fcreated_hour_to\x18\v \x01(\x03R\rcreatedHourTo\x12+\n" +
	"\x12due_date_hour_from\x18\f \x01(\x03R\x0fdueDateHourFrom\x12'\n" +
	"\x10due_date_hour_to\x18\r \x01(\x03R\rdueDateHourTo\x12\x1a\n" +
	"\bassignee\x18\x0e \x01(\tR\bassignee\x12\x1a\n" +
	"\bpriority\x18\x0f \x01(\x03R\bpriority\x12\x16\n" +
	"\x06status\x18\x10 \x01(\tR\x06status\x12\x14\n" +
	"\x05limit\x18\x14 \x01(\x05R\x05limit\x12\x16\n" +
	"\x06anchor\x18\x15 \x01(\tR\x06anchor\x12\x16\n" +
	"\x06offset\x18\x16 \x01(\x05R\x06offset\x12\x19\n" +
	"\border_by\x18\x1e \x01(\tR\aorderBy\x12\x10\n" +
	"\x03ids\x18\x17 \x03(\tR\x03ids\x12%\n" +
	"\x0elast_modifieds\x18\x18 \x03(\x03R\rlastModifieds\x12\x1e\n" +
	"\n" +
	"supervisor\x18\x19 \x01(\tR\n" +
	"supervisor\x12\x1c\n" +
	"\tassignees\x18\x1a \x03(\tR\tassignees\x12\x1b\n" +
	"\tis_pinned\x18\x1c \x01(\tR\bisPinned\x12\x18\n" +
	"\awatcher\x18\x1d \x01(\tR\awatcher\x12\x18\n" +
	"\ashorten\x18\x1f \x01(\bR\ashorten\"\xaa\x03\n" +
	"\x0fDocIndexRequest\x12!\n" +
	"\x03ctx\x18\x01 \x01(\v2\x0f.common.ContextR\x03ctx\x12\x1d\n" +
	"\n" +
	"account_id\x18\x02 \x01(\tR\taccountId\x12\x1e\n" +
	"\n" +
	"collection\x18\x03 \x01(\tR\n" +
	"collection\x12\x1f\n" +
	"\vdocument_id\x18\x04 \x01(\tR\n" +
	"documentId\x12\x12\n" +
	"\x04part\x18\x05 \x01(\tR\x04part\x12\x18\n" +
	"\acontent\x18\x06 \x01(\tR\acontent\x12\x17\n" +
	"\ais_name\x18\a \x01(\bR\x06isName\x12\x13\n" +
	"\x05is_id\x18\n" +
	" \x01(\bR\x04isId\x12\x10\n" +
	"\x03day\x18\b \x01(\x03R\x03day\x12\x19\n" +
	"\bis_phone\x18\v \x01(\bR\aisPhone\x12\x19\n" +
	"\bis_email\x18\f \x01(\bR\aisEmail\x12\x16\n" +
	"\x06owners\x18\t \x03(\tR\x06owners\x12.\n" +
	"\x13primary_document_id\x18\r \x01(\tR\x11primaryDocumentId\x12\x10\n" +
	"\x03sec\x18\x0e \x01(\x03R\x03sec\x12\x16\n" +
	"\x06locale\x18\x0f \x01(\tR\x06locale\"\xba\x03\n" +
	"\x10DocSearchRequest\x12!\n" +
	"\x03ctx\x18\x01 \x01(\v2\x0f.common.ContextR\x03ctx\x12\x1d\n" +
	"\n" +
	"account_id\x18\x02 \x01(\tR\taccountId\x12\x1e\n" +
	"\n" +
	"collection\x18\x03 \x01(\tR\n" +
	"collection\x12\x14\n" +
	"\x05query\x18\x05 \x01(\tR\x05query\x12\x16\n" +
	"\x06anchor\x18\x06 \x01(\tR\x06anchor\x12\x14\n" +
	"\x05limit\x18\a \x01(\x03R\x05limit\x12#\n" +
	"\rinclude_parts\x18\b \x03(\tR\fincludeParts\x12!\n" +
	"\fdoc_distinct\x18\t \x01(\bR\vdocDistinct\x12%\n" +
	"\x0einclude_owners\x18\n" +
	" \x03(\tR\rincludeOwners\x12\x1d\n" +
	"\n" +
	"day_anchor\x18\v \x01(\x03R\tdayAnchor\x12\x1c\n" +
	"\n" +
	"is_only_id\x18\f \x01(\bR\bisOnlyId\x12\x16\n" +
	"\x06locale\x18\r \x01(\tR\x06locale\x12\x1d\n" +
	"\n" +
	"is_shorten\x18\x0e \x01(\bR\tisShorten\x12\x1d\n" +
	"\n" +
	"from_month\x18\x0f \x01(\x03R\tfromMonth\"\x8a\x03\n" +
	"\x12CreateAgentRequest\x12!\n" +
	"\x03ctx\x18\x01 \x01(\v2\x0f.common.ContextR\x03ctx\x12\x1d\n" +
	"\n" +
	"account_id\x18\x03 \x01(\tR\taccountId\x12\x1a\n" +
	"\bfullname\x18\x04 \x01(\tR\bfullname\x12\x14\n" +
	"\x05email\x18\x05 \x01(\tR\x05email\x12\x14\n" +
	"\x05phone\x18\b \x01(\tR\x05phone\x12\x1d\n" +
	"\n" +
	"avatar_url\x18\r \x01(\tR\tavatarUrl\x12$\n" +
	"\x0eavatar_url_128\x18\x12 \x01(\tR\favatarUrl128\x12\x12\n" +
	"\x04lang\x18\x0e \x01(\tR\x04lang\x12\x1a\n" +
	"\btimezone\x18\x10 \x01(\tR\btimezone\x12\x14\n" +
	"\x05state\x18\x16 \x01(\tR\x05state\x12)\n" +
	"\x10initial_password\x18\x17 \x01(\tR\x0finitialPassword\x12\x16\n" +
	"\x06scopes\x18) \x03(\tR\x06scopes\x12\x1c\n" +
	"\textension\x18+ \x01(\x03R\textension\"\x80\x05\n" +
	"\x18ListConversationsRequest\x12!\n" +
	"\x03ctx\x18\x01 \x01(\v2\x0f.common.ContextR\x03ctx\x12\x1d\n" +
	"\n" +
	"account_id\x18\x03 \x01(\tR\taccountId\x12\x1b\n" +
	"\tmember_id\x18\b \x01(\tR\bmemberId\x12%\n" +
	"\x0eintegration_id\x18\n" +
	" \x01(\tR\rintegrationId\x12\x17\n" +
	"\auser_id\x18\v \x01(\tR\x06userId\x12\x14\n" +
	"\x05limit\x18\x05 \x01(\x05R\x05limit\x12\x19\n" +
	"\bagent_id\x18\f \x01(\tR\aagentId\x12\x19\n" +
	"\buser_ids\x18\r \x03(\tR\auserIds\x12\x14\n" +
	"\x05state\x18\x0e \x01(\tR\x05state\x12'\n" +
	"\x0fticket_included\x18\x0f \x01(\bR\x0eticketIncluded\x12\x17\n" +
	"\aid_only\x18\x10 \x01(\bR\x06idOnly\x12-\n" +
	"\x12touchpoint_channel\x18\x11 \x01(\tR\x11touchpointChannel\x12+\n" +
	"\x11touchpoint_source\x18\x12 \x01(\tR\x10touchpointSource\x12#\n" +
	"\rtouchpoint_id\x18\x13 \x01(\tR\ftouchpointId\x12$\n" +
	"\x0eticket_id_only\x18\x14 \x01(\bR\fticketIdOnly\x12$\n" +
	"\x0emin_actived_ms\x18\x15 \x01(\x03R\fminActivedMs\x12$\n" +
	"\x0emax_actived_ms\x18\x16 \x01(\x03R\fmaxActivedMs\x12.\n" +
	"\x13user_event_included\x18\x17 \x01(\bR\x11userEventIncluded\"\xd9\x02\n" +
	"\x1dListConversationEventsRequest\x12!\n" +
	"\x03ctx\x18\x01 \x01(\v2\x0f.common.ContextR\x03ctx\x12\x1d\n" +
	"\n" +
	"account_id\x18\x02 \x01(\tR\taccountId\x12'\n" +
	"\x0fconversation_id\x18\x03 \x01(\tR\x0econversationId\x12\x19\n" +
	"\bstart_id\x18\x04 \x01(\tR\astartId\x12\x1b\n" +
	"\tticket_id\x18\x05 \x01(\tR\bticketId\x12\x14\n" +
	"\x05limit\x18\x06 \x01(\x05R\x05limit\x12!\n" +
	"\fmessage_type\x18\x0f \x01(\tR\vmessageType\x12\x1d\n" +
	"\n" +
	"is_private\x18\a \x01(\bR\tisPrivate\x12 \n" +
	"\fby_type_only\x18\b \x01(\bR\n" +
	"byTypeOnly\x12\x1b\n" +
	"\tmax_chars\x18\t \x01(\x03R\bmaxChars\"\xfb\x01\n" +
	"\x1aListWorkflowSessionRequest\x12!\n" +
	"\x03ctx\x18\x01 \x01(\v2\x0f.common.ContextR\x03ctx\x12\x1d\n" +
	"\n" +
	"account_id\x18\x02 \x01(\tR\taccountId\x12\x1f\n" +
	"\vworkflow_id\x18\x03 \x01(\tR\n" +
	"workflowId\x12\x1b\n" +
	"\tfrom_hour\x18\x04 \x01(\x03R\bfromHour\x12\x17\n" +
	"\ato_hour\x18\x05 \x01(\x03R\x06toHour\x12\x16\n" +
	"\x06status\x18\x06 \x01(\tR\x06status\x12\x14\n" +
	"\x05limit\x18\a \x01(\x03R\x05limit\x12\x16\n" +
	"\x06anchor\x18\b \x01(\tR\x06anchor\"\xe1\x01\n" +
	"\fBillsRequest\x12\x1d\n" +
	"\n" +
	"account_id\x18\x01 \x01(\tR\taccountId\x12\x1b\n" +
	"\tfrom_hour\x18\x02 \x01(\x03R\bfromHour\x12\x17\n" +
	"\ato_hour\x18\x03 \x01(\x03R\x06toHour\x12\x14\n" +
	"\x05limit\x18\x04 \x01(\x05R\x05limit\x12\x16\n" +
	"\x06anchor\x18\x05 \x01(\tR\x06anchor\x12\x16\n" +
	"\x06offset\x18\x06 \x01(\x05R\x06offset\x12\x1b\n" +
	"\torder_ids\x18\a \x03(\tR\borderIds\x12\x19\n" +
	"\border_by\x18\b \x01(\tR\aorderBy\"\x93\x02\n" +
	"\x12ListArticleRequest\x12!\n" +
	"\x03ctx\x18\x01 \x01(\v2\x0f.common.ContextR\x03ctx\x12\x1d\n" +
	"\n" +
	"account_id\x18\x02 \x01(\tR\taccountId\x12\x0e\n" +
	"\x02kb\x18\x03 \x01(\tR\x02kb\x12\x1a\n" +
	"\bcategory\x18\x04 \x01(\tR\bcategory\x12\x14\n" +
	"\x05topic\x18\x05 \x01(\tR\x05topic\x12\x19\n" +
	"\border_by\x18\a \x01(\tR\aorderBy\x12\x16\n" +
	"\x06anchor\x18\b \x01(\tR\x06anchor\x12\x14\n" +
	"\x05limit\x18\t \x01(\x05R\x05limit\x12\x18\n" +
	"\ashorten\x18\n" +
	" \x01(\bR\ashorten\x12\x16\n" +
	"\x06locale\x18\v \x01(\tR\x06locale\"\xfb\x01\n" +
	"\x14SearchArticleRequest\x12!\n" +
	"\x03ctx\x18\x01 \x01(\v2\x0f.common.ContextR\x03ctx\x12\x1d\n" +
	"\n" +
	"account_id\x18\x02 \x01(\tR\taccountId\x12\x0e\n" +
	"\x02kb\x18\x03 \x01(\tR\x02kb\x12\x1a\n" +
	"\bcategory\x18\x04 \x01(\tR\bcategory\x12\x14\n" +
	"\x05query\x18\x05 \x01(\tR\x05query\x12\x16\n" +
	"\x06locale\x18\x06 \x01(\tR\x06locale\x12\x19\n" +
	"\border_by\x18\a \x01(\tR\aorderBy\x12\x16\n" +
	"\x06anchor\x18\b \x01(\tR\x06anchor\x12\x14\n" +
	"\x05limit\x18\t \x01(\x05R\x05limit\"e\n" +
	"\rRedeemRequest\x12!\n" +
	"\x03ctx\x18\x01 \x01(\v2\x0f.common.ContextR\x03ctx\x12\x1d\n" +
	"\n" +
	"account_id\x18\x02 \x01(\tR\taccountId\x12\x12\n" +
	"\x04code\x18\x03 \x01(\tR\x04code\"\xa6\x01\n" +
	"\fListVersions\x12!\n" +
	"\x03ctx\x18\x01 \x01(\v2\x0f.common.ContextR\x03ctx\x12\x1d\n" +
	"\n" +
	"account_id\x18\x02 \x01(\tR\taccountId\x12\x0e\n" +
	"\x02id\x18\x03 \x01(\tR\x02id\x12\x16\n" +
	"\x06anchor\x18\x04 \x01(\tR\x06anchor\x12\x14\n" +
	"\x05limit\x18\x05 \x01(\x03R\x05limit\x12\x16\n" +
	"\x06locale\x18\x06 \x01(\tR\x06locale\"\xd1\x01\n" +
	"\x12ReportCountRequest\x12!\n" +
	"\x03ctx\x18\x01 \x01(\v2\x0f.common.ContextR\x03ctx\x12\x1d\n" +
	"\n" +
	"account_id\x18\x02 \x01(\tR\taccountId\x12\x0e\n" +
	"\x02id\x18\x03 \x01(\tR\x02id\x12\x1b\n" +
	"\tfrom_hour\x18\x06 \x01(\x03R\bfromHour\x12\x17\n" +
	"\ato_hour\x18\a \x01(\x03R\x06toHour\x12\x1f\n" +
	"\vevent_types\x18\b \x03(\tR\n" +
	"eventTypes\x12\x12\n" +
	"\x04unit\x18\t \x01(\tR\x04unit\"\xd0\x01\n" +
	"\x14CounterReportRequest\x12!\n" +
	"\x03ctx\x18\x01 \x01(\v2\x0f.common.ContextR\x03ctx\x12\x1d\n" +
	"\n" +
	"account_id\x18\x02 \x01(\tR\taccountId\x12\x1f\n" +
	"\vtime_series\x18\x03 \x01(\tR\n" +
	"timeSeries\x12\x19\n" +
	"\bfrom_sec\x18\x05 \x01(\x03R\afromSec\x12\x14\n" +
	"\x05range\x18\x06 \x01(\tR\x05range\x12\x0e\n" +
	"\x02tz\x18\a \x01(\tR\x02tz\x12\x14\n" +
	"\x05limit\x18\b \x01(\x03R\x05limit\"\xf3\x01\n" +
	"\x1dListKnowledgeBaseEventRequest\x12!\n" +
	"\x03ctx\x18\x01 \x01(\v2\x0f.common.ContextR\x03ctx\x12\x1d\n" +
	"\n" +
	"account_id\x18\x02 \x01(\tR\taccountId\x12\x13\n" +
	"\x05kb_id\x18\x03 \x01(\tR\x04kbId\x12\x1b\n" +
	"\tfrom_hour\x18\x04 \x01(\x03R\bfromHour\x12\x17\n" +
	"\ato_hour\x18\x05 \x01(\x03R\x06toHour\x12\x1d\n" +
	"\n" +
	"event_type\x18\x06 \x01(\tR\teventType\x12\x0e\n" +
	"\x02by\x18\a \x01(\tR\x02by\x12\x16\n" +
	"\x06anchor\x18\b \x01(\tR\x06anchor\"\xbe\x03\n" +
	"\x14CreateAccountRequest\x12!\n" +
	"\x03ctx\x18\x01 \x01(\v2\x0f.common.ContextR\x03ctx\x12\x1a\n" +
	"\bfullname\x18\x02 \x01(\tR\bfullname\x12\x14\n" +
	"\x05email\x18\x03 \x01(\tR\x05email\x12\x12\n" +
	"\x04lang\x18\x04 \x01(\tR\x04lang\x12\x1a\n" +
	"\bpassword\x18\x05 \x01(\tR\bpassword\x12!\n" +
	"\faccount_name\x18\x06 \x01(\tR\vaccountName\x12\x1f\n" +
	"\vaccount_url\x18\a \x01(\tR\n" +
	"accountUrl\x12\x1d\n" +
	"\n" +
	"avatar_url\x18\b \x01(\tR\tavatarUrl\x12\x1a\n" +
	"\btimezone\x18\t \x01(\tR\btimezone\x12\x14\n" +
	"\x05phone\x18\n" +
	" \x01(\tR\x05phone\x12!\n" +
	"\fcountry_code\x18\v \x01(\tR\vcountryCode\x12#\n" +
	"\rreferrer_from\x18\f \x01(\tR\freferrerFrom\x12 \n" +
	"\fga_client_id\x18\r \x01(\tR\n" +
	"gaClientId\x12\"\n" +
	"\rsubiz_user_id\x18\x10 \x01(\tR\vsubizUserId\"\xa2\x01\n" +
	"\vNewPassword\x12!\n" +
	"\x03ctx\x18\x01 \x01(\v2\x0f.common.ContextR\x03ctx\x12\x14\n" +
	"\x05token\x18\x02 \x01(\tR\x05token\x12!\n" +
	"\fnew_password\x18\x03 \x01(\tR\vnewPassword\x12!\n" +
	"\fold_password\x18\x05 \x01(\tR\voldPassword\x12\x14\n" +
	"\x05email\x18\b \x01(\tR\x05email\"\xf2\x04\n" +
	"\x0fCrawlUrlRequest\x12!\n" +
	"\x03ctx\x18\x01 \x01(\v2\x0f.common.ContextR\x03ctx\x12\x1d\n" +
	"\n" +
	"account_id\x18\x02 \x01(\tR\taccountId\x12\x19\n" +
	"\blast_md5\x18\x03 \x01(\tR\alastMd5\x12\x1b\n" +
	"\tlink_only\x18\x04 \x01(\bR\blinkOnly\x12-\n" +
	"\x12javascript_enabled\x18\x05 \x01(\bR\x11javascriptEnabled\x12\x18\n" +
	"\atimeout\x18\x06 \x01(\x03R\atimeout\x12\x1b\n" +
	"\tmax_depth\x18\a \x01(\x03R\bmaxDepth\x12\x1b\n" +
	"\tmax_links\x18\b \x01(\x03R\bmaxLinks\x12\x1d\n" +
	"\n" +
	"link_regex\x18\n" +
	" \x01(\tR\tlinkRegex\x12.\n" +
	"\x13link_exclude_regexs\x18\x0e \x03(\tR\x11linkExcludeRegexs\x12&\n" +
	"\x0fuse_sitemap_xml\x18\v \x01(\x03R\ruseSitemapXml\x12\x1f\n" +
	"\vsitemap_url\x18\f \x01(\tR\n" +
	"sitemapUrl\x12\x16\n" +
	"\x06anchor\x18\r \x01(\tR\x06anchor\x12\x14\n" +
	"\x05force\x18\x0f \x01(\bR\x05force\x12\x10\n" +
	"\x03url\x18\x10 \x01(\tR\x03url\x12\x1b\n" +
	"\tcrawl_key\x18\x11 \x01(\tR\bcrawlKey\x12#\n" +
	"\rsummary_model\x18\x12 \x01(\tR\fsummaryModel\x12H\n" +
	"!by_pass_domain_verification_check\x18\x13 \x01(\bR\x1dbyPassDomainVerificationCheck\"\xf9\x03\n" +
	"\x16ListAIDataEntryRequest\x12!\n" +
	"\x03ctx\x18\x01 \x01(\v2\x0f.common.ContextR\x03ctx\x12\x1d\n" +
	"\n" +
	"account_id\x18\x02 \x01(\tR\taccountId\x12\x19\n" +
	"\bgroup_id\x18\x03 \x01(\tR\agroupId\x12\x18\n" +
	"\akeyword\x18\x04 \x01(\tR\akeyword\x12\x16\n" +
	"\x06anchor\x18\t \x01(\tR\x06anchor\x12\x14\n" +
	"\x05limit\x18\x06 \x01(\x03R\x05limit\x12\x12\n" +
	"\x04type\x18\a \x01(\tR\x04type\x12\x1d\n" +
	"\n" +
	"referer_id\x18\b \x01(\tR\trefererId\x12\x16\n" +
	"\x06status\x18\n" +
	" \x01(\tR\x06status\x12\x1d\n" +
	"\n" +
	"ignore_ids\x18\v \x03(\tR\tignoreIds\x12\x19\n" +
	"\bonly_ids\x18\r \x03(\tR\aonlyIds\x12\x17\n" +
	"\aid_only\x18\f \x01(\bR\x06idOnly\x12#\n" +
	"\ris_suggestion\x18\x0f \x01(\bR\fisSuggestion\x12\x1e\n" +
	"\vai_agent_id\x18\x10 \x01(\tR\taiAgentId\x12-\n" +
	"\x13exclude_ai_agent_id\x18\x11 \x01(\tR\x10excludeAiAgentId\x12(\n" +
	"\x10ai_agent_version\x18\x12 \x01(\x03R\x0eaiAgentVersion\"\x82\x04\n" +
	"\x16CampaignSendLogRequest\x12!\n" +
	"\x03ctx\x18\x01 \x01(\v2\x0f.common.ContextR\x03ctx\x12\x1d\n" +
	"\n" +
	"account_id\x18\x02 \x01(\tR\taccountId\x12\x1f\n" +
	"\vcampaign_id\x18\x03 \x01(\tR\n" +
	"campaignId\x12\x16\n" +
	"\x06anchor\x18\x04 \x01(\tR\x06anchor\x12\x14\n" +
	"\x05limit\x18\x05 \x01(\x05R\x05limit\x12\x16\n" +
	"\x06status\x18\x06 \x01(\tR\x06status\x12\x17\n" +
	"\auser_id\x18\a \x01(\tR\x06userId\x12\x1c\n" +
	"\n" +
	"seen_at_gt\x18\b \x01(\x03R\bseenAtGt\x12\"\n" +
	"\rclicked_at_gt\x18\t \x01(\x03R\vclickedAtGt\x12$\n" +
	"\x0ereceived_at_gt\x18\n" +
	" \x01(\x03R\freceivedAtGt\x12&\n" +
	"\x0fdelivered_at_gt\x18\v \x01(\x03R\rdeliveredAtGt\x12\x1e\n" +
	"\vseen_at_lte\x18\f \x01(\x03R\tseenAtLte\x12$\n" +
	"\x0eclicked_at_lte\x18\r \x01(\x03R\fclickedAtLte\x12&\n" +
	"\x0freceived_at_lte\x18\x0e \x01(\x03R\rreceivedAtLte\x12(\n" +
	"\x10delivered_at_lte\x18\x0f \x01(\x03R\x0edeliveredAtLte\"\xd6\x01\n" +
	"\x16AiQnaSuggestionRequest\x12!\n" +
	"\x03ctx\x18\x01 \x01(\v2\x0f.common.ContextR\x03ctx\x12\x1d\n" +
	"\n" +
	"account_id\x18\x02 \x01(\tR\taccountId\x12\x1e\n" +
	"\vai_agent_id\x18\x04 \x01(\tR\taiAgentId\x12\x14\n" +
	"\x05limit\x18\x05 \x01(\x03R\x05limit\x12\x16\n" +
	"\x06anchor\x18\x06 \x01(\tR\x06anchor\x12\x16\n" +
	"\x06status\x18\a \x01(\tR\x06status\x12\x14\n" +
	"\x05query\x18\b \x01(\tR\x05query\"t\n" +
	"\x17AiResponseSourceRequest\x12!\n" +
	"\x03ctx\x18\x01 \x01(\v2\x0f.common.ContextR\x03ctx\x12\x1d\n" +
	"\n" +
	"account_id\x18\x02 \x01(\tR\taccountId\x12\x17\n" +
	"\acall_id\x18\x03 \x01(\tR\x06callId\"\xf4\x01\n" +
	"\x13FacebookPostRequest\x12!\n" +
	"\x03ctx\x18\x01 \x01(\v2\x0f.common.ContextR\x03ctx\x12\x1d\n" +
	"\n" +
	"account_id\x18\x02 \x01(\tR\taccountId\x12\x17\n" +
	"\apage_id\x18\x03 \x01(\tR\x06pageId\x12\x14\n" +
	"\x05query\x18\x04 \x01(\tR\x05query\x12\x1b\n" +
	"\tis_hidden\x18\b \x01(\bR\bisHidden\x12!\n" +
	"\fis_published\x18\t \x01(\bR\visPublished\x12\x14\n" +
	"\x05limit\x18\n" +
	" \x01(\x03R\x05limit\x12\x16\n" +
	"\x06anchor\x18\v \x01(\tR\x06anchor\"\xfd\x01\n" +
	"\x0fListRuleRequest\x12!\n" +
	"\x03ctx\x18\x01 \x01(\v2\x0f.common.ContextR\x03ctx\x12\x1d\n" +
	"\n" +
	"account_id\x18\x02 \x01(\tR\taccountId\x12\x18\n" +
	"\akeyword\x18\x03 \x01(\tR\akeyword\x12\x1f\n" +
	"\vassigned_to\x18\x04 \x01(\tR\n" +
	"assignedTo\x12\x18\n" +
	"\achannel\x18\x05 \x01(\tR\achannel\x12%\n" +
	"\x0eintegration_id\x18\x06 \x01(\tR\rintegrationId\x12\x14\n" +
	"\x05limit\x18\n" +
	" \x01(\x03R\x05limit\x12\x16\n" +
	"\x06anchor\x18\v \x01(\tR\x06anchor\"\xe3\x01\n" +
	"\x16ListZNSTemplateRequest\x12!\n" +
	"\x03ctx\x18\x01 \x01(\v2\x0f.common.ContextR\x03ctx\x12\x1d\n" +
	"\n" +
	"account_id\x18\x02 \x01(\tR\taccountId\x12\x13\n" +
	"\x05oa_id\x18\x03 \x01(\tR\x04oaId\x12\x12\n" +
	"\x04type\x18\x04 \x01(\tR\x04type\x12\x18\n" +
	"\akeyword\x18\x05 \x01(\tR\akeyword\x12\x16\n" +
	"\x06status\x18\x06 \x01(\tR\x06status\x12\x14\n" +
	"\x05limit\x18\a \x01(\x03R\x05limit\x12\x16\n" +
	"\x06anchor\x18\b \x01(\tR\x06anchor\"\xc0\x01\n" +
	"\x19ListEmailSignatureRequest\x12!\n" +
	"\x03ctx\x18\x01 \x01(\v2\x0f.common.ContextR\x03ctx\x12\x1d\n" +
	"\n" +
	"account_id\x18\x02 \x01(\tR\taccountId\x12\x19\n" +
	"\bagent_id\x18\x03 \x01(\tR\aagentId\x12\x18\n" +
	"\akeyword\x18\x04 \x01(\tR\akeyword\x12\x14\n" +
	"\x05limit\x18\a \x01(\x03R\x05limit\x12\x16\n" +
	"\x06anchor\x18\b \x01(\tR\x06anchor\"\xab\x02\n" +
	"\x18CreditSpendReportRequest\x12!\n" +
	"\x03ctx\x18\x01 \x01(\v2\x0f.common.ContextR\x03ctx\x12\x1d\n" +
	"\n" +
	"account_id\x18\x02 \x01(\tR\taccountId\x12\x1b\n" +
	"\tcredit_id\x18\x03 \x01(\tR\bcreditId\x12\x1b\n" +
	"\tfrom_time\x18\x04 \x01(\x03R\bfromTime\x12\x12\n" +
	"\x04unit\x18\x05 \x01(\tR\x04unit\x12\x12\n" +
	"\x04item\x18\x06 \x01(\tR\x04item\x12\x17\n" +
	"\aitem_id\x18\a \x01(\tR\x06itemId\x12\x14\n" +
	"\x05limit\x18\b \x01(\x03R\x05limit\x12\x1d\n" +
	"\n" +
	"service_id\x18\t \x01(\tR\tserviceId\x12\x1d\n" +
	"\n" +
	"count_only\x18\n" +
	" \x01(\bR\tcountOnly\"\xad\x02\n" +
	"\x15CreditSpendLogRequest\x12!\n" +
	"\x03ctx\x18\x01 \x01(\v2\x0f.common.ContextR\x03ctx\x12\x1d\n" +
	"\n" +
	"account_id\x18\x02 \x01(\tR\taccountId\x12!\n" +
	"\fcreated_from\x18\x04 \x01(\x03R\vcreatedFrom\x12\x18\n" +
	"\akeyword\x18\x05 \x01(\tR\akeyword\x12\x1d\n" +
	"\n" +
	"service_id\x18\x06 \x01(\tR\tserviceId\x12\x12\n" +
	"\x04item\x18\a \x01(\tR\x04item\x12\x17\n" +
	"\aitem_id\x18\b \x01(\tR\x06itemId\x12\x1b\n" +
	"\tcredit_id\x18\f \x01(\tR\bcreditId\x12\x14\n" +
	"\x05limit\x18\n" +
	" \x01(\x03R\x05limit\x12\x16\n" +
	"\x06anchor\x18\v \x01(\tR\x06anchor\"\xc7\x01\n" +
	"\x0fLLMSpansRequest\x12!\n" +
	"\x03ctx\x18\x01 \x01(\v2\x0f.common.ContextR\x03ctx\x12\x1d\n" +
	"\n" +
	"account_id\x18\x02 \x01(\tR\taccountId\x12\x1f\n" +
	"\vworkflow_id\x18\x03 \x01(\tR\n" +
	"workflowId\x12\x1d\n" +
	"\n" +
	"session_id\x18\x04 \x01(\tR\tsessionId\x12\x19\n" +
	"\btrace_id\x18\x05 \x01(\tR\atraceId\x12\x17\n" +
	"\aspan_id\x18\x06 \x01(\tR\x06spanId\"\x9f\x01\n" +
	"\x13AIAgentTraceRequest\x12!\n" +
	"\x03ctx\x18\x01 \x01(\v2\x0f.common.ContextR\x03ctx\x12\x1d\n" +
	"\n" +
	"account_id\x18\x02 \x01(\tR\taccountId\x12'\n" +
	"\x0fconversation_id\x18\x03 \x01(\tR\x0econversationId\x12\x1d\n" +
	"\n" +
	"message_id\x18\x05 \x01(\tR\tmessageId\"\x82\x02\n" +
	"\x10LLMTracesRequest\x12!\n" +
	"\x03ctx\x18\x01 \x01(\v2\x0f.common.ContextR\x03ctx\x12\x1d\n" +
	"\n" +
	"account_id\x18\x02 \x01(\tR\taccountId\x12\x1f\n" +
	"\vworkflow_id\x18\x03 \x01(\tR\n" +
	"workflowId\x12\x18\n" +
	"\aversion\x18\x05 \x01(\x03R\aversion\x12'\n" +
	"\x0fconversation_id\x18\x06 \x01(\tR\x0econversationId\x12\x1a\n" +
	"\bfeedback\x18\b \x01(\x03R\bfeedback\x12\x14\n" +
	"\x05limit\x18\n" +
	" \x01(\x03R\x05limit\x12\x16\n" +
	"\x06anchor\x18\v \x01(\tR\x06anchor\"\xc1\x01\n" +
	"\x19SuggestAIDataEntryRequest\x12!\n" +
	"\x03ctx\x18\x01 \x01(\v2\x0f.common.ContextR\x03ctx\x12\x1d\n" +
	"\n" +
	"account_id\x18\x02 \x01(\tR\taccountId\x12'\n" +
	"\x0fconversation_id\x18\x03 \x01(\tR\x0econversationId\x12\x19\n" +
	"\bevent_id\x18\x04 \x01(\tR\aeventId\x12\x1e\n" +
	"\vai_agent_id\x18\x05 \x01(\tR\taiAgentId\"~\n" +
	"\x16ListAgentOnlineRequest\x12!\n" +
	"\x03ctx\x18\x01 \x01(\v2\x0f.common.ContextR\x03ctx\x12\x1d\n" +
	"\n" +
	"account_id\x18\x02 \x01(\tR\taccountId\x12\"\n" +
	"\rping_after_ms\x18\x03 \x01(\x03R\vpingAfterMs\"\xf7\x02\n" +
	"\x18GenerateFormTokenRequest\x12!\n" +
	"\x03ctx\x18\x01 \x01(\v2\x0f.common.ContextR\x03ctx\x12\x1d\n" +
	"\n" +
	"account_id\x18\x02 \x01(\tR\taccountId\x12\x17\n" +
	"\aform_id\x18\x03 \x01(\tR\x06formId\x12\x17\n" +
	"\auser_id\x18\x05 \x01(\tR\x06userId\x12'\n" +
	"\x0fconversation_id\x18\x06 \x01(\tR\x0econversationId\x12\x19\n" +
	"\bevent_id\x18\a \x01(\tR\aeventId\x12)\n" +
	"\x10attachment_index\x18\b \x01(\x03R\x0fattachmentIndex\x12\x18\n" +
	"\achannel\x18\t \x01(\tR\achannel\x12%\n" +
	"\x0echannel_source\x18\n" +
	" \x01(\tR\rchannelSource\x12\x1d\n" +
	"\n" +
	"channel_id\x18\v \x01(\tR\tchannelId\x12\x18\n" +
	"\aexpired\x18\r \x01(\x03R\aexpired\"r\n" +
	"\x15ConvertProductRequest\x12!\n" +
	"\x03ctx\x18\x01 \x01(\v2\x0f.common.ContextR\x03ctx\x12\x1d\n" +
	"\n" +
	"account_id\x18\x02 \x01(\tR\taccountId\x12\x17\n" +
	"\afile_id\x18\x03 \x01(\tR\x06fileId\"\xa4\x02\n" +
	"\x14FilterProductRequest\x12!\n" +
	"\x03ctx\x18\x01 \x01(\v2\x0f.common.ContextR\x03ctx\x12\x1d\n" +
	"\n" +
	"account_id\x18\x02 \x01(\tR\taccountId\x12\x1f\n" +
	"\vcategory_id\x18\x04 \x01(\tR\n" +
	"categoryId\x12%\n" +
	"\x0ecel_expression\x18\x05 \x01(\tR\rcelExpression\x12\x17\n" +
	"\asort_by\x18\x06 \x01(\tR\x06sortBy\x12\x14\n" +
	"\x05limit\x18\a \x01(\x03R\x05limit\x12(\n" +
	"\x10only_product_ids\x18\b \x03(\tR\x0eonlyProductIds\x12)\n" +
	"\x10exclude_products\x18\t \x03(\tR\x0fexcludeProducts\"~\n" +
	"\vMarkRequest\x12!\n" +
	"\x03ctx\x18\x01 \x01(\v2\x0f.common.ContextR\x03ctx\x12\x14\n" +
	"\x05topic\x18\x04 \x01(\tR\x05topic\x12\x1c\n" +
	"\tpartition\x18\x05 \x01(\x05R\tpartition\x12\x18\n" +
	"\aoffsets\x18\x06 \x03(\x03R\aoffsets\"~\n" +
	"\rCommitRequest\x12!\n" +
	"\x03ctx\x18\x01 \x01(\v2\x0f.common.ContextR\x03ctx\x12\x14\n" +
	"\x05topic\x18\x04 \x01(\tR\x05topic\x12\x1c\n" +
	"\tpartition\x18\x05 \x01(\x05R\tpartition\x12\x16\n" +
	"\x06offset\x18\x06 \x01(\x03R\x06offset\"\xab\x01\n" +
	"\x13SegmentUsersRequest\x12!\n" +
	"\x03ctx\x18\x01 \x01(\v2\x0f.common.ContextR\x03ctx\x12\x1d\n" +
	"\n" +
	"account_id\x18\x03 \x01(\tR\taccountId\x12\x1d\n" +
	"\n" +
	"segment_id\x18\x04 \x01(\tR\tsegmentId\x12\x19\n" +
	"\buser_ids\x18\x05 \x03(\tR\auserIds\x12\x18\n" +
	"\acreated\x18\x06 \x01(\x03R\acreated\"\xcf\x01\n" +
	"\x1aUserSegmentSyncStatusCheck\x12!\n" +
	"\x03ctx\x18\x01 \x01(\v2\x0f.common.ContextR\x03ctx\x12\x1d\n" +
	"\n" +
	"account_id\x18\x03 \x01(\tR\taccountId\x12\x1d\n" +
	"\n" +
	"segment_id\x18\x04 \x01(\tR\tsegmentId\x127\n" +
	"\x18external_segment_sync_id\x18\x05 \x01(\tR\x15externalSegmentSyncId\x12\x17\n" +
	"\auser_id\x18\x06 \x01(\tR\x06userId\"\x8c\x01\n" +
	"\x16ListPageSettingRequest\x12!\n" +
	"\x03ctx\x18\x01 \x01(\v2\x0f.common.ContextR\x03ctx\x12\x1d\n" +
	"\n" +
	"account_id\x18\x02 \x01(\tR\taccountId\x120\n" +
	"\x14only_lead_conversion\x18\x04 \x01(\bR\x12onlyLeadConversion\"\xa7\x01\n" +
	"\x17AIAgentDataEntryRequest\x12!\n" +
	"\x03ctx\x18\x01 \x01(\v2\x0f.common.ContextR\x03ctx\x12\x1d\n" +
	"\n" +
	"account_id\x18\x02 \x01(\tR\taccountId\x12\x19\n" +
	"\bagent_id\x18\x03 \x01(\tR\aagentId\x12\x12\n" +
	"\x04mode\x18\x04 \x01(\tR\x04mode\x12\x1b\n" +
	"\tentry_ids\x18\x05 \x03(\tR\bentryIds\"\xab\x01\n" +
	"\x14WidgetSettingRequest\x12!\n" +
	"\x03ctx\x18\x01 \x01(\v2\x0f.common.ContextR\x03ctx\x12\x1d\n" +
	"\n" +
	"account_id\x18\x02 \x01(\tR\taccountId\x12\x10\n" +
	"\x03url\x18\x03 \x01(\tR\x03url\x12&\n" +
	"\x0finclude_bot_ids\x18\x04 \x03(\tR\rincludeBotIds\x12\x17\n" +
	"\auser_id\x18\x05 \x01(\tR\x06userIdB\x19Z\x17github.com/subiz/headerb\x06proto3"

var (
	file_request_proto_rawDescOnce sync.Once
	file_request_proto_rawDescData []byte
)

func file_request_proto_rawDescGZIP() []byte {
	file_request_proto_rawDescOnce.Do(func() {
		file_request_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_request_proto_rawDesc), len(file_request_proto_rawDesc)))
	})
	return file_request_proto_rawDescData
}

var file_request_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_request_proto_msgTypes = make([]protoimpl.MessageInfo, 82)
var file_request_proto_goTypes = []any{
	(ReportCampaignRequest_Range)(0),      // 0: header.ReportCampaignRequest.Range
	(ReportWebPluginRequest_Range)(0),     // 1: header.ReportWebPluginRequest.Range
	(AvailibilityReportRequest_Range)(0),  // 2: header.AvailibilityReportRequest.Range
	(*TagRequest)(nil),                    // 3: header.TagRequest
	(*UserReportRequest)(nil),             // 4: header.UserReportRequest
	(*ConversationMetricsRequest)(nil),    // 5: header.ConversationMetricsRequest
	(*AgentMetricsRequest)(nil),           // 6: header.AgentMetricsRequest
	(*CallMetricsRequest)(nil),            // 7: header.CallMetricsRequest
	(*ListUserEventsRequest)(nil),         // 8: header.ListUserEventsRequest
	(*ListEventTypeRequest)(nil),          // 9: header.ListEventTypeRequest
	(*PresencesRequest)(nil),              // 10: header.PresencesRequest
	(*ListNotiRequest)(nil),               // 11: header.ListNotiRequest
	(*UserRequest)(nil),                   // 12: header.UserRequest
	(*ListNotesRequest)(nil),              // 13: header.ListNotesRequest
	(*DeleteNoteRequest)(nil),             // 14: header.DeleteNoteRequest
	(*UpdateWorkflowSessionRequest)(nil),  // 15: header.UpdateWorkflowSessionRequest
	(*ListWorkflowLogRequest)(nil),        // 16: header.ListWorkflowLogRequest
	(*BotsRequest)(nil),                   // 17: header.BotsRequest
	(*ListAIAgentMessageRequest)(nil),     // 18: header.ListAIAgentMessageRequest
	(*ReportConvoMessageRequest)(nil),     // 19: header.ReportConvoMessageRequest
	(*ReportAIAgentRequest)(nil),          // 20: header.ReportAIAgentRequest
	(*ReportBotRequest)(nil),              // 21: header.ReportBotRequest
	(*ActionrunMetricsRequest)(nil),       // 22: header.ActionrunMetricsRequest
	(*BotrunMetricsRequest)(nil),          // 23: header.BotrunMetricsRequest
	(*ListObjectsRequest)(nil),            // 24: header.ListObjectsRequest
	(*ConversionRequest)(nil),             // 25: header.ConversionRequest
	(*ReportCampaignRequest)(nil),         // 26: header.ReportCampaignRequest
	(*ReportWebPluginRequest)(nil),        // 27: header.ReportWebPluginRequest
	(*WebPluginConversionRequest)(nil),    // 28: header.WebPluginConversionRequest
	(*SearchLocationsRequest)(nil),        // 29: header.SearchLocationsRequest
	(*RecentIndexDeliveryRequest)(nil),    // 30: header.RecentIndexDeliveryRequest
	(*DeliveryRequest)(nil),               // 31: header.DeliveryRequest
	(*SearchRequest)(nil),                 // 32: header.SearchRequest
	(*AvailibilityReportRequest)(nil),     // 33: header.AvailibilityReportRequest
	(*FileUrlDownloadRequest)(nil),        // 34: header.FileUrlDownloadRequest
	(*OrderMetricsRequest)(nil),           // 35: header.OrderMetricsRequest
	(*OrdersRequest)(nil),                 // 36: header.OrdersRequest
	(*CountOrdersRequest)(nil),            // 37: header.CountOrdersRequest
	(*WorkflowReportRequest)(nil),         // 38: header.WorkflowReportRequest
	(*AuthorizeShopeeRequest)(nil),        // 39: header.AuthorizeShopeeRequest
	(*ShopeeSyncProductRequest)(nil),      // 40: header.ShopeeSyncProductRequest
	(*AddressAutocompleteRequest)(nil),    // 41: header.AddressAutocompleteRequest
	(*TasksRequest)(nil),                  // 42: header.TasksRequest
	(*DocIndexRequest)(nil),               // 43: header.DocIndexRequest
	(*DocSearchRequest)(nil),              // 44: header.DocSearchRequest
	(*CreateAgentRequest)(nil),            // 45: header.CreateAgentRequest
	(*ListConversationsRequest)(nil),      // 46: header.ListConversationsRequest
	(*ListConversationEventsRequest)(nil), // 47: header.ListConversationEventsRequest
	(*ListWorkflowSessionRequest)(nil),    // 48: header.ListWorkflowSessionRequest
	(*BillsRequest)(nil),                  // 49: header.BillsRequest
	(*ListArticleRequest)(nil),            // 50: header.ListArticleRequest
	(*SearchArticleRequest)(nil),          // 51: header.SearchArticleRequest
	(*RedeemRequest)(nil),                 // 52: header.RedeemRequest
	(*ListVersions)(nil),                  // 53: header.ListVersions
	(*ReportCountRequest)(nil),            // 54: header.ReportCountRequest
	(*CounterReportRequest)(nil),          // 55: header.CounterReportRequest
	(*ListKnowledgeBaseEventRequest)(nil), // 56: header.ListKnowledgeBaseEventRequest
	(*CreateAccountRequest)(nil),          // 57: header.CreateAccountRequest
	(*NewPassword)(nil),                   // 58: header.NewPassword
	(*CrawlUrlRequest)(nil),               // 59: header.CrawlUrlRequest
	(*ListAIDataEntryRequest)(nil),        // 60: header.ListAIDataEntryRequest
	(*CampaignSendLogRequest)(nil),        // 61: header.CampaignSendLogRequest
	(*AiQnaSuggestionRequest)(nil),        // 62: header.AiQnaSuggestionRequest
	(*AiResponseSourceRequest)(nil),       // 63: header.AiResponseSourceRequest
	(*FacebookPostRequest)(nil),           // 64: header.FacebookPostRequest
	(*ListRuleRequest)(nil),               // 65: header.ListRuleRequest
	(*ListZNSTemplateRequest)(nil),        // 66: header.ListZNSTemplateRequest
	(*ListEmailSignatureRequest)(nil),     // 67: header.ListEmailSignatureRequest
	(*CreditSpendReportRequest)(nil),      // 68: header.CreditSpendReportRequest
	(*CreditSpendLogRequest)(nil),         // 69: header.CreditSpendLogRequest
	(*LLMSpansRequest)(nil),               // 70: header.LLMSpansRequest
	(*AIAgentTraceRequest)(nil),           // 71: header.AIAgentTraceRequest
	(*LLMTracesRequest)(nil),              // 72: header.LLMTracesRequest
	(*SuggestAIDataEntryRequest)(nil),     // 73: header.SuggestAIDataEntryRequest
	(*ListAgentOnlineRequest)(nil),        // 74: header.ListAgentOnlineRequest
	(*GenerateFormTokenRequest)(nil),      // 75: header.GenerateFormTokenRequest
	(*ConvertProductRequest)(nil),         // 76: header.ConvertProductRequest
	(*FilterProductRequest)(nil),          // 77: header.FilterProductRequest
	(*MarkRequest)(nil),                   // 78: header.MarkRequest
	(*CommitRequest)(nil),                 // 79: header.CommitRequest
	(*SegmentUsersRequest)(nil),           // 80: header.SegmentUsersRequest
	(*UserSegmentSyncStatusCheck)(nil),    // 81: header.UserSegmentSyncStatusCheck
	(*ListPageSettingRequest)(nil),        // 82: header.ListPageSettingRequest
	(*AIAgentDataEntryRequest)(nil),       // 83: header.AIAgentDataEntryRequest
	(*WidgetSettingRequest)(nil),          // 84: header.WidgetSettingRequest
	(*common.Context)(nil),                // 85: common.Context
	(*account.BusinessHours)(nil),         // 86: account.BusinessHours
}
var file_request_proto_depIdxs = []int32{
	85, // 0: header.TagRequest.ctx:type_name -> common.Context
	85, // 1: header.UserReportRequest.ctx:type_name -> common.Context
	86, // 2: header.ConversationMetricsRequest.business_hours:type_name -> account.BusinessHours
	86, // 3: header.ConversationMetricsRequest.not_business_hours:type_name -> account.BusinessHours
	86, // 4: header.AgentMetricsRequest.business_hours:type_name -> account.BusinessHours
	86, // 5: header.AgentMetricsRequest.not_business_hours:type_name -> account.BusinessHours
	86, // 6: header.CallMetricsRequest.business_hours:type_name -> account.BusinessHours
	86, // 7: header.CallMetricsRequest.not_business_hours:type_name -> account.BusinessHours
	85, // 8: header.ListUserEventsRequest.ctx:type_name -> common.Context
	85, // 9: header.ListEventTypeRequest.ctx:type_name -> common.Context
	85, // 10: header.PresencesRequest.ctx:type_name -> common.Context
	85, // 11: header.ListNotiRequest.ctx:type_name -> common.Context
	85, // 12: header.UserRequest.ctx:type_name -> common.Context
	85, // 13: header.ListNotesRequest.ctx:type_name -> common.Context
	85, // 14: header.UpdateWorkflowSessionRequest.ctx:type_name -> common.Context
	85, // 15: header.ListWorkflowLogRequest.ctx:type_name -> common.Context
	85, // 16: header.BotsRequest.ctx:type_name -> common.Context
	85, // 17: header.ListAIAgentMessageRequest.ctx:type_name -> common.Context
	85, // 18: header.ReportConvoMessageRequest.ctx:type_name -> common.Context
	85, // 19: header.ReportAIAgentRequest.ctx:type_name -> common.Context
	85, // 20: header.ConversionRequest.ctx:type_name -> common.Context
	85, // 21: header.ReportCampaignRequest.ctx:type_name -> common.Context
	85, // 22: header.ReportWebPluginRequest.ctx:type_name -> common.Context
	85, // 23: header.WebPluginConversionRequest.ctx:type_name -> common.Context
	85, // 24: header.SearchLocationsRequest.ctx:type_name -> common.Context
	85, // 25: header.RecentIndexDeliveryRequest.ctx:type_name -> common.Context
	85, // 26: header.DeliveryRequest.ctx:type_name -> common.Context
	85, // 27: header.SearchRequest.ctx:type_name -> common.Context
	85, // 28: header.AvailibilityReportRequest.ctx:type_name -> common.Context
	85, // 29: header.FileUrlDownloadRequest.ctx:type_name -> common.Context
	86, // 30: header.OrderMetricsRequest.business_hours:type_name -> account.BusinessHours
	86, // 31: header.OrderMetricsRequest.not_business_hours:type_name -> account.BusinessHours
	85, // 32: header.OrdersRequest.ctx:type_name -> common.Context
	85, // 33: header.CountOrdersRequest.ctx:type_name -> common.Context
	36, // 34: header.CountOrdersRequest.queries:type_name -> header.OrdersRequest
	85, // 35: header.WorkflowReportRequest.ctx:type_name -> common.Context
	85, // 36: header.AuthorizeShopeeRequest.ctx:type_name -> common.Context
	85, // 37: header.ShopeeSyncProductRequest.ctx:type_name -> common.Context
	85, // 38: header.AddressAutocompleteRequest.ctx:type_name -> common.Context
	85, // 39: header.TasksRequest.ctx:type_name -> common.Context
	85, // 40: header.DocIndexRequest.ctx:type_name -> common.Context
	85, // 41: header.DocSearchRequest.ctx:type_name -> common.Context
	85, // 42: header.CreateAgentRequest.ctx:type_name -> common.Context
	85, // 43: header.ListConversationsRequest.ctx:type_name -> common.Context
	85, // 44: header.ListConversationEventsRequest.ctx:type_name -> common.Context
	85, // 45: header.ListWorkflowSessionRequest.ctx:type_name -> common.Context
	85, // 46: header.ListArticleRequest.ctx:type_name -> common.Context
	85, // 47: header.SearchArticleRequest.ctx:type_name -> common.Context
	85, // 48: header.RedeemRequest.ctx:type_name -> common.Context
	85, // 49: header.ListVersions.ctx:type_name -> common.Context
	85, // 50: header.ReportCountRequest.ctx:type_name -> common.Context
	85, // 51: header.CounterReportRequest.ctx:type_name -> common.Context
	85, // 52: header.ListKnowledgeBaseEventRequest.ctx:type_name -> common.Context
	85, // 53: header.CreateAccountRequest.ctx:type_name -> common.Context
	85, // 54: header.NewPassword.ctx:type_name -> common.Context
	85, // 55: header.CrawlUrlRequest.ctx:type_name -> common.Context
	85, // 56: header.ListAIDataEntryRequest.ctx:type_name -> common.Context
	85, // 57: header.CampaignSendLogRequest.ctx:type_name -> common.Context
	85, // 58: header.AiQnaSuggestionRequest.ctx:type_name -> common.Context
	85, // 59: header.AiResponseSourceRequest.ctx:type_name -> common.Context
	85, // 60: header.FacebookPostRequest.ctx:type_name -> common.Context
	85, // 61: header.ListRuleRequest.ctx:type_name -> common.Context
	85, // 62: header.ListZNSTemplateRequest.ctx:type_name -> common.Context
	85, // 63: header.ListEmailSignatureRequest.ctx:type_name -> common.Context
	85, // 64: header.CreditSpendReportRequest.ctx:type_name -> common.Context
	85, // 65: header.CreditSpendLogRequest.ctx:type_name -> common.Context
	85, // 66: header.LLMSpansRequest.ctx:type_name -> common.Context
	85, // 67: header.AIAgentTraceRequest.ctx:type_name -> common.Context
	85, // 68: header.LLMTracesRequest.ctx:type_name -> common.Context
	85, // 69: header.SuggestAIDataEntryRequest.ctx:type_name -> common.Context
	85, // 70: header.ListAgentOnlineRequest.ctx:type_name -> common.Context
	85, // 71: header.GenerateFormTokenRequest.ctx:type_name -> common.Context
	85, // 72: header.ConvertProductRequest.ctx:type_name -> common.Context
	85, // 73: header.FilterProductRequest.ctx:type_name -> common.Context
	85, // 74: header.MarkRequest.ctx:type_name -> common.Context
	85, // 75: header.CommitRequest.ctx:type_name -> common.Context
	85, // 76: header.SegmentUsersRequest.ctx:type_name -> common.Context
	85, // 77: header.UserSegmentSyncStatusCheck.ctx:type_name -> common.Context
	85, // 78: header.ListPageSettingRequest.ctx:type_name -> common.Context
	85, // 79: header.AIAgentDataEntryRequest.ctx:type_name -> common.Context
	85, // 80: header.WidgetSettingRequest.ctx:type_name -> common.Context
	81, // [81:81] is the sub-list for method output_type
	81, // [81:81] is the sub-list for method input_type
	81, // [81:81] is the sub-list for extension type_name
	81, // [81:81] is the sub-list for extension extendee
	0,  // [0:81] is the sub-list for field type_name
}

func init() { file_request_proto_init() }
func file_request_proto_init() {
	if File_request_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_request_proto_rawDesc), len(file_request_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   82,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_request_proto_goTypes,
		DependencyIndexes: file_request_proto_depIdxs,
		EnumInfos:         file_request_proto_enumTypes,
		MessageInfos:      file_request_proto_msgTypes,
	}.Build()
	File_request_proto = out.File
	file_request_proto_goTypes = nil
	file_request_proto_depIdxs = nil
}
