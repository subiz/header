// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v4.22.3
// source: credit.proto

package header

import (
	common "github.com/subiz/header/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Credit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ctx            *common.Context `protobuf:"bytes,1,opt,name=ctx,proto3" json:"ctx,omitempty"`
	AccountId      string          `protobuf:"bytes,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	Id             string          `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	Name           string          `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	FpvBalance     int64           `protobuf:"varint,5,opt,name=fpv_balance,json=fpvBalance,proto3" json:"fpv_balance,omitempty"`               // fpv
	FpvCreditLimit int64           `protobuf:"varint,7,opt,name=fpv_credit_limit,json=fpvCreditLimit,proto3" json:"fpv_credit_limit,omitempty"` // 0 - 40 only set by subiz
	FpvTax         int64           `protobuf:"varint,8,opt,name=fpv_tax,json=fpvTax,proto3" json:"fpv_tax,omitempty"`                           // 1000 -> 10%
	Created        int64           `protobuf:"varint,9,opt,name=created,proto3" json:"created,omitempty"`
	CreatedBy      string          `protobuf:"bytes,10,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	Updated        int64           `protobuf:"varint,11,opt,name=updated,proto3" json:"updated,omitempty"`
	UpdatedBy      string          `protobuf:"bytes,12,opt,name=updated_by,json=updatedBy,proto3" json:"updated_by,omitempty"`
}

func (x *Credit) Reset() {
	*x = Credit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_credit_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Credit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Credit) ProtoMessage() {}

func (x *Credit) ProtoReflect() protoreflect.Message {
	mi := &file_credit_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Credit.ProtoReflect.Descriptor instead.
func (*Credit) Descriptor() ([]byte, []int) {
	return file_credit_proto_rawDescGZIP(), []int{0}
}

func (x *Credit) GetCtx() *common.Context {
	if x != nil {
		return x.Ctx
	}
	return nil
}

func (x *Credit) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *Credit) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Credit) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Credit) GetFpvBalance() int64 {
	if x != nil {
		return x.FpvBalance
	}
	return 0
}

func (x *Credit) GetFpvCreditLimit() int64 {
	if x != nil {
		return x.FpvCreditLimit
	}
	return 0
}

func (x *Credit) GetFpvTax() int64 {
	if x != nil {
		return x.FpvTax
	}
	return 0
}

func (x *Credit) GetCreated() int64 {
	if x != nil {
		return x.Created
	}
	return 0
}

func (x *Credit) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *Credit) GetUpdated() int64 {
	if x != nil {
		return x.Updated
	}
	return 0
}

func (x *Credit) GetUpdatedBy() string {
	if x != nil {
		return x.UpdatedBy
	}
	return ""
}

type CreditSnapshoot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ctx          *common.Context `protobuf:"bytes,1,opt,name=ctx,proto3" json:"ctx,omitempty"`
	AccountId    string          `protobuf:"bytes,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	CreditId     string          `protobuf:"bytes,3,opt,name=credit_id,json=creditId,proto3" json:"credit_id,omitempty"`
	UnixHour     int64           `protobuf:"varint,4,opt,name=unix_hour,json=unixHour,proto3" json:"unix_hour,omitempty"`
	BalanceFpv   int64           `protobuf:"varint,6,opt,name=balance_fpv,json=balanceFpv,proto3" json:"balance_fpv,omitempty"`
	MaxRuleUsage int64           `protobuf:"varint,10,opt,name=max_rule_usage,json=maxRuleUsage,proto3" json:"max_rule_usage,omitempty"`
	// Free tier remain
	Rules int64 `protobuf:"varint,20,opt,name=rules,proto3" json:"rules,omitempty"` // per month
}

func (x *CreditSnapshoot) Reset() {
	*x = CreditSnapshoot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_credit_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreditSnapshoot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreditSnapshoot) ProtoMessage() {}

func (x *CreditSnapshoot) ProtoReflect() protoreflect.Message {
	mi := &file_credit_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreditSnapshoot.ProtoReflect.Descriptor instead.
func (*CreditSnapshoot) Descriptor() ([]byte, []int) {
	return file_credit_proto_rawDescGZIP(), []int{1}
}

func (x *CreditSnapshoot) GetCtx() *common.Context {
	if x != nil {
		return x.Ctx
	}
	return nil
}

func (x *CreditSnapshoot) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *CreditSnapshoot) GetCreditId() string {
	if x != nil {
		return x.CreditId
	}
	return ""
}

func (x *CreditSnapshoot) GetUnixHour() int64 {
	if x != nil {
		return x.UnixHour
	}
	return 0
}

func (x *CreditSnapshoot) GetBalanceFpv() int64 {
	if x != nil {
		return x.BalanceFpv
	}
	return 0
}

func (x *CreditSnapshoot) GetMaxRuleUsage() int64 {
	if x != nil {
		return x.MaxRuleUsage
	}
	return 0
}

func (x *CreditSnapshoot) GetRules() int64 {
	if x != nil {
		return x.Rules
	}
	return 0
}

type CreditSpendEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ctx          *common.Context      `protobuf:"bytes,1,opt,name=ctx,proto3" json:"ctx,omitempty"`
	AccountId    string               `protobuf:"bytes,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	Id           string               `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	Created      int64                `protobuf:"varint,4,opt,name=created,proto3" json:"created,omitempty"`
	Service      string               `protobuf:"bytes,5,opt,name=service,proto3" json:"service,omitempty"`   // remove file (sub-category)
	Category     string               `protobuf:"bytes,6,opt,name=category,proto3" json:"category,omitempty"` // agent, zalo_zns, zalo_active_message, image
	Quantity     int64                `protobuf:"varint,7,opt,name=quantity,proto3" json:"quantity,omitempty"`
	Data         *CreditSendEntryData `protobuf:"bytes,8,opt,name=data,proto3" json:"data,omitempty"`
	CreditId     string               `protobuf:"bytes,9,opt,name=credit_id,json=creditId,proto3" json:"credit_id,omitempty"`
	FpvUnitPrice int64                `protobuf:"varint,10,opt,name=fpv_unit_price,json=fpvUnitPrice,proto3" json:"fpv_unit_price,omitempty"`
	ServiceId    string               `protobuf:"bytes,12,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`       // cp4348934
	ServiceType  string               `protobuf:"bytes,13,opt,name=service_type,json=serviceType,proto3" json:"service_type,omitempty"` // campaign, bot, popup
	Item         string               `protobuf:"bytes,14,opt,name=item,proto3" json:"item,omitempty"`
	ItemId       string               `protobuf:"bytes,15,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
}

func (x *CreditSpendEntry) Reset() {
	*x = CreditSpendEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_credit_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreditSpendEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreditSpendEntry) ProtoMessage() {}

func (x *CreditSpendEntry) ProtoReflect() protoreflect.Message {
	mi := &file_credit_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreditSpendEntry.ProtoReflect.Descriptor instead.
func (*CreditSpendEntry) Descriptor() ([]byte, []int) {
	return file_credit_proto_rawDescGZIP(), []int{2}
}

func (x *CreditSpendEntry) GetCtx() *common.Context {
	if x != nil {
		return x.Ctx
	}
	return nil
}

func (x *CreditSpendEntry) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *CreditSpendEntry) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CreditSpendEntry) GetCreated() int64 {
	if x != nil {
		return x.Created
	}
	return 0
}

func (x *CreditSpendEntry) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

func (x *CreditSpendEntry) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *CreditSpendEntry) GetQuantity() int64 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *CreditSpendEntry) GetData() *CreditSendEntryData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *CreditSpendEntry) GetCreditId() string {
	if x != nil {
		return x.CreditId
	}
	return ""
}

func (x *CreditSpendEntry) GetFpvUnitPrice() int64 {
	if x != nil {
		return x.FpvUnitPrice
	}
	return 0
}

func (x *CreditSpendEntry) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

func (x *CreditSpendEntry) GetServiceType() string {
	if x != nil {
		return x.ServiceType
	}
	return ""
}

func (x *CreditSpendEntry) GetItem() string {
	if x != nil {
		return x.Item
	}
	return ""
}

func (x *CreditSpendEntry) GetItemId() string {
	if x != nil {
		return x.ItemId
	}
	return ""
}

type CreditSendEntryDataId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CreditSendEntryDataId) Reset() {
	*x = CreditSendEntryDataId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_credit_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreditSendEntryDataId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreditSendEntryDataId) ProtoMessage() {}

func (x *CreditSendEntryDataId) ProtoReflect() protoreflect.Message {
	mi := &file_credit_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreditSendEntryDataId.ProtoReflect.Descriptor instead.
func (*CreditSendEntryDataId) Descriptor() ([]byte, []int) {
	return file_credit_proto_rawDescGZIP(), []int{3}
}

func (x *CreditSendEntryDataId) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type CreditSendEntryDataAgent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalAgents int64    `protobuf:"varint,1,opt,name=total_agents,json=totalAgents,proto3" json:"total_agents,omitempty"`
	Agents      []string `protobuf:"bytes,2,rep,name=agents,proto3" json:"agents,omitempty"`
}

func (x *CreditSendEntryDataAgent) Reset() {
	*x = CreditSendEntryDataAgent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_credit_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreditSendEntryDataAgent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreditSendEntryDataAgent) ProtoMessage() {}

func (x *CreditSendEntryDataAgent) ProtoReflect() protoreflect.Message {
	mi := &file_credit_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreditSendEntryDataAgent.ProtoReflect.Descriptor instead.
func (*CreditSendEntryDataAgent) Descriptor() ([]byte, []int) {
	return file_credit_proto_rawDescGZIP(), []int{4}
}

func (x *CreditSendEntryDataAgent) GetTotalAgents() int64 {
	if x != nil {
		return x.TotalAgents
	}
	return 0
}

func (x *CreditSendEntryDataAgent) GetAgents() []string {
	if x != nil {
		return x.Agents
	}
	return nil
}

type CreditSendEntryDataEmail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From    string `protobuf:"bytes,3,opt,name=from,proto3" json:"from,omitempty"`
	To      string `protobuf:"bytes,4,opt,name=to,proto3" json:"to,omitempty"`
	EmailId string `protobuf:"bytes,5,opt,name=email_id,json=emailId,proto3" json:"email_id,omitempty"`
}

func (x *CreditSendEntryDataEmail) Reset() {
	*x = CreditSendEntryDataEmail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_credit_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreditSendEntryDataEmail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreditSendEntryDataEmail) ProtoMessage() {}

func (x *CreditSendEntryDataEmail) ProtoReflect() protoreflect.Message {
	mi := &file_credit_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreditSendEntryDataEmail.ProtoReflect.Descriptor instead.
func (*CreditSendEntryDataEmail) Descriptor() ([]byte, []int) {
	return file_credit_proto_rawDescGZIP(), []int{5}
}

func (x *CreditSendEntryDataEmail) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *CreditSendEntryDataEmail) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *CreditSendEntryDataEmail) GetEmailId() string {
	if x != nil {
		return x.EmailId
	}
	return ""
}

type CreditSendEntryDataZaloZNS struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OaId        string `protobuf:"bytes,3,opt,name=oa_id,json=oaId,proto3" json:"oa_id,omitempty"`
	MessageId   string `protobuf:"bytes,4,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"` // from zalo
	TemplateId  string `protobuf:"bytes,5,opt,name=template_id,json=templateId,proto3" json:"template_id,omitempty"`
	PhoneNumber string `protobuf:"bytes,6,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
}

func (x *CreditSendEntryDataZaloZNS) Reset() {
	*x = CreditSendEntryDataZaloZNS{}
	if protoimpl.UnsafeEnabled {
		mi := &file_credit_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreditSendEntryDataZaloZNS) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreditSendEntryDataZaloZNS) ProtoMessage() {}

func (x *CreditSendEntryDataZaloZNS) ProtoReflect() protoreflect.Message {
	mi := &file_credit_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreditSendEntryDataZaloZNS.ProtoReflect.Descriptor instead.
func (*CreditSendEntryDataZaloZNS) Descriptor() ([]byte, []int) {
	return file_credit_proto_rawDescGZIP(), []int{6}
}

func (x *CreditSendEntryDataZaloZNS) GetOaId() string {
	if x != nil {
		return x.OaId
	}
	return ""
}

func (x *CreditSendEntryDataZaloZNS) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

func (x *CreditSendEntryDataZaloZNS) GetTemplateId() string {
	if x != nil {
		return x.TemplateId
	}
	return ""
}

func (x *CreditSendEntryDataZaloZNS) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

type CreditSendEntryDataZaloActiveMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OaId           string `protobuf:"bytes,3,opt,name=oa_id,json=oaId,proto3" json:"oa_id,omitempty"`
	MessageId      string `protobuf:"bytes,4,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"` // from zalo
	ConversationId string `protobuf:"bytes,5,opt,name=conversation_id,json=conversationId,proto3" json:"conversation_id,omitempty"`
	EventId        string `protobuf:"bytes,6,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	ZaloUserId     string `protobuf:"bytes,7,opt,name=zalo_user_id,json=zaloUserId,proto3" json:"zalo_user_id,omitempty"`
}

func (x *CreditSendEntryDataZaloActiveMessage) Reset() {
	*x = CreditSendEntryDataZaloActiveMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_credit_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreditSendEntryDataZaloActiveMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreditSendEntryDataZaloActiveMessage) ProtoMessage() {}

func (x *CreditSendEntryDataZaloActiveMessage) ProtoReflect() protoreflect.Message {
	mi := &file_credit_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreditSendEntryDataZaloActiveMessage.ProtoReflect.Descriptor instead.
func (*CreditSendEntryDataZaloActiveMessage) Descriptor() ([]byte, []int) {
	return file_credit_proto_rawDescGZIP(), []int{7}
}

func (x *CreditSendEntryDataZaloActiveMessage) GetOaId() string {
	if x != nil {
		return x.OaId
	}
	return ""
}

func (x *CreditSendEntryDataZaloActiveMessage) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

func (x *CreditSendEntryDataZaloActiveMessage) GetConversationId() string {
	if x != nil {
		return x.ConversationId
	}
	return ""
}

func (x *CreditSendEntryDataZaloActiveMessage) GetEventId() string {
	if x != nil {
		return x.EventId
	}
	return ""
}

func (x *CreditSendEntryDataZaloActiveMessage) GetZaloUserId() string {
	if x != nil {
		return x.ZaloUserId
	}
	return ""
}

type CreditSendEntryData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Agent             *CreditSendEntryDataAgent             `protobuf:"bytes,2,opt,name=agent,proto3" json:"agent,omitempty"`
	ZaloZns           *CreditSendEntryDataZaloZNS           `protobuf:"bytes,3,opt,name=zalo_zns,json=zaloZns,proto3" json:"zalo_zns,omitempty"`
	ZaloActiveMessage *CreditSendEntryDataZaloActiveMessage `protobuf:"bytes,4,opt,name=zalo_active_message,json=zaloActiveMessage,proto3" json:"zalo_active_message,omitempty"`
	Email             *CreditSendEntryDataEmail             `protobuf:"bytes,5,opt,name=email,proto3" json:"email,omitempty"`
	File              *CreditSendEntryDataId                `protobuf:"bytes,6,opt,name=file,proto3" json:"file,omitempty"`
}

func (x *CreditSendEntryData) Reset() {
	*x = CreditSendEntryData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_credit_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreditSendEntryData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreditSendEntryData) ProtoMessage() {}

func (x *CreditSendEntryData) ProtoReflect() protoreflect.Message {
	mi := &file_credit_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreditSendEntryData.ProtoReflect.Descriptor instead.
func (*CreditSendEntryData) Descriptor() ([]byte, []int) {
	return file_credit_proto_rawDescGZIP(), []int{8}
}

func (x *CreditSendEntryData) GetAgent() *CreditSendEntryDataAgent {
	if x != nil {
		return x.Agent
	}
	return nil
}

func (x *CreditSendEntryData) GetZaloZns() *CreditSendEntryDataZaloZNS {
	if x != nil {
		return x.ZaloZns
	}
	return nil
}

func (x *CreditSendEntryData) GetZaloActiveMessage() *CreditSendEntryDataZaloActiveMessage {
	if x != nil {
		return x.ZaloActiveMessage
	}
	return nil
}

func (x *CreditSendEntryData) GetEmail() *CreditSendEntryDataEmail {
	if x != nil {
		return x.Email
	}
	return nil
}

func (x *CreditSendEntryData) GetFile() *CreditSendEntryDataId {
	if x != nil {
		return x.File
	}
	return nil
}

type CreditSpendReportRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ctx       *common.Context `protobuf:"bytes,1,opt,name=ctx,proto3" json:"ctx,omitempty"`
	AccountId string          `protobuf:"bytes,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	CreditId  string          `protobuf:"bytes,3,opt,name=credit_id,json=creditId,proto3" json:"credit_id,omitempty"`
	FromTime  int64           `protobuf:"varint,4,opt,name=from_time,json=fromTime,proto3" json:"from_time,omitempty"` // ms
	Unit      string          `protobuf:"bytes,5,opt,name=unit,proto3" json:"unit,omitempty"`                          // hour, day, month
	Service   string          `protobuf:"bytes,6,opt,name=service,proto3" json:"service,omitempty"`                    // just filter
	ServiceId string          `protobuf:"bytes,7,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	Limit     int64           `protobuf:"varint,8,opt,name=limit,proto3" json:"limit,omitempty"` // default: 24, 30, 24
}

func (x *CreditSpendReportRequest) Reset() {
	*x = CreditSpendReportRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_credit_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreditSpendReportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreditSpendReportRequest) ProtoMessage() {}

func (x *CreditSpendReportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_credit_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreditSpendReportRequest.ProtoReflect.Descriptor instead.
func (*CreditSpendReportRequest) Descriptor() ([]byte, []int) {
	return file_credit_proto_rawDescGZIP(), []int{9}
}

func (x *CreditSpendReportRequest) GetCtx() *common.Context {
	if x != nil {
		return x.Ctx
	}
	return nil
}

func (x *CreditSpendReportRequest) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *CreditSpendReportRequest) GetCreditId() string {
	if x != nil {
		return x.CreditId
	}
	return ""
}

func (x *CreditSpendReportRequest) GetFromTime() int64 {
	if x != nil {
		return x.FromTime
	}
	return 0
}

func (x *CreditSpendReportRequest) GetUnit() string {
	if x != nil {
		return x.Unit
	}
	return ""
}

func (x *CreditSpendReportRequest) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

func (x *CreditSpendReportRequest) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

func (x *CreditSpendReportRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type CreditSpendLogRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ctx         *common.Context `protobuf:"bytes,1,opt,name=ctx,proto3" json:"ctx,omitempty"`
	AccountId   string          `protobuf:"bytes,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	CreatedFrom int64           `protobuf:"varint,4,opt,name=created_from,json=createdFrom,proto3" json:"created_from,omitempty"` // ms
	Service     string          `protobuf:"bytes,6,opt,name=service,proto3" json:"service,omitempty"`                             // just filter
	Category    string          `protobuf:"bytes,7,opt,name=category,proto3" json:"category,omitempty"`                           // just filter
	ServiceId   string          `protobuf:"bytes,8,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`        // filter by source
	Limit       int64           `protobuf:"varint,10,opt,name=limit,proto3" json:"limit,omitempty"`                               // max : 20
	Anchor      string          `protobuf:"bytes,11,opt,name=anchor,proto3" json:"anchor,omitempty"`
}

func (x *CreditSpendLogRequest) Reset() {
	*x = CreditSpendLogRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_credit_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreditSpendLogRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreditSpendLogRequest) ProtoMessage() {}

func (x *CreditSpendLogRequest) ProtoReflect() protoreflect.Message {
	mi := &file_credit_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreditSpendLogRequest.ProtoReflect.Descriptor instead.
func (*CreditSpendLogRequest) Descriptor() ([]byte, []int) {
	return file_credit_proto_rawDescGZIP(), []int{10}
}

func (x *CreditSpendLogRequest) GetCtx() *common.Context {
	if x != nil {
		return x.Ctx
	}
	return nil
}

func (x *CreditSpendLogRequest) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *CreditSpendLogRequest) GetCreatedFrom() int64 {
	if x != nil {
		return x.CreatedFrom
	}
	return 0
}

func (x *CreditSpendLogRequest) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

func (x *CreditSpendLogRequest) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *CreditSpendLogRequest) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

func (x *CreditSpendLogRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *CreditSpendLogRequest) GetAnchor() string {
	if x != nil {
		return x.Anchor
	}
	return ""
}

type CreditSpendEntries struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ctx        *common.Context     `protobuf:"bytes,1,opt,name=ctx,proto3" json:"ctx,omitempty"`
	AccountId  string              `protobuf:"bytes,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	Entries    []*CreditSpendEntry `protobuf:"bytes,4,rep,name=entries,proto3" json:"entries,omitempty"`
	NextAnchor string              `protobuf:"bytes,5,opt,name=next_anchor,json=nextAnchor,proto3" json:"next_anchor,omitempty"`
}

func (x *CreditSpendEntries) Reset() {
	*x = CreditSpendEntries{}
	if protoimpl.UnsafeEnabled {
		mi := &file_credit_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreditSpendEntries) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreditSpendEntries) ProtoMessage() {}

func (x *CreditSpendEntries) ProtoReflect() protoreflect.Message {
	mi := &file_credit_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreditSpendEntries.ProtoReflect.Descriptor instead.
func (*CreditSpendEntries) Descriptor() ([]byte, []int) {
	return file_credit_proto_rawDescGZIP(), []int{11}
}

func (x *CreditSpendEntries) GetCtx() *common.Context {
	if x != nil {
		return x.Ctx
	}
	return nil
}

func (x *CreditSpendEntries) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *CreditSpendEntries) GetEntries() []*CreditSpendEntry {
	if x != nil {
		return x.Entries
	}
	return nil
}

func (x *CreditSpendEntries) GetNextAnchor() string {
	if x != nil {
		return x.NextAnchor
	}
	return ""
}

type TrySpendCreditResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ctx        *common.Context `protobuf:"bytes,1,opt,name=ctx,proto3" json:"ctx,omitempty"`
	AccountId  string          `protobuf:"bytes,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	CreditId   string          `protobuf:"bytes,3,opt,name=credit_id,json=creditId,proto3" json:"credit_id,omitempty"`
	ServiceId  string          `protobuf:"bytes,4,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	BalanceFpv int64           `protobuf:"varint,6,opt,name=balance_fpv,json=balanceFpv,proto3" json:"balance_fpv,omitempty"`
	Allow      bool            `protobuf:"varint,7,opt,name=allow,proto3" json:"allow,omitempty"`
}

func (x *TrySpendCreditResponse) Reset() {
	*x = TrySpendCreditResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_credit_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrySpendCreditResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrySpendCreditResponse) ProtoMessage() {}

func (x *TrySpendCreditResponse) ProtoReflect() protoreflect.Message {
	mi := &file_credit_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrySpendCreditResponse.ProtoReflect.Descriptor instead.
func (*TrySpendCreditResponse) Descriptor() ([]byte, []int) {
	return file_credit_proto_rawDescGZIP(), []int{12}
}

func (x *TrySpendCreditResponse) GetCtx() *common.Context {
	if x != nil {
		return x.Ctx
	}
	return nil
}

func (x *TrySpendCreditResponse) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *TrySpendCreditResponse) GetCreditId() string {
	if x != nil {
		return x.CreditId
	}
	return ""
}

func (x *TrySpendCreditResponse) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

func (x *TrySpendCreditResponse) GetBalanceFpv() int64 {
	if x != nil {
		return x.BalanceFpv
	}
	return 0
}

func (x *TrySpendCreditResponse) GetAllow() bool {
	if x != nil {
		return x.Allow
	}
	return false
}

type CreditSpendReportResponseData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemId string  `protobuf:"bytes,3,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	Data   []int64 `protobuf:"varint,4,rep,packed,name=data,proto3" json:"data,omitempty"` // by time
}

func (x *CreditSpendReportResponseData) Reset() {
	*x = CreditSpendReportResponseData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_credit_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreditSpendReportResponseData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreditSpendReportResponseData) ProtoMessage() {}

func (x *CreditSpendReportResponseData) ProtoReflect() protoreflect.Message {
	mi := &file_credit_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreditSpendReportResponseData.ProtoReflect.Descriptor instead.
func (*CreditSpendReportResponseData) Descriptor() ([]byte, []int) {
	return file_credit_proto_rawDescGZIP(), []int{13}
}

func (x *CreditSpendReportResponseData) GetItemId() string {
	if x != nil {
		return x.ItemId
	}
	return ""
}

func (x *CreditSpendReportResponseData) GetData() []int64 {
	if x != nil {
		return x.Data
	}
	return nil
}

type CreditSpendReportResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ctx       *common.Context                  `protobuf:"bytes,1,opt,name=ctx,proto3" json:"ctx,omitempty"`
	AccountId string                           `protobuf:"bytes,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	CreditId  string                           `protobuf:"bytes,3,opt,name=credit_id,json=creditId,proto3" json:"credit_id,omitempty"`
	Datas     []*CreditSpendReportResponseData `protobuf:"bytes,4,rep,name=datas,proto3" json:"datas,omitempty"`
}

func (x *CreditSpendReportResponse) Reset() {
	*x = CreditSpendReportResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_credit_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreditSpendReportResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreditSpendReportResponse) ProtoMessage() {}

func (x *CreditSpendReportResponse) ProtoReflect() protoreflect.Message {
	mi := &file_credit_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreditSpendReportResponse.ProtoReflect.Descriptor instead.
func (*CreditSpendReportResponse) Descriptor() ([]byte, []int) {
	return file_credit_proto_rawDescGZIP(), []int{14}
}

func (x *CreditSpendReportResponse) GetCtx() *common.Context {
	if x != nil {
		return x.Ctx
	}
	return nil
}

func (x *CreditSpendReportResponse) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *CreditSpendReportResponse) GetCreditId() string {
	if x != nil {
		return x.CreditId
	}
	return ""
}

func (x *CreditSpendReportResponse) GetDatas() []*CreditSpendReportResponseData {
	if x != nil {
		return x.Datas
	}
	return nil
}

var File_credit_proto protoreflect.FileDescriptor

var file_credit_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06,
	0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x1a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc4, 0x02, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x12,
	0x21, 0x0a, 0x03, 0x63, 0x74, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x03, 0x63,
	0x74, 0x78, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x70, 0x76, 0x5f, 0x62, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x66, 0x70, 0x76, 0x42,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x66, 0x70, 0x76, 0x5f, 0x63, 0x72,
	0x65, 0x64, 0x69, 0x74, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0e, 0x66, 0x70, 0x76, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x4c, 0x69, 0x6d, 0x69, 0x74,
	0x12, 0x17, 0x0a, 0x07, 0x66, 0x70, 0x76, 0x5f, 0x74, 0x61, 0x78, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x66, 0x70, 0x76, 0x54, 0x61, 0x78, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62,
	0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x42, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x1d, 0x0a, 0x0a,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x22, 0xea, 0x01, 0x0a, 0x0f,
	0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x6f, 0x74, 0x12,
	0x21, 0x0a, 0x03, 0x63, 0x74, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x03, 0x63,
	0x74, 0x78, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x49, 0x64, 0x12, 0x1b,
	0x0a, 0x09, 0x75, 0x6e, 0x69, 0x78, 0x5f, 0x68, 0x6f, 0x75, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x75, 0x6e, 0x69, 0x78, 0x48, 0x6f, 0x75, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x62,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x66, 0x70, 0x76, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x46, 0x70, 0x76, 0x12, 0x24, 0x0a, 0x0e,
	0x6d, 0x61, 0x78, 0x5f, 0x72, 0x75, 0x6c, 0x65, 0x5f, 0x75, 0x73, 0x61, 0x67, 0x65, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x6d, 0x61, 0x78, 0x52, 0x75, 0x6c, 0x65, 0x55, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x14, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x22, 0xb3, 0x03, 0x0a, 0x10, 0x43, 0x72, 0x65,
	0x64, 0x69, 0x74, 0x53, 0x70, 0x65, 0x6e, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x21, 0x0a,
	0x03, 0x63, 0x74, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x03, 0x63, 0x74, 0x78,
	0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12,
	0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x2f, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x68, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x53, 0x65, 0x6e, 0x64, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1b, 0x0a, 0x09,
	0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x66, 0x70, 0x76,
	0x5f, 0x75, 0x6e, 0x69, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0c, 0x66, 0x70, 0x76, 0x55, 0x6e, 0x69, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x21,
	0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x69, 0x74, 0x65, 0x6d, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x22, 0x27,
	0x0a, 0x15, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x53, 0x65, 0x6e, 0x64, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x44, 0x61, 0x74, 0x61, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x55, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x64, 0x69,
	0x74, 0x53, 0x65, 0x6e, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x41, 0x67,
	0x65, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x61, 0x67, 0x65,
	0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x41, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x59,
	0x0a, 0x18, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x53, 0x65, 0x6e, 0x64, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72,
	0x6f, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x0e,
	0x0a, 0x02, 0x74, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x19,
	0x0a, 0x08, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x49, 0x64, 0x22, 0x94, 0x01, 0x0a, 0x1a, 0x43, 0x72,
	0x65, 0x64, 0x69, 0x74, 0x53, 0x65, 0x6e, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x44, 0x61, 0x74,
	0x61, 0x5a, 0x61, 0x6c, 0x6f, 0x5a, 0x4e, 0x53, 0x12, 0x13, 0x0a, 0x05, 0x6f, 0x61, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6f, 0x61, 0x49, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b,
	0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x21, 0x0a,
	0x0c, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x22, 0xc0, 0x01, 0x0a, 0x24, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x53, 0x65, 0x6e, 0x64, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x5a, 0x61, 0x6c, 0x6f, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x13, 0x0a, 0x05, 0x6f, 0x61, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6f, 0x61, 0x49, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x27, 0x0a,
	0x0f, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x20, 0x0a, 0x0c, 0x7a, 0x61, 0x6c, 0x6f, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x7a, 0x61, 0x6c, 0x6f, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x22, 0xd5, 0x02, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x53, 0x65,
	0x6e, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x12, 0x36, 0x0a, 0x05, 0x61,
	0x67, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x68, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x53, 0x65, 0x6e, 0x64, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x61, 0x67,
	0x65, 0x6e, 0x74, 0x12, 0x3d, 0x0a, 0x08, 0x7a, 0x61, 0x6c, 0x6f, 0x5f, 0x7a, 0x6e, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x2e, 0x43,
	0x72, 0x65, 0x64, 0x69, 0x74, 0x53, 0x65, 0x6e, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x44, 0x61,
	0x74, 0x61, 0x5a, 0x61, 0x6c, 0x6f, 0x5a, 0x4e, 0x53, 0x52, 0x07, 0x7a, 0x61, 0x6c, 0x6f, 0x5a,
	0x6e, 0x73, 0x12, 0x5c, 0x0a, 0x13, 0x7a, 0x61, 0x6c, 0x6f, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x65, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2c, 0x2e, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x53,
	0x65, 0x6e, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x5a, 0x61, 0x6c, 0x6f,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x11, 0x7a,
	0x61, 0x6c, 0x6f, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x36, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x20, 0x2e, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x53,
	0x65, 0x6e, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6d, 0x61, 0x69,
	0x6c, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x31, 0x0a, 0x04, 0x66, 0x69, 0x6c, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x2e,
	0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x53, 0x65, 0x6e, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x44,
	0x61, 0x74, 0x61, 0x49, 0x64, 0x52, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x22, 0xf9, 0x01, 0x0a, 0x18,
	0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x53, 0x70, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x03, 0x63, 0x74, 0x78, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x03, 0x63, 0x74, 0x78, 0x12, 0x1d, 0x0a, 0x0a, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x72,
	0x65, 0x64, 0x69, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63,
	0x72, 0x65, 0x64, 0x69, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x72, 0x6f, 0x6d, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x66, 0x72, 0x6f, 0x6d,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0xff, 0x01, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x64,
	0x69, 0x74, 0x53, 0x70, 0x65, 0x6e, 0x64, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x21, 0x0a, 0x03, 0x63, 0x74, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52,
	0x03, 0x63, 0x74, 0x78, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x66,
	0x72, 0x6f, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x1d, 0x0a, 0x0a,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6e, 0x63, 0x68, 0x6f, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x61, 0x6e, 0x63, 0x68, 0x6f, 0x72, 0x22, 0xab, 0x01, 0x0a, 0x12, 0x43, 0x72,
	0x65, 0x64, 0x69, 0x74, 0x53, 0x70, 0x65, 0x6e, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73,
	0x12, 0x21, 0x0a, 0x03, 0x63, 0x74, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x03,
	0x63, 0x74, 0x78, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x32, 0x0a, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x65,
	0x64, 0x69, 0x74, 0x53, 0x70, 0x65, 0x6e, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x65,
	0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x61,
	0x6e, 0x63, 0x68, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6e, 0x65, 0x78,
	0x74, 0x41, 0x6e, 0x63, 0x68, 0x6f, 0x72, 0x22, 0xcd, 0x01, 0x0a, 0x16, 0x54, 0x72, 0x79, 0x53,
	0x70, 0x65, 0x6e, 0x64, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x21, 0x0a, 0x03, 0x63, 0x74, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74,
	0x52, 0x03, 0x63, 0x74, 0x78, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x49,
	0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64,
	0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x66, 0x70, 0x76, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x46, 0x70,
	0x76, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x05, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x22, 0x4c, 0x0a, 0x1d, 0x43, 0x72, 0x65, 0x64, 0x69,
	0x74, 0x53, 0x70, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x03, 0x28, 0x03, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xb7, 0x01, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74,
	0x53, 0x70, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x03, 0x63, 0x74, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78,
	0x74, 0x52, 0x03, 0x63, 0x74, 0x78, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74,
	0x49, 0x64, 0x12, 0x3b, 0x0a, 0x05, 0x64, 0x61, 0x74, 0x61, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x25, 0x2e, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x64, 0x69,
	0x74, 0x53, 0x70, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x05, 0x64, 0x61, 0x74, 0x61, 0x73, 0x42,
	0x19, 0x5a, 0x17, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x75,
	0x62, 0x69, 0x7a, 0x2f, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_credit_proto_rawDescOnce sync.Once
	file_credit_proto_rawDescData = file_credit_proto_rawDesc
)

func file_credit_proto_rawDescGZIP() []byte {
	file_credit_proto_rawDescOnce.Do(func() {
		file_credit_proto_rawDescData = protoimpl.X.CompressGZIP(file_credit_proto_rawDescData)
	})
	return file_credit_proto_rawDescData
}

var file_credit_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_credit_proto_goTypes = []interface{}{
	(*Credit)(nil),                               // 0: header.Credit
	(*CreditSnapshoot)(nil),                      // 1: header.CreditSnapshoot
	(*CreditSpendEntry)(nil),                     // 2: header.CreditSpendEntry
	(*CreditSendEntryDataId)(nil),                // 3: header.CreditSendEntryDataId
	(*CreditSendEntryDataAgent)(nil),             // 4: header.CreditSendEntryDataAgent
	(*CreditSendEntryDataEmail)(nil),             // 5: header.CreditSendEntryDataEmail
	(*CreditSendEntryDataZaloZNS)(nil),           // 6: header.CreditSendEntryDataZaloZNS
	(*CreditSendEntryDataZaloActiveMessage)(nil), // 7: header.CreditSendEntryDataZaloActiveMessage
	(*CreditSendEntryData)(nil),                  // 8: header.CreditSendEntryData
	(*CreditSpendReportRequest)(nil),             // 9: header.CreditSpendReportRequest
	(*CreditSpendLogRequest)(nil),                // 10: header.CreditSpendLogRequest
	(*CreditSpendEntries)(nil),                   // 11: header.CreditSpendEntries
	(*TrySpendCreditResponse)(nil),               // 12: header.TrySpendCreditResponse
	(*CreditSpendReportResponseData)(nil),        // 13: header.CreditSpendReportResponseData
	(*CreditSpendReportResponse)(nil),            // 14: header.CreditSpendReportResponse
	(*common.Context)(nil),                       // 15: common.Context
}
var file_credit_proto_depIdxs = []int32{
	15, // 0: header.Credit.ctx:type_name -> common.Context
	15, // 1: header.CreditSnapshoot.ctx:type_name -> common.Context
	15, // 2: header.CreditSpendEntry.ctx:type_name -> common.Context
	8,  // 3: header.CreditSpendEntry.data:type_name -> header.CreditSendEntryData
	4,  // 4: header.CreditSendEntryData.agent:type_name -> header.CreditSendEntryDataAgent
	6,  // 5: header.CreditSendEntryData.zalo_zns:type_name -> header.CreditSendEntryDataZaloZNS
	7,  // 6: header.CreditSendEntryData.zalo_active_message:type_name -> header.CreditSendEntryDataZaloActiveMessage
	5,  // 7: header.CreditSendEntryData.email:type_name -> header.CreditSendEntryDataEmail
	3,  // 8: header.CreditSendEntryData.file:type_name -> header.CreditSendEntryDataId
	15, // 9: header.CreditSpendReportRequest.ctx:type_name -> common.Context
	15, // 10: header.CreditSpendLogRequest.ctx:type_name -> common.Context
	15, // 11: header.CreditSpendEntries.ctx:type_name -> common.Context
	2,  // 12: header.CreditSpendEntries.entries:type_name -> header.CreditSpendEntry
	15, // 13: header.TrySpendCreditResponse.ctx:type_name -> common.Context
	15, // 14: header.CreditSpendReportResponse.ctx:type_name -> common.Context
	13, // 15: header.CreditSpendReportResponse.datas:type_name -> header.CreditSpendReportResponseData
	16, // [16:16] is the sub-list for method output_type
	16, // [16:16] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_credit_proto_init() }
func file_credit_proto_init() {
	if File_credit_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_credit_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Credit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_credit_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreditSnapshoot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_credit_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreditSpendEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_credit_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreditSendEntryDataId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_credit_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreditSendEntryDataAgent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_credit_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreditSendEntryDataEmail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_credit_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreditSendEntryDataZaloZNS); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_credit_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreditSendEntryDataZaloActiveMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_credit_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreditSendEntryData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_credit_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreditSpendReportRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_credit_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreditSpendLogRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_credit_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreditSpendEntries); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_credit_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrySpendCreditResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_credit_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreditSpendReportResponseData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_credit_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreditSpendReportResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_credit_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_credit_proto_goTypes,
		DependencyIndexes: file_credit_proto_depIdxs,
		MessageInfos:      file_credit_proto_msgTypes,
	}.Build()
	File_credit_proto = out.File
	file_credit_proto_rawDesc = nil
	file_credit_proto_goTypes = nil
	file_credit_proto_depIdxs = nil
}
