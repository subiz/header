// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v5.27.3
// source: payment.proto

package payment

import (
	common "github.com/subiz/header/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// cho phep renew
type Plan_Type int32

const (
	Plan_trial                    Plan_Type = 0
	Plan_standard                 Plan_Type = 2
	Plan_advanced                 Plan_Type = 3
	Plan_standard_unlimited_agent Plan_Type = 4
	Plan_custom                   Plan_Type = 5
)

// Enum value maps for Plan_Type.
var (
	Plan_Type_name = map[int32]string{
		0: "trial",
		2: "standard",
		3: "advanced",
		4: "standard_unlimited_agent",
		5: "custom",
	}
	Plan_Type_value = map[string]int32{
		"trial":                    0,
		"standard":                 2,
		"advanced":                 3,
		"standard_unlimited_agent": 4,
		"custom":                   5,
	}
)

func (x Plan_Type) Enum() *Plan_Type {
	p := new(Plan_Type)
	*p = x
	return p
}

func (x Plan_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Plan_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_payment_proto_enumTypes[0].Descriptor()
}

func (Plan_Type) Type() protoreflect.EnumType {
	return &file_payment_proto_enumTypes[0]
}

func (x Plan_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *Plan_Type) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = Plan_Type(num)
	return nil
}

// Deprecated: Use Plan_Type.Descriptor instead.
func (Plan_Type) EnumDescriptor() ([]byte, []int) {
	return file_payment_proto_rawDescGZIP(), []int{4, 0}
}

type Invoice_State int32

const (
	Invoice_draft Invoice_State = 0
	Invoice_open  Invoice_State = 1
	Invoice_paid  Invoice_State = 3
	Invoice_void  Invoice_State = 4
)

// Enum value maps for Invoice_State.
var (
	Invoice_State_name = map[int32]string{
		0: "draft",
		1: "open",
		3: "paid",
		4: "void",
	}
	Invoice_State_value = map[string]int32{
		"draft": 0,
		"open":  1,
		"paid":  3,
		"void":  4,
	}
)

func (x Invoice_State) Enum() *Invoice_State {
	p := new(Invoice_State)
	*p = x
	return p
}

func (x Invoice_State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Invoice_State) Descriptor() protoreflect.EnumDescriptor {
	return file_payment_proto_enumTypes[1].Descriptor()
}

func (Invoice_State) Type() protoreflect.EnumType {
	return &file_payment_proto_enumTypes[1]
}

func (x Invoice_State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *Invoice_State) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = Invoice_State(num)
	return nil
}

// Deprecated: Use Invoice_State.Descriptor instead.
func (Invoice_State) EnumDescriptor() ([]byte, []int) {
	return file_payment_proto_rawDescGZIP(), []int{12, 0}
}

type Log_Action int32

const (
	Log_create_invoice         Log_Action = 0
	Log_change_invoice_status  Log_Action = 1
	Log_create_discount        Log_Action = 2
	Log_delete_discount        Log_Action = 3
	Log_redeem_discount        Log_Action = 4
	Log_add_credit             Log_Action = 5
	Log_redeem_credit          Log_Action = 6
	Log_delete_account         Log_Action = 7
	Log_change_plan            Log_Action = 8
	Log_renew_subscription     Log_Action = 10
	Log_click_subscribe_button Log_Action = 11
	Log_pay_for_referrer       Log_Action = 12
	Log_add_money_for_referrer Log_Action = 13
	Log_pay_invoice            Log_Action = 14
	Log_charge_stripe          Log_Action = 15
	Log_create_bill            Log_Action = 16
	Log_use_credit             Log_Action = 17
	Log_edit_subscription      Log_Action = 18
	Log_edit_invoice           Log_Action = 19
	Log_downgrade              Log_Action = 20
)

// Enum value maps for Log_Action.
var (
	Log_Action_name = map[int32]string{
		0:  "create_invoice",
		1:  "change_invoice_status",
		2:  "create_discount",
		3:  "delete_discount",
		4:  "redeem_discount",
		5:  "add_credit",
		6:  "redeem_credit",
		7:  "delete_account",
		8:  "change_plan",
		10: "renew_subscription",
		11: "click_subscribe_button",
		12: "pay_for_referrer",
		13: "add_money_for_referrer",
		14: "pay_invoice",
		15: "charge_stripe",
		16: "create_bill",
		17: "use_credit",
		18: "edit_subscription",
		19: "edit_invoice",
		20: "downgrade",
	}
	Log_Action_value = map[string]int32{
		"create_invoice":         0,
		"change_invoice_status":  1,
		"create_discount":        2,
		"delete_discount":        3,
		"redeem_discount":        4,
		"add_credit":             5,
		"redeem_credit":          6,
		"delete_account":         7,
		"change_plan":            8,
		"renew_subscription":     10,
		"click_subscribe_button": 11,
		"pay_for_referrer":       12,
		"add_money_for_referrer": 13,
		"pay_invoice":            14,
		"charge_stripe":          15,
		"create_bill":            16,
		"use_credit":             17,
		"edit_subscription":      18,
		"edit_invoice":           19,
		"downgrade":              20,
	}
)

func (x Log_Action) Enum() *Log_Action {
	p := new(Log_Action)
	*p = x
	return p
}

func (x Log_Action) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Log_Action) Descriptor() protoreflect.EnumDescriptor {
	return file_payment_proto_enumTypes[2].Descriptor()
}

func (Log_Action) Type() protoreflect.EnumType {
	return &file_payment_proto_enumTypes[2]
}

func (x Log_Action) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *Log_Action) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = Log_Action(num)
	return nil
}

// Deprecated: Use Log_Action.Descriptor instead.
func (Log_Action) EnumDescriptor() ([]byte, []int) {
	return file_payment_proto_rawDescGZIP(), []int{21, 0}
}

type Comments struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ctx       *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	AccountId *string         `protobuf:"bytes,2,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	Comments  []*Comment      `protobuf:"bytes,3,rep,name=comments" json:"comments,omitempty"`
}

func (x *Comments) Reset() {
	*x = Comments{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Comments) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Comments) ProtoMessage() {}

func (x *Comments) ProtoReflect() protoreflect.Message {
	mi := &file_payment_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Comments.ProtoReflect.Descriptor instead.
func (*Comments) Descriptor() ([]byte, []int) {
	return file_payment_proto_rawDescGZIP(), []int{0}
}

func (x *Comments) GetCtx() *common.Context {
	if x != nil {
		return x.Ctx
	}
	return nil
}

func (x *Comments) GetAccountId() string {
	if x != nil && x.AccountId != nil {
		return *x.AccountId
	}
	return ""
}

func (x *Comments) GetComments() []*Comment {
	if x != nil {
		return x.Comments
	}
	return nil
}

type Comment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ctx             *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	AccountId       *string         `protobuf:"bytes,2,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	Id              *string         `protobuf:"bytes,3,opt,name=id" json:"id,omitempty"`
	TopicId         *string         `protobuf:"bytes,4,opt,name=topic_id,json=topicId" json:"topic_id,omitempty"`
	TopicType       *string         `protobuf:"bytes,5,opt,name=topic_type,json=topicType" json:"topic_type,omitempty"`
	AuthorAccountId *string         `protobuf:"bytes,8,opt,name=author_account_id,json=authorAccountId" json:"author_account_id,omitempty"`
	AuthorId        *string         `protobuf:"bytes,9,opt,name=author_id,json=authorId" json:"author_id,omitempty"`
	AuthorEmail     *string         `protobuf:"bytes,10,opt,name=author_email,json=authorEmail" json:"author_email,omitempty"`
	Content         *string         `protobuf:"bytes,11,opt,name=content" json:"content,omitempty"`
	Created         *int64          `protobuf:"varint,12,opt,name=created" json:"created,omitempty"`
}

func (x *Comment) Reset() {
	*x = Comment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Comment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Comment) ProtoMessage() {}

func (x *Comment) ProtoReflect() protoreflect.Message {
	mi := &file_payment_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Comment.ProtoReflect.Descriptor instead.
func (*Comment) Descriptor() ([]byte, []int) {
	return file_payment_proto_rawDescGZIP(), []int{1}
}

func (x *Comment) GetCtx() *common.Context {
	if x != nil {
		return x.Ctx
	}
	return nil
}

func (x *Comment) GetAccountId() string {
	if x != nil && x.AccountId != nil {
		return *x.AccountId
	}
	return ""
}

func (x *Comment) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *Comment) GetTopicId() string {
	if x != nil && x.TopicId != nil {
		return *x.TopicId
	}
	return ""
}

func (x *Comment) GetTopicType() string {
	if x != nil && x.TopicType != nil {
		return *x.TopicType
	}
	return ""
}

func (x *Comment) GetAuthorAccountId() string {
	if x != nil && x.AuthorAccountId != nil {
		return *x.AuthorAccountId
	}
	return ""
}

func (x *Comment) GetAuthorId() string {
	if x != nil && x.AuthorId != nil {
		return *x.AuthorId
	}
	return ""
}

func (x *Comment) GetAuthorEmail() string {
	if x != nil && x.AuthorEmail != nil {
		return *x.AuthorEmail
	}
	return ""
}

func (x *Comment) GetContent() string {
	if x != nil && x.Content != nil {
		return *x.Content
	}
	return ""
}

func (x *Comment) GetCreated() int64 {
	if x != nil && x.Created != nil {
		return *x.Created
	}
	return 0
}

type Plans struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Plans []*Plan `protobuf:"bytes,2,rep,name=plans" json:"plans,omitempty"`
}

func (x *Plans) Reset() {
	*x = Plans{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Plans) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Plans) ProtoMessage() {}

func (x *Plans) ProtoReflect() protoreflect.Message {
	mi := &file_payment_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Plans.ProtoReflect.Descriptor instead.
func (*Plans) Descriptor() ([]byte, []int) {
	return file_payment_proto_rawDescGZIP(), []int{2}
}

func (x *Plans) GetPlans() []*Plan {
	if x != nil {
		return x.Plans
	}
	return nil
}

type DiffSubRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OldSubscription *Subscription `protobuf:"bytes,4,opt,name=old_subscription,json=oldSubscription" json:"old_subscription,omitempty"`
	NewSubscription *Subscription `protobuf:"bytes,5,opt,name=new_subscription,json=newSubscription" json:"new_subscription,omitempty"`
}

func (x *DiffSubRequest) Reset() {
	*x = DiffSubRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DiffSubRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiffSubRequest) ProtoMessage() {}

func (x *DiffSubRequest) ProtoReflect() protoreflect.Message {
	mi := &file_payment_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiffSubRequest.ProtoReflect.Descriptor instead.
func (*DiffSubRequest) Descriptor() ([]byte, []int) {
	return file_payment_proto_rawDescGZIP(), []int{3}
}

func (x *DiffSubRequest) GetOldSubscription() *Subscription {
	if x != nil {
		return x.OldSubscription
	}
	return nil
}

func (x *DiffSubRequest) GetNewSubscription() *Subscription {
	if x != nil {
		return x.NewSubscription
	}
	return nil
}

type Plan struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  *string       `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Limit *common.Limit `protobuf:"bytes,3,opt,name=limit" json:"limit,omitempty"`
	// optional float price = 4; // deprecated
	FpvPrice                 *int64 `protobuf:"varint,8,opt,name=fpv_price,json=fpvPrice" json:"fpv_price,omitempty"` // usd // permonth
	IsUnlimitedAgent         *bool  `protobuf:"varint,5,opt,name=is_unlimited_agent,json=isUnlimitedAgent" json:"is_unlimited_agent,omitempty"`
	Renewable                *bool  `protobuf:"varint,6,opt,name=renewable" json:"renewable,omitempty"`
	InactiveDaysAfterChurned *int64 `protobuf:"varint,7,opt,name=inactive_days_after_churned,json=inactiveDaysAfterChurned" json:"inactive_days_after_churned,omitempty"`
	LongBillingCycleDiscount *bool  `protobuf:"varint,9,opt,name=long_billing_cycle_discount,json=longBillingCycleDiscount" json:"long_billing_cycle_discount,omitempty"`
	MininumBillingCycleMonth *int64 `protobuf:"varint,10,opt,name=mininum_billing_cycle_month,json=mininumBillingCycleMonth" json:"mininum_billing_cycle_month,omitempty"`
	FpvPriceUsd              *int64 `protobuf:"varint,11,opt,name=fpv_price_usd,json=fpvPriceUsd" json:"fpv_price_usd,omitempty"` // usd // permonth
	FpvPriceVnd              *int64 `protobuf:"varint,12,opt,name=fpv_price_vnd,json=fpvPriceVnd" json:"fpv_price_vnd,omitempty"` // usd // permonth
}

func (x *Plan) Reset() {
	*x = Plan{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Plan) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Plan) ProtoMessage() {}

func (x *Plan) ProtoReflect() protoreflect.Message {
	mi := &file_payment_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Plan.ProtoReflect.Descriptor instead.
func (*Plan) Descriptor() ([]byte, []int) {
	return file_payment_proto_rawDescGZIP(), []int{4}
}

func (x *Plan) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *Plan) GetLimit() *common.Limit {
	if x != nil {
		return x.Limit
	}
	return nil
}

func (x *Plan) GetFpvPrice() int64 {
	if x != nil && x.FpvPrice != nil {
		return *x.FpvPrice
	}
	return 0
}

func (x *Plan) GetIsUnlimitedAgent() bool {
	if x != nil && x.IsUnlimitedAgent != nil {
		return *x.IsUnlimitedAgent
	}
	return false
}

func (x *Plan) GetRenewable() bool {
	if x != nil && x.Renewable != nil {
		return *x.Renewable
	}
	return false
}

func (x *Plan) GetInactiveDaysAfterChurned() int64 {
	if x != nil && x.InactiveDaysAfterChurned != nil {
		return *x.InactiveDaysAfterChurned
	}
	return 0
}

func (x *Plan) GetLongBillingCycleDiscount() bool {
	if x != nil && x.LongBillingCycleDiscount != nil {
		return *x.LongBillingCycleDiscount
	}
	return false
}

func (x *Plan) GetMininumBillingCycleMonth() int64 {
	if x != nil && x.MininumBillingCycleMonth != nil {
		return *x.MininumBillingCycleMonth
	}
	return 0
}

func (x *Plan) GetFpvPriceUsd() int64 {
	if x != nil && x.FpvPriceUsd != nil {
		return *x.FpvPriceUsd
	}
	return 0
}

func (x *Plan) GetFpvPriceVnd() int64 {
	if x != nil && x.FpvPriceVnd != nil {
		return *x.FpvPriceVnd
	}
	return 0
}

type PurchaseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ctx                   *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	AccountId             *string         `protobuf:"bytes,3,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	Created               *int64          `protobuf:"varint,11,opt,name=created" json:"created,omitempty"`
	PromotionCode         *string         `protobuf:"bytes,4,opt,name=promotion_code,json=promotionCode" json:"promotion_code,omitempty"` // optional string name = 7;
	Started               *int64          `protobuf:"varint,5,opt,name=started" json:"started,omitempty"`
	AutoRenew             *bool           `protobuf:"varint,9,opt,name=auto_renew,json=autoRenew" json:"auto_renew,omitempty"`
	BillingCycleMonth     *uint32         `protobuf:"varint,15,opt,name=billing_cycle_month,json=billingCycleMonth" json:"billing_cycle_month,omitempty"`
	NextBillingCycleMonth *uint32         `protobuf:"varint,16,opt,name=next_billing_cycle_month,json=nextBillingCycleMonth" json:"next_billing_cycle_month,omitempty"`
	Plan                  *string         `protobuf:"bytes,17,opt,name=plan" json:"plan,omitempty"`
	PaymentMethod         *string         `protobuf:"bytes,32,opt,name=payment_method,json=paymentMethod" json:"payment_method,omitempty"`
	Limit                 *common.Limit   `protobuf:"bytes,42,opt,name=limit" json:"limit,omitempty"`
	AutoCharge            *bool           `protobuf:"varint,44,opt,name=auto_charge,json=autoCharge" json:"auto_charge,omitempty"`
	Ended                 *int64          `protobuf:"varint,45,opt,name=ended" json:"ended,omitempty"` // optional int64 churned = 47;
	// optional int64 fpv_credit_vnd = 48;
	FpvUnlimitedAgentPrice *int64 `protobuf:"varint,49,opt,name=fpv_unlimited_agent_price,json=fpvUnlimitedAgentPrice" json:"fpv_unlimited_agent_price,omitempty"` // usd
	NumAgents              *int64 `protobuf:"varint,51,opt,name=num_agents,json=numAgents" json:"num_agents,omitempty"`
}

func (x *PurchaseRequest) Reset() {
	*x = PurchaseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PurchaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PurchaseRequest) ProtoMessage() {}

func (x *PurchaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_payment_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PurchaseRequest.ProtoReflect.Descriptor instead.
func (*PurchaseRequest) Descriptor() ([]byte, []int) {
	return file_payment_proto_rawDescGZIP(), []int{5}
}

func (x *PurchaseRequest) GetCtx() *common.Context {
	if x != nil {
		return x.Ctx
	}
	return nil
}

func (x *PurchaseRequest) GetAccountId() string {
	if x != nil && x.AccountId != nil {
		return *x.AccountId
	}
	return ""
}

func (x *PurchaseRequest) GetCreated() int64 {
	if x != nil && x.Created != nil {
		return *x.Created
	}
	return 0
}

func (x *PurchaseRequest) GetPromotionCode() string {
	if x != nil && x.PromotionCode != nil {
		return *x.PromotionCode
	}
	return ""
}

func (x *PurchaseRequest) GetStarted() int64 {
	if x != nil && x.Started != nil {
		return *x.Started
	}
	return 0
}

func (x *PurchaseRequest) GetAutoRenew() bool {
	if x != nil && x.AutoRenew != nil {
		return *x.AutoRenew
	}
	return false
}

func (x *PurchaseRequest) GetBillingCycleMonth() uint32 {
	if x != nil && x.BillingCycleMonth != nil {
		return *x.BillingCycleMonth
	}
	return 0
}

func (x *PurchaseRequest) GetNextBillingCycleMonth() uint32 {
	if x != nil && x.NextBillingCycleMonth != nil {
		return *x.NextBillingCycleMonth
	}
	return 0
}

func (x *PurchaseRequest) GetPlan() string {
	if x != nil && x.Plan != nil {
		return *x.Plan
	}
	return ""
}

func (x *PurchaseRequest) GetPaymentMethod() string {
	if x != nil && x.PaymentMethod != nil {
		return *x.PaymentMethod
	}
	return ""
}

func (x *PurchaseRequest) GetLimit() *common.Limit {
	if x != nil {
		return x.Limit
	}
	return nil
}

func (x *PurchaseRequest) GetAutoCharge() bool {
	if x != nil && x.AutoCharge != nil {
		return *x.AutoCharge
	}
	return false
}

func (x *PurchaseRequest) GetEnded() int64 {
	if x != nil && x.Ended != nil {
		return *x.Ended
	}
	return 0
}

func (x *PurchaseRequest) GetFpvUnlimitedAgentPrice() int64 {
	if x != nil && x.FpvUnlimitedAgentPrice != nil {
		return *x.FpvUnlimitedAgentPrice
	}
	return 0
}

func (x *PurchaseRequest) GetNumAgents() int64 {
	if x != nil && x.NumAgents != nil {
		return *x.NumAgents
	}
	return 0
}

type Subscription struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ctx                        *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	AccountId                  *string         `protobuf:"bytes,3,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	Created                    *int64          `protobuf:"varint,11,opt,name=created" json:"created,omitempty"`
	PromotionCode              *string         `protobuf:"bytes,4,opt,name=promotion_code,json=promotionCode" json:"promotion_code,omitempty"` // last recurring promotion code
	Started                    *int64          `protobuf:"varint,5,opt,name=started" json:"started,omitempty"`                                 // ms
	BillingCycleMonth          *uint32         `protobuf:"varint,15,opt,name=billing_cycle_month,json=billingCycleMonth" json:"billing_cycle_month,omitempty"`
	NextBillingCycleMonth      *uint32         `protobuf:"varint,16,opt,name=next_billing_cycle_month,json=nextBillingCycleMonth" json:"next_billing_cycle_month,omitempty"`
	Plan                       *string         `protobuf:"bytes,17,opt,name=plan" json:"plan,omitempty"` // trial, standard, standard_unlmited, advanced, custom
	NextPlan                   *string         `protobuf:"bytes,18,opt,name=next_plan,json=nextPlan" json:"next_plan,omitempty"`
	Credit                     *float32        `protobuf:"fixed32,27,opt,name=credit" json:"credit,omitempty"`
	Limit                      *common.Limit   `protobuf:"bytes,42,opt,name=limit" json:"limit,omitempty"`
	Ended                      *int64          `protobuf:"varint,45,opt,name=ended" json:"ended,omitempty"`
	Churned                    *int64          `protobuf:"varint,47,opt,name=churned" json:"churned,omitempty"`
	FpvCreditVnd               *int64          `protobuf:"varint,48,opt,name=fpv_credit_vnd,json=fpvCreditVnd" json:"fpv_credit_vnd,omitempty"`
	FpvUnlimitedAgentPrice     *int64          `protobuf:"varint,49,opt,name=fpv_unlimited_agent_price,json=fpvUnlimitedAgentPrice" json:"fpv_unlimited_agent_price,omitempty"`               // usd, custom price, only edited by subiz
	FpvNextUnlimitedAgentPrice *int64          `protobuf:"varint,53,opt,name=fpv_next_unlimited_agent_price,json=fpvNextUnlimitedAgentPrice" json:"fpv_next_unlimited_agent_price,omitempty"` // usd, custom price only edited by subiz
	NumAgents                  *int64          `protobuf:"varint,50,opt,name=num_agents,json=numAgents" json:"num_agents,omitempty"`
	UseTicket                  *int64          `protobuf:"varint,51,opt,name=use_ticket,json=useTicket" json:"use_ticket,omitempty"`
	NextNumAgents              *int64          `protobuf:"varint,52,opt,name=next_num_agents,json=nextNumAgents" json:"next_num_agents,omitempty"`
}

func (x *Subscription) Reset() {
	*x = Subscription{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Subscription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Subscription) ProtoMessage() {}

func (x *Subscription) ProtoReflect() protoreflect.Message {
	mi := &file_payment_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Subscription.ProtoReflect.Descriptor instead.
func (*Subscription) Descriptor() ([]byte, []int) {
	return file_payment_proto_rawDescGZIP(), []int{6}
}

func (x *Subscription) GetCtx() *common.Context {
	if x != nil {
		return x.Ctx
	}
	return nil
}

func (x *Subscription) GetAccountId() string {
	if x != nil && x.AccountId != nil {
		return *x.AccountId
	}
	return ""
}

func (x *Subscription) GetCreated() int64 {
	if x != nil && x.Created != nil {
		return *x.Created
	}
	return 0
}

func (x *Subscription) GetPromotionCode() string {
	if x != nil && x.PromotionCode != nil {
		return *x.PromotionCode
	}
	return ""
}

func (x *Subscription) GetStarted() int64 {
	if x != nil && x.Started != nil {
		return *x.Started
	}
	return 0
}

func (x *Subscription) GetBillingCycleMonth() uint32 {
	if x != nil && x.BillingCycleMonth != nil {
		return *x.BillingCycleMonth
	}
	return 0
}

func (x *Subscription) GetNextBillingCycleMonth() uint32 {
	if x != nil && x.NextBillingCycleMonth != nil {
		return *x.NextBillingCycleMonth
	}
	return 0
}

func (x *Subscription) GetPlan() string {
	if x != nil && x.Plan != nil {
		return *x.Plan
	}
	return ""
}

func (x *Subscription) GetNextPlan() string {
	if x != nil && x.NextPlan != nil {
		return *x.NextPlan
	}
	return ""
}

func (x *Subscription) GetCredit() float32 {
	if x != nil && x.Credit != nil {
		return *x.Credit
	}
	return 0
}

func (x *Subscription) GetLimit() *common.Limit {
	if x != nil {
		return x.Limit
	}
	return nil
}

func (x *Subscription) GetEnded() int64 {
	if x != nil && x.Ended != nil {
		return *x.Ended
	}
	return 0
}

func (x *Subscription) GetChurned() int64 {
	if x != nil && x.Churned != nil {
		return *x.Churned
	}
	return 0
}

func (x *Subscription) GetFpvCreditVnd() int64 {
	if x != nil && x.FpvCreditVnd != nil {
		return *x.FpvCreditVnd
	}
	return 0
}

func (x *Subscription) GetFpvUnlimitedAgentPrice() int64 {
	if x != nil && x.FpvUnlimitedAgentPrice != nil {
		return *x.FpvUnlimitedAgentPrice
	}
	return 0
}

func (x *Subscription) GetFpvNextUnlimitedAgentPrice() int64 {
	if x != nil && x.FpvNextUnlimitedAgentPrice != nil {
		return *x.FpvNextUnlimitedAgentPrice
	}
	return 0
}

func (x *Subscription) GetNumAgents() int64 {
	if x != nil && x.NumAgents != nil {
		return *x.NumAgents
	}
	return 0
}

func (x *Subscription) GetUseTicket() int64 {
	if x != nil && x.UseTicket != nil {
		return *x.UseTicket
	}
	return 0
}

func (x *Subscription) GetNextNumAgents() int64 {
	if x != nil && x.NextNumAgents != nil {
		return *x.NextNumAgents
	}
	return 0
}

type Bill struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ctx       *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	Id        *string         `protobuf:"bytes,3,opt,name=id" json:"id,omitempty"`
	AccountId *string         `protobuf:"bytes,4,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	// optional float amount = 5;
	InvoiceIds []string `protobuf:"bytes,6,rep,name=invoice_ids,json=invoiceIds" json:"invoice_ids,omitempty"`
	Created    *int64   `protobuf:"varint,7,opt,name=created" json:"created,omitempty"`
	// optional Contact customer_info = 8;
	PaymentMethod *string `protobuf:"bytes,10,opt,name=payment_method,json=paymentMethod" json:"payment_method,omitempty"` // auto
	Year          *int32  `protobuf:"varint,11,opt,name=year" json:"year,omitempty"`
	Description   *string `protobuf:"bytes,12,opt,name=description" json:"description,omitempty"`
	CreditId      *string `protobuf:"bytes,15,opt,name=credit_id,json=creditId" json:"credit_id,omitempty"`
	// optional string status = 16;
	Currency                 *string `protobuf:"bytes,17,opt,name=currency" json:"currency,omitempty"` // VND, USD
	OriginalBankTransferNote *string `protobuf:"bytes,18,opt,name=original_bank_transfer_note,json=originalBankTransferNote" json:"original_bank_transfer_note,omitempty"`
	BankTransferNote         *string `protobuf:"bytes,19,opt,name=bank_transfer_note,json=bankTransferNote" json:"bank_transfer_note,omitempty"`
	FpvAmountVnd             *int64  `protobuf:"varint,20,opt,name=fpv_amount_vnd,json=fpvAmountVnd" json:"fpv_amount_vnd,omitempty"`
	RequestId                *string `protobuf:"bytes,21,opt,name=request_id,json=requestId" json:"request_id,omitempty"` // random id from client
	BankAccountId            *string `protobuf:"bytes,22,opt,name=bank_account_id,json=bankAccountId" json:"bank_account_id,omitempty"`
	ByAgentId                *string `protobuf:"bytes,23,opt,name=by_agent_id,json=byAgentId" json:"by_agent_id,omitempty"`
	FpvAmountUsd             *int64  `protobuf:"varint,24,opt,name=fpv_amount_usd,json=fpvAmountUsd" json:"fpv_amount_usd,omitempty"`
	FpvReferrerCommissionVnd *int64  `protobuf:"varint,36,opt,name=fpv_referrer_commission_vnd,json=fpvReferrerCommissionVnd" json:"fpv_referrer_commission_vnd,omitempty"` // hidden
	ReferrerAgentId          *string `protobuf:"bytes,37,opt,name=referrer_agent_id,json=referrerAgentId" json:"referrer_agent_id,omitempty"`
	FpvReferrerCommissionUsd *int64  `protobuf:"varint,38,opt,name=fpv_referrer_commission_usd,json=fpvReferrerCommissionUsd" json:"fpv_referrer_commission_usd,omitempty"` // hidden
}

func (x *Bill) Reset() {
	*x = Bill{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Bill) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Bill) ProtoMessage() {}

func (x *Bill) ProtoReflect() protoreflect.Message {
	mi := &file_payment_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Bill.ProtoReflect.Descriptor instead.
func (*Bill) Descriptor() ([]byte, []int) {
	return file_payment_proto_rawDescGZIP(), []int{7}
}

func (x *Bill) GetCtx() *common.Context {
	if x != nil {
		return x.Ctx
	}
	return nil
}

func (x *Bill) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *Bill) GetAccountId() string {
	if x != nil && x.AccountId != nil {
		return *x.AccountId
	}
	return ""
}

func (x *Bill) GetInvoiceIds() []string {
	if x != nil {
		return x.InvoiceIds
	}
	return nil
}

func (x *Bill) GetCreated() int64 {
	if x != nil && x.Created != nil {
		return *x.Created
	}
	return 0
}

func (x *Bill) GetPaymentMethod() string {
	if x != nil && x.PaymentMethod != nil {
		return *x.PaymentMethod
	}
	return ""
}

func (x *Bill) GetYear() int32 {
	if x != nil && x.Year != nil {
		return *x.Year
	}
	return 0
}

func (x *Bill) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *Bill) GetCreditId() string {
	if x != nil && x.CreditId != nil {
		return *x.CreditId
	}
	return ""
}

func (x *Bill) GetCurrency() string {
	if x != nil && x.Currency != nil {
		return *x.Currency
	}
	return ""
}

func (x *Bill) GetOriginalBankTransferNote() string {
	if x != nil && x.OriginalBankTransferNote != nil {
		return *x.OriginalBankTransferNote
	}
	return ""
}

func (x *Bill) GetBankTransferNote() string {
	if x != nil && x.BankTransferNote != nil {
		return *x.BankTransferNote
	}
	return ""
}

func (x *Bill) GetFpvAmountVnd() int64 {
	if x != nil && x.FpvAmountVnd != nil {
		return *x.FpvAmountVnd
	}
	return 0
}

func (x *Bill) GetRequestId() string {
	if x != nil && x.RequestId != nil {
		return *x.RequestId
	}
	return ""
}

func (x *Bill) GetBankAccountId() string {
	if x != nil && x.BankAccountId != nil {
		return *x.BankAccountId
	}
	return ""
}

func (x *Bill) GetByAgentId() string {
	if x != nil && x.ByAgentId != nil {
		return *x.ByAgentId
	}
	return ""
}

func (x *Bill) GetFpvAmountUsd() int64 {
	if x != nil && x.FpvAmountUsd != nil {
		return *x.FpvAmountUsd
	}
	return 0
}

func (x *Bill) GetFpvReferrerCommissionVnd() int64 {
	if x != nil && x.FpvReferrerCommissionVnd != nil {
		return *x.FpvReferrerCommissionVnd
	}
	return 0
}

func (x *Bill) GetReferrerAgentId() string {
	if x != nil && x.ReferrerAgentId != nil {
		return *x.ReferrerAgentId
	}
	return ""
}

func (x *Bill) GetFpvReferrerCommissionUsd() int64 {
	if x != nil && x.FpvReferrerCommissionUsd != nil {
		return *x.FpvReferrerCommissionUsd
	}
	return 0
}

type Bills struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ctx       *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	AccountId *string         `protobuf:"bytes,2,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	Bills     []*Bill         `protobuf:"bytes,3,rep,name=bills" json:"bills,omitempty"`
}

func (x *Bills) Reset() {
	*x = Bills{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Bills) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Bills) ProtoMessage() {}

func (x *Bills) ProtoReflect() protoreflect.Message {
	mi := &file_payment_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Bills.ProtoReflect.Descriptor instead.
func (*Bills) Descriptor() ([]byte, []int) {
	return file_payment_proto_rawDescGZIP(), []int{8}
}

func (x *Bills) GetCtx() *common.Context {
	if x != nil {
		return x.Ctx
	}
	return nil
}

func (x *Bills) GetAccountId() string {
	if x != nil && x.AccountId != nil {
		return *x.AccountId
	}
	return ""
}

func (x *Bills) GetBills() []*Bill {
	if x != nil {
		return x.Bills
	}
	return nil
}

type Note struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ctx     *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	Message *string         `protobuf:"bytes,4,opt,name=message" json:"message,omitempty"`
	Creator *string         `protobuf:"bytes,5,opt,name=creator" json:"creator,omitempty"`
	Created *int64          `protobuf:"varint,6,opt,name=created" json:"created,omitempty"`
}

func (x *Note) Reset() {
	*x = Note{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Note) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Note) ProtoMessage() {}

func (x *Note) ProtoReflect() protoreflect.Message {
	mi := &file_payment_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Note.ProtoReflect.Descriptor instead.
func (*Note) Descriptor() ([]byte, []int) {
	return file_payment_proto_rawDescGZIP(), []int{9}
}

func (x *Note) GetCtx() *common.Context {
	if x != nil {
		return x.Ctx
	}
	return nil
}

func (x *Note) GetMessage() string {
	if x != nil && x.Message != nil {
		return *x.Message
	}
	return ""
}

func (x *Note) GetCreator() string {
	if x != nil && x.Creator != nil {
		return *x.Creator
	}
	return ""
}

func (x *Note) GetCreated() int64 {
	if x != nil && x.Created != nil {
		return *x.Created
	}
	return 0
}

type Invoices struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ctx       *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	Invoices  []*Invoice      `protobuf:"bytes,2,rep,name=invoices" json:"invoices,omitempty"`
	AccountId *string         `protobuf:"bytes,3,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	Anchor    *string         `protobuf:"bytes,4,opt,name=anchor" json:"anchor,omitempty"`
}

func (x *Invoices) Reset() {
	*x = Invoices{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Invoices) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Invoices) ProtoMessage() {}

func (x *Invoices) ProtoReflect() protoreflect.Message {
	mi := &file_payment_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Invoices.ProtoReflect.Descriptor instead.
func (*Invoices) Descriptor() ([]byte, []int) {
	return file_payment_proto_rawDescGZIP(), []int{10}
}

func (x *Invoices) GetCtx() *common.Context {
	if x != nil {
		return x.Ctx
	}
	return nil
}

func (x *Invoices) GetInvoices() []*Invoice {
	if x != nil {
		return x.Invoices
	}
	return nil
}

func (x *Invoices) GetAccountId() string {
	if x != nil && x.AccountId != nil {
		return *x.AccountId
	}
	return ""
}

func (x *Invoices) GetAnchor() string {
	if x != nil && x.Anchor != nil {
		return *x.Anchor
	}
	return ""
}

type ListInvoiceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ctx       *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	Anchor    *string         `protobuf:"bytes,4,opt,name=anchor" json:"anchor,omitempty"`
	AccountId *string         `protobuf:"bytes,5,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	CreditId  *string         `protobuf:"bytes,6,opt,name=credit_id,json=creditId" json:"credit_id,omitempty"`
}

func (x *ListInvoiceRequest) Reset() {
	*x = ListInvoiceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListInvoiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListInvoiceRequest) ProtoMessage() {}

func (x *ListInvoiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_payment_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListInvoiceRequest.ProtoReflect.Descriptor instead.
func (*ListInvoiceRequest) Descriptor() ([]byte, []int) {
	return file_payment_proto_rawDescGZIP(), []int{11}
}

func (x *ListInvoiceRequest) GetCtx() *common.Context {
	if x != nil {
		return x.Ctx
	}
	return nil
}

func (x *ListInvoiceRequest) GetAnchor() string {
	if x != nil && x.Anchor != nil {
		return *x.Anchor
	}
	return ""
}

func (x *ListInvoiceRequest) GetAccountId() string {
	if x != nil && x.AccountId != nil {
		return *x.AccountId
	}
	return ""
}

func (x *ListInvoiceRequest) GetCreditId() string {
	if x != nil && x.CreditId != nil {
		return *x.CreditId
	}
	return ""
}

type Invoice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ctx       *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	AccountId *string         `protobuf:"bytes,2,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	Id        *string         `protobuf:"bytes,3,opt,name=id" json:"id,omitempty"`
	// optional float amount_due = 4;
	PromotionCode         *string        `protobuf:"bytes,5,opt,name=promotion_code,json=promotionCode" json:"promotion_code,omitempty"`
	Description           *string        `protobuf:"bytes,6,opt,name=description" json:"description,omitempty"`
	BillingInfo           *BillingInfo   `protobuf:"bytes,8,opt,name=billing_info,json=billingInfo" json:"billing_info,omitempty"`
	DueDate               *int64         `protobuf:"varint,9,opt,name=due_date,json=dueDate" json:"due_date,omitempty"`
	State                 *string        `protobuf:"bytes,10,opt,name=state" json:"state,omitempty"`
	Created               *int64         `protobuf:"varint,11,opt,name=created" json:"created,omitempty"`
	Items                 []*InvoiceItem `protobuf:"bytes,12,rep,name=items" json:"items,omitempty"`
	Subtotal              *float32       `protobuf:"fixed32,14,opt,name=subtotal" json:"subtotal,omitempty"`
	TaxPercent            *float32       `protobuf:"fixed32,15,opt,name=tax_percent,json=taxPercent" json:"tax_percent,omitempty"`
	Tax                   *float32       `protobuf:"fixed32,16,opt,name=tax" json:"tax,omitempty"`
	Total                 *float32       `protobuf:"fixed32,17,opt,name=total" json:"total,omitempty"`
	Updated               *int64         `protobuf:"varint,18,opt,name=updated" json:"updated,omitempty"`
	Year                  *int32         `protobuf:"varint,19,opt,name=year" json:"year,omitempty"` // optional
	Notes                 []*Note        `protobuf:"bytes,22,rep,name=notes" json:"notes,omitempty"`
	Bills                 []string       `protobuf:"bytes,23,rep,name=bills" json:"bills,omitempty"`
	PaymentMade           *float32       `protobuf:"fixed32,24,opt,name=payment_made,json=paymentMade" json:"payment_made,omitempty"`
	CurrentSub            *Subscription  `protobuf:"bytes,25,opt,name=current_sub,json=currentSub" json:"current_sub,omitempty"`    // optional
	CurrentPlan           *Plan          `protobuf:"bytes,26,opt,name=current_plan,json=currentPlan" json:"current_plan,omitempty"` // optional
	CreditId              *string        `protobuf:"bytes,27,opt,name=credit_id,json=creditId" json:"credit_id,omitempty"`
	Currency              *string        `protobuf:"bytes,28,opt,name=currency" json:"currency,omitempty"`                                                             // VND
	FpvTotalVnd           *int64         `protobuf:"varint,29,opt,name=fpv_total_vnd,json=fpvTotalVnd" json:"fpv_total_vnd,omitempty"`                                 // read only
	FpvPaymentMadeVnd     *int64         `protobuf:"varint,30,opt,name=fpv_payment_made_vnd,json=fpvPaymentMadeVnd" json:"fpv_payment_made_vnd,omitempty"`             // read only
	IsGenQr               *bool          `protobuf:"varint,31,opt,name=is_gen_qr,json=isGenQr" json:"is_gen_qr,omitempty"`                                             // not save in db
	CreatedBy             *string        `protobuf:"bytes,32,opt,name=created_by,json=createdBy" json:"created_by,omitempty"`                                          // system
	PromotionCodePriceFpv *int64         `protobuf:"varint,33,opt,name=promotion_code_price_fpv,json=promotionCodePriceFpv" json:"promotion_code_price_fpv,omitempty"` // system
	FpvDiscountVnd        *int64         `protobuf:"varint,34,opt,name=fpv_discount_vnd,json=fpvDiscountVnd" json:"fpv_discount_vnd,omitempty"`                        // read only
	FpvSubtotalVnd        *int64         `protobuf:"varint,35,opt,name=fpv_subtotal_vnd,json=fpvSubtotalVnd" json:"fpv_subtotal_vnd,omitempty"`                        // read only
	FpvSubtotalUsd        *int64         `protobuf:"varint,38,opt,name=fpv_subtotal_usd,json=fpvSubtotalUsd" json:"fpv_subtotal_usd,omitempty"`
	FpvTaxPercent         *int64         `protobuf:"varint,39,opt,name=fpv_tax_percent,json=fpvTaxPercent" json:"fpv_tax_percent,omitempty"`
	FpvTaxUsd             *int64         `protobuf:"varint,40,opt,name=fpv_tax_usd,json=fpvTaxUsd" json:"fpv_tax_usd,omitempty"`
	FpvTotalUsd           *int64         `protobuf:"varint,41,opt,name=fpv_total_usd,json=fpvTotalUsd" json:"fpv_total_usd,omitempty"`
	FpvPaymentMadeUsd     *int64         `protobuf:"varint,42,opt,name=fpv_payment_made_usd,json=fpvPaymentMadeUsd" json:"fpv_payment_made_usd,omitempty"`
	FpvDiscountUsd        *int64         `protobuf:"varint,43,opt,name=fpv_discount_usd,json=fpvDiscountUsd" json:"fpv_discount_usd,omitempty"` // read only
	PaymentNum            *string        `protobuf:"bytes,45,opt,name=payment_num,json=paymentNum" json:"payment_num,omitempty"`
}

func (x *Invoice) Reset() {
	*x = Invoice{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Invoice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Invoice) ProtoMessage() {}

func (x *Invoice) ProtoReflect() protoreflect.Message {
	mi := &file_payment_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Invoice.ProtoReflect.Descriptor instead.
func (*Invoice) Descriptor() ([]byte, []int) {
	return file_payment_proto_rawDescGZIP(), []int{12}
}

func (x *Invoice) GetCtx() *common.Context {
	if x != nil {
		return x.Ctx
	}
	return nil
}

func (x *Invoice) GetAccountId() string {
	if x != nil && x.AccountId != nil {
		return *x.AccountId
	}
	return ""
}

func (x *Invoice) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *Invoice) GetPromotionCode() string {
	if x != nil && x.PromotionCode != nil {
		return *x.PromotionCode
	}
	return ""
}

func (x *Invoice) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *Invoice) GetBillingInfo() *BillingInfo {
	if x != nil {
		return x.BillingInfo
	}
	return nil
}

func (x *Invoice) GetDueDate() int64 {
	if x != nil && x.DueDate != nil {
		return *x.DueDate
	}
	return 0
}

func (x *Invoice) GetState() string {
	if x != nil && x.State != nil {
		return *x.State
	}
	return ""
}

func (x *Invoice) GetCreated() int64 {
	if x != nil && x.Created != nil {
		return *x.Created
	}
	return 0
}

func (x *Invoice) GetItems() []*InvoiceItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *Invoice) GetSubtotal() float32 {
	if x != nil && x.Subtotal != nil {
		return *x.Subtotal
	}
	return 0
}

func (x *Invoice) GetTaxPercent() float32 {
	if x != nil && x.TaxPercent != nil {
		return *x.TaxPercent
	}
	return 0
}

func (x *Invoice) GetTax() float32 {
	if x != nil && x.Tax != nil {
		return *x.Tax
	}
	return 0
}

func (x *Invoice) GetTotal() float32 {
	if x != nil && x.Total != nil {
		return *x.Total
	}
	return 0
}

func (x *Invoice) GetUpdated() int64 {
	if x != nil && x.Updated != nil {
		return *x.Updated
	}
	return 0
}

func (x *Invoice) GetYear() int32 {
	if x != nil && x.Year != nil {
		return *x.Year
	}
	return 0
}

func (x *Invoice) GetNotes() []*Note {
	if x != nil {
		return x.Notes
	}
	return nil
}

func (x *Invoice) GetBills() []string {
	if x != nil {
		return x.Bills
	}
	return nil
}

func (x *Invoice) GetPaymentMade() float32 {
	if x != nil && x.PaymentMade != nil {
		return *x.PaymentMade
	}
	return 0
}

func (x *Invoice) GetCurrentSub() *Subscription {
	if x != nil {
		return x.CurrentSub
	}
	return nil
}

func (x *Invoice) GetCurrentPlan() *Plan {
	if x != nil {
		return x.CurrentPlan
	}
	return nil
}

func (x *Invoice) GetCreditId() string {
	if x != nil && x.CreditId != nil {
		return *x.CreditId
	}
	return ""
}

func (x *Invoice) GetCurrency() string {
	if x != nil && x.Currency != nil {
		return *x.Currency
	}
	return ""
}

func (x *Invoice) GetFpvTotalVnd() int64 {
	if x != nil && x.FpvTotalVnd != nil {
		return *x.FpvTotalVnd
	}
	return 0
}

func (x *Invoice) GetFpvPaymentMadeVnd() int64 {
	if x != nil && x.FpvPaymentMadeVnd != nil {
		return *x.FpvPaymentMadeVnd
	}
	return 0
}

func (x *Invoice) GetIsGenQr() bool {
	if x != nil && x.IsGenQr != nil {
		return *x.IsGenQr
	}
	return false
}

func (x *Invoice) GetCreatedBy() string {
	if x != nil && x.CreatedBy != nil {
		return *x.CreatedBy
	}
	return ""
}

func (x *Invoice) GetPromotionCodePriceFpv() int64 {
	if x != nil && x.PromotionCodePriceFpv != nil {
		return *x.PromotionCodePriceFpv
	}
	return 0
}

func (x *Invoice) GetFpvDiscountVnd() int64 {
	if x != nil && x.FpvDiscountVnd != nil {
		return *x.FpvDiscountVnd
	}
	return 0
}

func (x *Invoice) GetFpvSubtotalVnd() int64 {
	if x != nil && x.FpvSubtotalVnd != nil {
		return *x.FpvSubtotalVnd
	}
	return 0
}

func (x *Invoice) GetFpvSubtotalUsd() int64 {
	if x != nil && x.FpvSubtotalUsd != nil {
		return *x.FpvSubtotalUsd
	}
	return 0
}

func (x *Invoice) GetFpvTaxPercent() int64 {
	if x != nil && x.FpvTaxPercent != nil {
		return *x.FpvTaxPercent
	}
	return 0
}

func (x *Invoice) GetFpvTaxUsd() int64 {
	if x != nil && x.FpvTaxUsd != nil {
		return *x.FpvTaxUsd
	}
	return 0
}

func (x *Invoice) GetFpvTotalUsd() int64 {
	if x != nil && x.FpvTotalUsd != nil {
		return *x.FpvTotalUsd
	}
	return 0
}

func (x *Invoice) GetFpvPaymentMadeUsd() int64 {
	if x != nil && x.FpvPaymentMadeUsd != nil {
		return *x.FpvPaymentMadeUsd
	}
	return 0
}

func (x *Invoice) GetFpvDiscountUsd() int64 {
	if x != nil && x.FpvDiscountUsd != nil {
		return *x.FpvDiscountUsd
	}
	return 0
}

func (x *Invoice) GetPaymentNum() string {
	if x != nil && x.PaymentNum != nil {
		return *x.PaymentNum
	}
	return ""
}

type AgentInvoiceItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Plan       *string `protobuf:"bytes,3,opt,name=plan" json:"plan,omitempty"`
	DayLeft    *int32  `protobuf:"varint,4,opt,name=day_left,json=dayLeft" json:"day_left,omitempty"`
	AgentCount *int32  `protobuf:"varint,8,opt,name=agent_count,json=agentCount" json:"agent_count,omitempty"`
	Started    *int64  `protobuf:"varint,9,opt,name=started" json:"started,omitempty"`
	Ended      *int64  `protobuf:"varint,10,opt,name=ended" json:"ended,omitempty"`
}

func (x *AgentInvoiceItem) Reset() {
	*x = AgentInvoiceItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentInvoiceItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentInvoiceItem) ProtoMessage() {}

func (x *AgentInvoiceItem) ProtoReflect() protoreflect.Message {
	mi := &file_payment_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentInvoiceItem.ProtoReflect.Descriptor instead.
func (*AgentInvoiceItem) Descriptor() ([]byte, []int) {
	return file_payment_proto_rawDescGZIP(), []int{13}
}

func (x *AgentInvoiceItem) GetPlan() string {
	if x != nil && x.Plan != nil {
		return *x.Plan
	}
	return ""
}

func (x *AgentInvoiceItem) GetDayLeft() int32 {
	if x != nil && x.DayLeft != nil {
		return *x.DayLeft
	}
	return 0
}

func (x *AgentInvoiceItem) GetAgentCount() int32 {
	if x != nil && x.AgentCount != nil {
		return *x.AgentCount
	}
	return 0
}

func (x *AgentInvoiceItem) GetStarted() int64 {
	if x != nil && x.Started != nil {
		return *x.Started
	}
	return 0
}

func (x *AgentInvoiceItem) GetEnded() int64 {
	if x != nil && x.Ended != nil {
		return *x.Ended
	}
	return 0
}

type RenewInvoiceItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Plan              *string `protobuf:"bytes,3,opt,name=plan" json:"plan,omitempty"`
	BillingCycleMonth *uint32 `protobuf:"varint,4,opt,name=billing_cycle_month,json=billingCycleMonth" json:"billing_cycle_month,omitempty"`
	AgentCount        *uint32 `protobuf:"varint,5,opt,name=agent_count,json=agentCount" json:"agent_count,omitempty"`
	FromTime          *int64  `protobuf:"varint,6,opt,name=from_time,json=fromTime" json:"from_time,omitempty"`
	FpvSavePercentage *int64  `protobuf:"varint,7,opt,name=fpv_save_percentage,json=fpvSavePercentage" json:"fpv_save_percentage,omitempty"`
}

func (x *RenewInvoiceItem) Reset() {
	*x = RenewInvoiceItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RenewInvoiceItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RenewInvoiceItem) ProtoMessage() {}

func (x *RenewInvoiceItem) ProtoReflect() protoreflect.Message {
	mi := &file_payment_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RenewInvoiceItem.ProtoReflect.Descriptor instead.
func (*RenewInvoiceItem) Descriptor() ([]byte, []int) {
	return file_payment_proto_rawDescGZIP(), []int{14}
}

func (x *RenewInvoiceItem) GetPlan() string {
	if x != nil && x.Plan != nil {
		return *x.Plan
	}
	return ""
}

func (x *RenewInvoiceItem) GetBillingCycleMonth() uint32 {
	if x != nil && x.BillingCycleMonth != nil {
		return *x.BillingCycleMonth
	}
	return 0
}

func (x *RenewInvoiceItem) GetAgentCount() uint32 {
	if x != nil && x.AgentCount != nil {
		return *x.AgentCount
	}
	return 0
}

func (x *RenewInvoiceItem) GetFromTime() int64 {
	if x != nil && x.FromTime != nil {
		return *x.FromTime
	}
	return 0
}

func (x *RenewInvoiceItem) GetFpvSavePercentage() int64 {
	if x != nil && x.FpvSavePercentage != nil {
		return *x.FpvSavePercentage
	}
	return 0
}

type ReservedPlanInvoiceItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OldPlan              *string `protobuf:"bytes,3,opt,name=old_plan,json=oldPlan" json:"old_plan,omitempty"`
	OldAgentCount        *int64  `protobuf:"varint,4,opt,name=old_agent_count,json=oldAgentCount" json:"old_agent_count,omitempty"`
	OldBillingCycleMonth *int64  `protobuf:"varint,5,opt,name=old_billing_cycle_month,json=oldBillingCycleMonth" json:"old_billing_cycle_month,omitempty"`
	// optional bool old_is_unlimited_agent = 5;
	// optional int64 old_fpv_save_percentage = 6;
	// optional int32 day_left = 7;
	OldStarted *int64 `protobuf:"varint,8,opt,name=old_started,json=oldStarted" json:"old_started,omitempty"` // now (not sub.started)
	OldEnded   *int64 `protobuf:"varint,9,opt,name=old_ended,json=oldEnded" json:"old_ended,omitempty"`
}

func (x *ReservedPlanInvoiceItem) Reset() {
	*x = ReservedPlanInvoiceItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReservedPlanInvoiceItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReservedPlanInvoiceItem) ProtoMessage() {}

func (x *ReservedPlanInvoiceItem) ProtoReflect() protoreflect.Message {
	mi := &file_payment_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReservedPlanInvoiceItem.ProtoReflect.Descriptor instead.
func (*ReservedPlanInvoiceItem) Descriptor() ([]byte, []int) {
	return file_payment_proto_rawDescGZIP(), []int{15}
}

func (x *ReservedPlanInvoiceItem) GetOldPlan() string {
	if x != nil && x.OldPlan != nil {
		return *x.OldPlan
	}
	return ""
}

func (x *ReservedPlanInvoiceItem) GetOldAgentCount() int64 {
	if x != nil && x.OldAgentCount != nil {
		return *x.OldAgentCount
	}
	return 0
}

func (x *ReservedPlanInvoiceItem) GetOldBillingCycleMonth() int64 {
	if x != nil && x.OldBillingCycleMonth != nil {
		return *x.OldBillingCycleMonth
	}
	return 0
}

func (x *ReservedPlanInvoiceItem) GetOldStarted() int64 {
	if x != nil && x.OldStarted != nil {
		return *x.OldStarted
	}
	return 0
}

func (x *ReservedPlanInvoiceItem) GetOldEnded() int64 {
	if x != nil && x.OldEnded != nil {
		return *x.OldEnded
	}
	return 0
}

type PlanInvoiceItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AgentCount        *uint32  `protobuf:"varint,2,opt,name=agent_count,json=agentCount" json:"agent_count,omitempty"`
	BillingCycleMonth *uint32  `protobuf:"varint,5,opt,name=billing_cycle_month,json=billingCycleMonth" json:"billing_cycle_month,omitempty"`
	OldPlan           *string  `protobuf:"bytes,6,opt,name=old_plan,json=oldPlan" json:"old_plan,omitempty"`
	NewPlan           *string  `protobuf:"bytes,3,opt,name=new_plan,json=newPlan" json:"new_plan,omitempty"`
	SavePercentage    *float32 `protobuf:"fixed32,9,opt,name=save_percentage,json=savePercentage" json:"save_percentage,omitempty"` // remove
	Started           *int64   `protobuf:"varint,8,opt,name=started" json:"started,omitempty"`
	DayLeft           *int32   `protobuf:"varint,4,opt,name=day_left,json=dayLeft" json:"day_left,omitempty"`
	OldAgentCount     *uint32  `protobuf:"varint,10,opt,name=old_agent_count,json=oldAgentCount" json:"old_agent_count,omitempty"`
	IsUnlimitedAgent  *bool    `protobuf:"varint,11,opt,name=is_unlimited_agent,json=isUnlimitedAgent" json:"is_unlimited_agent,omitempty"`
	FpvSavePercentage *int64   `protobuf:"varint,12,opt,name=fpv_save_percentage,json=fpvSavePercentage" json:"fpv_save_percentage,omitempty"`
	Ended             *int64   `protobuf:"varint,13,opt,name=ended" json:"ended,omitempty"` // most trusted
}

func (x *PlanInvoiceItem) Reset() {
	*x = PlanInvoiceItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlanInvoiceItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlanInvoiceItem) ProtoMessage() {}

func (x *PlanInvoiceItem) ProtoReflect() protoreflect.Message {
	mi := &file_payment_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlanInvoiceItem.ProtoReflect.Descriptor instead.
func (*PlanInvoiceItem) Descriptor() ([]byte, []int) {
	return file_payment_proto_rawDescGZIP(), []int{16}
}

func (x *PlanInvoiceItem) GetAgentCount() uint32 {
	if x != nil && x.AgentCount != nil {
		return *x.AgentCount
	}
	return 0
}

func (x *PlanInvoiceItem) GetBillingCycleMonth() uint32 {
	if x != nil && x.BillingCycleMonth != nil {
		return *x.BillingCycleMonth
	}
	return 0
}

func (x *PlanInvoiceItem) GetOldPlan() string {
	if x != nil && x.OldPlan != nil {
		return *x.OldPlan
	}
	return ""
}

func (x *PlanInvoiceItem) GetNewPlan() string {
	if x != nil && x.NewPlan != nil {
		return *x.NewPlan
	}
	return ""
}

func (x *PlanInvoiceItem) GetSavePercentage() float32 {
	if x != nil && x.SavePercentage != nil {
		return *x.SavePercentage
	}
	return 0
}

func (x *PlanInvoiceItem) GetStarted() int64 {
	if x != nil && x.Started != nil {
		return *x.Started
	}
	return 0
}

func (x *PlanInvoiceItem) GetDayLeft() int32 {
	if x != nil && x.DayLeft != nil {
		return *x.DayLeft
	}
	return 0
}

func (x *PlanInvoiceItem) GetOldAgentCount() uint32 {
	if x != nil && x.OldAgentCount != nil {
		return *x.OldAgentCount
	}
	return 0
}

func (x *PlanInvoiceItem) GetIsUnlimitedAgent() bool {
	if x != nil && x.IsUnlimitedAgent != nil {
		return *x.IsUnlimitedAgent
	}
	return false
}

func (x *PlanInvoiceItem) GetFpvSavePercentage() int64 {
	if x != nil && x.FpvSavePercentage != nil {
		return *x.FpvSavePercentage
	}
	return 0
}

func (x *PlanInvoiceItem) GetEnded() int64 {
	if x != nil && x.Ended != nil {
		return *x.Ended
	}
	return 0
}

type MarketingInvoiceItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MarketingInvoiceItem) Reset() {
	*x = MarketingInvoiceItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarketingInvoiceItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarketingInvoiceItem) ProtoMessage() {}

func (x *MarketingInvoiceItem) ProtoReflect() protoreflect.Message {
	mi := &file_payment_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarketingInvoiceItem.ProtoReflect.Descriptor instead.
func (*MarketingInvoiceItem) Descriptor() ([]byte, []int) {
	return file_payment_proto_rawDescGZIP(), []int{17}
}

type InvoiceItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Headline         *string           `protobuf:"bytes,4,opt,name=headline" json:"headline,omitempty"`
	Description      *string           `protobuf:"bytes,5,opt,name=description" json:"description,omitempty"`
	InvoiceId        *string           `protobuf:"bytes,6,opt,name=invoice_id,json=invoiceId" json:"invoice_id,omitempty"` // remove
	Quantity         *int32            `protobuf:"varint,7,opt,name=quantity" json:"quantity,omitempty"`
	Price            *float32          `protobuf:"fixed32,8,opt,name=price" json:"price,omitempty"` // per unit
	Data             *InvoiceItem_Data `protobuf:"bytes,9,opt,name=data" json:"data,omitempty"`
	TotalPrice       *float32          `protobuf:"fixed32,10,opt,name=total_price,json=totalPrice" json:"total_price,omitempty"` // = (* quantity price)
	FpvPriceVnd      *int64            `protobuf:"varint,11,opt,name=fpv_price_vnd,json=fpvPriceVnd" json:"fpv_price_vnd,omitempty"`
	FpvTotalPriceVnd *int64            `protobuf:"varint,12,opt,name=fpv_total_price_vnd,json=fpvTotalPriceVnd" json:"fpv_total_price_vnd,omitempty"`
	FpvDiscountVnd   *int64            `protobuf:"varint,13,opt,name=fpv_discount_vnd,json=fpvDiscountVnd" json:"fpv_discount_vnd,omitempty"`
	FpvPriceUsd      *int64            `protobuf:"varint,15,opt,name=fpv_price_usd,json=fpvPriceUsd" json:"fpv_price_usd,omitempty"`
	FpvTotalPriceUsd *int64            `protobuf:"varint,16,opt,name=fpv_total_price_usd,json=fpvTotalPriceUsd" json:"fpv_total_price_usd,omitempty"`
	FpvDiscountUsd   *int64            `protobuf:"varint,17,opt,name=fpv_discount_usd,json=fpvDiscountUsd" json:"fpv_discount_usd,omitempty"`
}

func (x *InvoiceItem) Reset() {
	*x = InvoiceItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvoiceItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvoiceItem) ProtoMessage() {}

func (x *InvoiceItem) ProtoReflect() protoreflect.Message {
	mi := &file_payment_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvoiceItem.ProtoReflect.Descriptor instead.
func (*InvoiceItem) Descriptor() ([]byte, []int) {
	return file_payment_proto_rawDescGZIP(), []int{18}
}

func (x *InvoiceItem) GetHeadline() string {
	if x != nil && x.Headline != nil {
		return *x.Headline
	}
	return ""
}

func (x *InvoiceItem) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *InvoiceItem) GetInvoiceId() string {
	if x != nil && x.InvoiceId != nil {
		return *x.InvoiceId
	}
	return ""
}

func (x *InvoiceItem) GetQuantity() int32 {
	if x != nil && x.Quantity != nil {
		return *x.Quantity
	}
	return 0
}

func (x *InvoiceItem) GetPrice() float32 {
	if x != nil && x.Price != nil {
		return *x.Price
	}
	return 0
}

func (x *InvoiceItem) GetData() *InvoiceItem_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *InvoiceItem) GetTotalPrice() float32 {
	if x != nil && x.TotalPrice != nil {
		return *x.TotalPrice
	}
	return 0
}

func (x *InvoiceItem) GetFpvPriceVnd() int64 {
	if x != nil && x.FpvPriceVnd != nil {
		return *x.FpvPriceVnd
	}
	return 0
}

func (x *InvoiceItem) GetFpvTotalPriceVnd() int64 {
	if x != nil && x.FpvTotalPriceVnd != nil {
		return *x.FpvTotalPriceVnd
	}
	return 0
}

func (x *InvoiceItem) GetFpvDiscountVnd() int64 {
	if x != nil && x.FpvDiscountVnd != nil {
		return *x.FpvDiscountVnd
	}
	return 0
}

func (x *InvoiceItem) GetFpvPriceUsd() int64 {
	if x != nil && x.FpvPriceUsd != nil {
		return *x.FpvPriceUsd
	}
	return 0
}

func (x *InvoiceItem) GetFpvTotalPriceUsd() int64 {
	if x != nil && x.FpvTotalPriceUsd != nil {
		return *x.FpvTotalPriceUsd
	}
	return 0
}

func (x *InvoiceItem) GetFpvDiscountUsd() int64 {
	if x != nil && x.FpvDiscountUsd != nil {
		return *x.FpvDiscountUsd
	}
	return 0
}

type BillingInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        *string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Address     *string `protobuf:"bytes,3,opt,name=address" json:"address,omitempty"`
	Vat         *string `protobuf:"bytes,4,opt,name=vat" json:"vat,omitempty"`
	CountryCode *string `protobuf:"bytes,5,opt,name=country_code,json=countryCode" json:"country_code,omitempty"`
	Country     *string `protobuf:"bytes,6,opt,name=country" json:"country,omitempty"`
	Email       *string `protobuf:"bytes,7,opt,name=email" json:"email,omitempty"`
}

func (x *BillingInfo) Reset() {
	*x = BillingInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BillingInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BillingInfo) ProtoMessage() {}

func (x *BillingInfo) ProtoReflect() protoreflect.Message {
	mi := &file_payment_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BillingInfo.ProtoReflect.Descriptor instead.
func (*BillingInfo) Descriptor() ([]byte, []int) {
	return file_payment_proto_rawDescGZIP(), []int{19}
}

func (x *BillingInfo) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *BillingInfo) GetAddress() string {
	if x != nil && x.Address != nil {
		return *x.Address
	}
	return ""
}

func (x *BillingInfo) GetVat() string {
	if x != nil && x.Vat != nil {
		return *x.Vat
	}
	return ""
}

func (x *BillingInfo) GetCountryCode() string {
	if x != nil && x.CountryCode != nil {
		return *x.CountryCode
	}
	return ""
}

func (x *BillingInfo) GetCountry() string {
	if x != nil && x.Country != nil {
		return *x.Country
	}
	return ""
}

func (x *BillingInfo) GetEmail() string {
	if x != nil && x.Email != nil {
		return *x.Email
	}
	return ""
}

type Logs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ctx  *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	Logs []*Log          `protobuf:"bytes,5,rep,name=logs" json:"logs,omitempty"`
}

func (x *Logs) Reset() {
	*x = Logs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Logs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Logs) ProtoMessage() {}

func (x *Logs) ProtoReflect() protoreflect.Message {
	mi := &file_payment_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Logs.ProtoReflect.Descriptor instead.
func (*Logs) Descriptor() ([]byte, []int) {
	return file_payment_proto_rawDescGZIP(), []int{20}
}

func (x *Logs) GetCtx() *common.Context {
	if x != nil {
		return x.Ctx
	}
	return nil
}

func (x *Logs) GetLogs() []*Log {
	if x != nil {
		return x.Logs
	}
	return nil
}

type Log struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ctx         *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	User        *string         `protobuf:"bytes,2,opt,name=user" json:"user,omitempty"`
	Id          *string         `protobuf:"bytes,8,opt,name=id" json:"id,omitempty"`
	Action      *string         `protobuf:"bytes,3,opt,name=action" json:"action,omitempty"`
	Created     *int64          `protobuf:"varint,4,opt,name=created" json:"created,omitempty"`
	Description *string         `protobuf:"bytes,5,opt,name=description" json:"description,omitempty"`
	AccountId   *string         `protobuf:"bytes,6,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	Month       *int32          `protobuf:"varint,7,opt,name=month" json:"month,omitempty"`
}

func (x *Log) Reset() {
	*x = Log{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Log) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Log) ProtoMessage() {}

func (x *Log) ProtoReflect() protoreflect.Message {
	mi := &file_payment_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Log.ProtoReflect.Descriptor instead.
func (*Log) Descriptor() ([]byte, []int) {
	return file_payment_proto_rawDescGZIP(), []int{21}
}

func (x *Log) GetCtx() *common.Context {
	if x != nil {
		return x.Ctx
	}
	return nil
}

func (x *Log) GetUser() string {
	if x != nil && x.User != nil {
		return *x.User
	}
	return ""
}

func (x *Log) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *Log) GetAction() string {
	if x != nil && x.Action != nil {
		return *x.Action
	}
	return ""
}

func (x *Log) GetCreated() int64 {
	if x != nil && x.Created != nil {
		return *x.Created
	}
	return 0
}

func (x *Log) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *Log) GetAccountId() string {
	if x != nil && x.AccountId != nil {
		return *x.AccountId
	}
	return ""
}

func (x *Log) GetMonth() int32 {
	if x != nil && x.Month != nil {
		return *x.Month
	}
	return 0
}

type String struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ctx *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	Str *string         `protobuf:"bytes,2,opt,name=str" json:"str,omitempty"`
}

func (x *String) Reset() {
	*x = String{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *String) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*String) ProtoMessage() {}

func (x *String) ProtoReflect() protoreflect.Message {
	mi := &file_payment_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use String.ProtoReflect.Descriptor instead.
func (*String) Descriptor() ([]byte, []int) {
	return file_payment_proto_rawDescGZIP(), []int{22}
}

func (x *String) GetCtx() *common.Context {
	if x != nil {
		return x.Ctx
	}
	return nil
}

func (x *String) GetStr() string {
	if x != nil && x.Str != nil {
		return *x.Str
	}
	return ""
}

type PayRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ctx         *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	CreditId    *string         `protobuf:"bytes,3,opt,name=credit_id,json=creditId" json:"credit_id,omitempty"`
	AccountId   *string         `protobuf:"bytes,8,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	InvoiceIds  []string        `protobuf:"bytes,6,rep,name=invoice_ids,json=invoiceIds" json:"invoice_ids,omitempty"`
	Description *string         `protobuf:"bytes,7,opt,name=description" json:"description,omitempty"`
	// optional Contact CustomerInfo = 9;
	Amount        *float32 `protobuf:"fixed32,10,opt,name=amount" json:"amount,omitempty"` // deprecated
	FpvAmount     *int64   `protobuf:"varint,11,opt,name=fpv_amount,json=fpvAmount" json:"fpv_amount,omitempty"`
	RequestId     *string  `protobuf:"bytes,12,opt,name=request_id,json=requestId" json:"request_id,omitempty"`
	Created       *int64   `protobuf:"varint,13,opt,name=created" json:"created,omitempty"`
	Currency      *string  `protobuf:"bytes,14,opt,name=currency" json:"currency,omitempty"` // VND or USD
	BankAccountId *string  `protobuf:"bytes,15,opt,name=bank_account_id,json=bankAccountId" json:"bank_account_id,omitempty"`
	ByAgentId     *string  `protobuf:"bytes,16,opt,name=by_agent_id,json=byAgentId" json:"by_agent_id,omitempty"`
	Method        *string  `protobuf:"bytes,17,opt,name=method" json:"method,omitempty"` // bank_transfer
	PaymentMethod *string  `protobuf:"bytes,18,opt,name=payment_method,json=paymentMethod" json:"payment_method,omitempty"`
}

func (x *PayRequest) Reset() {
	*x = PayRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayRequest) ProtoMessage() {}

func (x *PayRequest) ProtoReflect() protoreflect.Message {
	mi := &file_payment_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayRequest.ProtoReflect.Descriptor instead.
func (*PayRequest) Descriptor() ([]byte, []int) {
	return file_payment_proto_rawDescGZIP(), []int{23}
}

func (x *PayRequest) GetCtx() *common.Context {
	if x != nil {
		return x.Ctx
	}
	return nil
}

func (x *PayRequest) GetCreditId() string {
	if x != nil && x.CreditId != nil {
		return *x.CreditId
	}
	return ""
}

func (x *PayRequest) GetAccountId() string {
	if x != nil && x.AccountId != nil {
		return *x.AccountId
	}
	return ""
}

func (x *PayRequest) GetInvoiceIds() []string {
	if x != nil {
		return x.InvoiceIds
	}
	return nil
}

func (x *PayRequest) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *PayRequest) GetAmount() float32 {
	if x != nil && x.Amount != nil {
		return *x.Amount
	}
	return 0
}

func (x *PayRequest) GetFpvAmount() int64 {
	if x != nil && x.FpvAmount != nil {
		return *x.FpvAmount
	}
	return 0
}

func (x *PayRequest) GetRequestId() string {
	if x != nil && x.RequestId != nil {
		return *x.RequestId
	}
	return ""
}

func (x *PayRequest) GetCreated() int64 {
	if x != nil && x.Created != nil {
		return *x.Created
	}
	return 0
}

func (x *PayRequest) GetCurrency() string {
	if x != nil && x.Currency != nil {
		return *x.Currency
	}
	return ""
}

func (x *PayRequest) GetBankAccountId() string {
	if x != nil && x.BankAccountId != nil {
		return *x.BankAccountId
	}
	return ""
}

func (x *PayRequest) GetByAgentId() string {
	if x != nil && x.ByAgentId != nil {
		return *x.ByAgentId
	}
	return ""
}

func (x *PayRequest) GetMethod() string {
	if x != nil && x.Method != nil {
		return *x.Method
	}
	return ""
}

func (x *PayRequest) GetPaymentMethod() string {
	if x != nil && x.PaymentMethod != nil {
		return *x.PaymentMethod
	}
	return ""
}

type AutoPayRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ctx           *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	Description   *string         `protobuf:"bytes,7,opt,name=description" json:"description,omitempty"`
	BankAccountId *string         `protobuf:"bytes,8,opt,name=bank_account_id,json=bankAccountId" json:"bank_account_id,omitempty"`
	Created       *int64          `protobuf:"varint,9,opt,name=created" json:"created,omitempty"`
	FpvAmount     *int64          `protobuf:"varint,10,opt,name=fpv_amount,json=fpvAmount" json:"fpv_amount,omitempty"` // 3_000_000_000_000 (3 tr)
	Currency      *string         `protobuf:"bytes,17,opt,name=currency" json:"currency,omitempty"`                     // VND or USD
}

func (x *AutoPayRequest) Reset() {
	*x = AutoPayRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AutoPayRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AutoPayRequest) ProtoMessage() {}

func (x *AutoPayRequest) ProtoReflect() protoreflect.Message {
	mi := &file_payment_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AutoPayRequest.ProtoReflect.Descriptor instead.
func (*AutoPayRequest) Descriptor() ([]byte, []int) {
	return file_payment_proto_rawDescGZIP(), []int{24}
}

func (x *AutoPayRequest) GetCtx() *common.Context {
	if x != nil {
		return x.Ctx
	}
	return nil
}

func (x *AutoPayRequest) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *AutoPayRequest) GetBankAccountId() string {
	if x != nil && x.BankAccountId != nil {
		return *x.BankAccountId
	}
	return ""
}

func (x *AutoPayRequest) GetCreated() int64 {
	if x != nil && x.Created != nil {
		return *x.Created
	}
	return 0
}

func (x *AutoPayRequest) GetFpvAmount() int64 {
	if x != nil && x.FpvAmount != nil {
		return *x.FpvAmount
	}
	return 0
}

func (x *AutoPayRequest) GetCurrency() string {
	if x != nil && x.Currency != nil {
		return *x.Currency
	}
	return ""
}

type InvoiceCreatedEmail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ctx            *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	AccountId      *string         `protobuf:"bytes,3,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	InvoiceId      *string         `protobuf:"bytes,5,opt,name=invoice_id,json=invoiceId" json:"invoice_id,omitempty"`
	Created        *int64          `protobuf:"varint,6,opt,name=created" json:"created,omitempty"`
	InvoiceCreated *string         `protobuf:"bytes,8,opt,name=invoice_created,json=invoiceCreated" json:"invoice_created,omitempty"`
	InvoiceLink    *string         `protobuf:"bytes,9,opt,name=invoice_link,json=invoiceLink" json:"invoice_link,omitempty"`
}

func (x *InvoiceCreatedEmail) Reset() {
	*x = InvoiceCreatedEmail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvoiceCreatedEmail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvoiceCreatedEmail) ProtoMessage() {}

func (x *InvoiceCreatedEmail) ProtoReflect() protoreflect.Message {
	mi := &file_payment_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvoiceCreatedEmail.ProtoReflect.Descriptor instead.
func (*InvoiceCreatedEmail) Descriptor() ([]byte, []int) {
	return file_payment_proto_rawDescGZIP(), []int{25}
}

func (x *InvoiceCreatedEmail) GetCtx() *common.Context {
	if x != nil {
		return x.Ctx
	}
	return nil
}

func (x *InvoiceCreatedEmail) GetAccountId() string {
	if x != nil && x.AccountId != nil {
		return *x.AccountId
	}
	return ""
}

func (x *InvoiceCreatedEmail) GetInvoiceId() string {
	if x != nil && x.InvoiceId != nil {
		return *x.InvoiceId
	}
	return ""
}

func (x *InvoiceCreatedEmail) GetCreated() int64 {
	if x != nil && x.Created != nil {
		return *x.Created
	}
	return 0
}

func (x *InvoiceCreatedEmail) GetInvoiceCreated() string {
	if x != nil && x.InvoiceCreated != nil {
		return *x.InvoiceCreated
	}
	return ""
}

func (x *InvoiceCreatedEmail) GetInvoiceLink() string {
	if x != nil && x.InvoiceLink != nil {
		return *x.InvoiceLink
	}
	return ""
}

type TrialEndingEmail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ctx       *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	AccountId *string         `protobuf:"bytes,2,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	Ended     *int64          `protobuf:"varint,3,opt,name=ended" json:"ended,omitempty"`
	Created   *int64          `protobuf:"varint,6,opt,name=created" json:"created,omitempty"`
}

func (x *TrialEndingEmail) Reset() {
	*x = TrialEndingEmail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrialEndingEmail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrialEndingEmail) ProtoMessage() {}

func (x *TrialEndingEmail) ProtoReflect() protoreflect.Message {
	mi := &file_payment_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrialEndingEmail.ProtoReflect.Descriptor instead.
func (*TrialEndingEmail) Descriptor() ([]byte, []int) {
	return file_payment_proto_rawDescGZIP(), []int{26}
}

func (x *TrialEndingEmail) GetCtx() *common.Context {
	if x != nil {
		return x.Ctx
	}
	return nil
}

func (x *TrialEndingEmail) GetAccountId() string {
	if x != nil && x.AccountId != nil {
		return *x.AccountId
	}
	return ""
}

func (x *TrialEndingEmail) GetEnded() int64 {
	if x != nil && x.Ended != nil {
		return *x.Ended
	}
	return 0
}

func (x *TrialEndingEmail) GetCreated() int64 {
	if x != nil && x.Created != nil {
		return *x.Created
	}
	return 0
}

type UpdatePlanEmail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ctx       *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	AccountId *string         `protobuf:"bytes,2,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	OldPlan   *string         `protobuf:"bytes,4,opt,name=old_plan,json=oldPlan" json:"old_plan,omitempty"`
	NewPlan   *string         `protobuf:"bytes,5,opt,name=new_plan,json=newPlan" json:"new_plan,omitempty"`
	Created   *int64          `protobuf:"varint,6,opt,name=created" json:"created,omitempty"`
}

func (x *UpdatePlanEmail) Reset() {
	*x = UpdatePlanEmail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePlanEmail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePlanEmail) ProtoMessage() {}

func (x *UpdatePlanEmail) ProtoReflect() protoreflect.Message {
	mi := &file_payment_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePlanEmail.ProtoReflect.Descriptor instead.
func (*UpdatePlanEmail) Descriptor() ([]byte, []int) {
	return file_payment_proto_rawDescGZIP(), []int{27}
}

func (x *UpdatePlanEmail) GetCtx() *common.Context {
	if x != nil {
		return x.Ctx
	}
	return nil
}

func (x *UpdatePlanEmail) GetAccountId() string {
	if x != nil && x.AccountId != nil {
		return *x.AccountId
	}
	return ""
}

func (x *UpdatePlanEmail) GetOldPlan() string {
	if x != nil && x.OldPlan != nil {
		return *x.OldPlan
	}
	return ""
}

func (x *UpdatePlanEmail) GetNewPlan() string {
	if x != nil && x.NewPlan != nil {
		return *x.NewPlan
	}
	return ""
}

func (x *UpdatePlanEmail) GetCreated() int64 {
	if x != nil && x.Created != nil {
		return *x.Created
	}
	return 0
}

type PaidInvoiceEmail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ctx            *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	AccountId      *string         `protobuf:"bytes,3,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	InvoiceId      *string         `protobuf:"bytes,5,opt,name=invoice_id,json=invoiceId" json:"invoice_id,omitempty"`
	Created        *int64          `protobuf:"varint,6,opt,name=created" json:"created,omitempty"`
	InvoiceCreated *string         `protobuf:"bytes,8,opt,name=invoice_created,json=invoiceCreated" json:"invoice_created,omitempty"`
	InvoiceLink    *string         `protobuf:"bytes,9,opt,name=invoice_link,json=invoiceLink" json:"invoice_link,omitempty"`
}

func (x *PaidInvoiceEmail) Reset() {
	*x = PaidInvoiceEmail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaidInvoiceEmail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaidInvoiceEmail) ProtoMessage() {}

func (x *PaidInvoiceEmail) ProtoReflect() protoreflect.Message {
	mi := &file_payment_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaidInvoiceEmail.ProtoReflect.Descriptor instead.
func (*PaidInvoiceEmail) Descriptor() ([]byte, []int) {
	return file_payment_proto_rawDescGZIP(), []int{28}
}

func (x *PaidInvoiceEmail) GetCtx() *common.Context {
	if x != nil {
		return x.Ctx
	}
	return nil
}

func (x *PaidInvoiceEmail) GetAccountId() string {
	if x != nil && x.AccountId != nil {
		return *x.AccountId
	}
	return ""
}

func (x *PaidInvoiceEmail) GetInvoiceId() string {
	if x != nil && x.InvoiceId != nil {
		return *x.InvoiceId
	}
	return ""
}

func (x *PaidInvoiceEmail) GetCreated() int64 {
	if x != nil && x.Created != nil {
		return *x.Created
	}
	return 0
}

func (x *PaidInvoiceEmail) GetInvoiceCreated() string {
	if x != nil && x.InvoiceCreated != nil {
		return *x.InvoiceCreated
	}
	return ""
}

func (x *PaidInvoiceEmail) GetInvoiceLink() string {
	if x != nil && x.InvoiceLink != nil {
		return *x.InvoiceLink
	}
	return ""
}

type FreeTierPolicy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ctx             *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	AccountId       *string         `protobuf:"bytes,3,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	Service         *string         `protobuf:"bytes,4,opt,name=service" json:"service,omitempty"`
	Category        *string         `protobuf:"bytes,5,opt,name=category" json:"category,omitempty"` // agent, zalo_zns, zalo_active_message, image
	FromHour        *int64          `protobuf:"varint,6,opt,name=from_hour,json=fromHour" json:"from_hour,omitempty"`
	ToHour          *int64          `protobuf:"varint,7,opt,name=to_hour,json=toHour" json:"to_hour,omitempty"`
	Type            *string         `protobuf:"bytes,8,opt,name=type" json:"type,omitempty"` // per-hour vs total
	CreatedBy       *int64          `protobuf:"varint,9,opt,name=created_by,json=createdBy" json:"created_by,omitempty"`
	Created         *int64          `protobuf:"varint,10,opt,name=created" json:"created,omitempty"`
	CapacityPerHour *int64          `protobuf:"varint,11,opt,name=capacity_per_hour,json=capacityPerHour" json:"capacity_per_hour,omitempty"`
	TotalCapacity   *int64          `protobuf:"varint,12,opt,name=total_capacity,json=totalCapacity" json:"total_capacity,omitempty"`
}

func (x *FreeTierPolicy) Reset() {
	*x = FreeTierPolicy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FreeTierPolicy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FreeTierPolicy) ProtoMessage() {}

func (x *FreeTierPolicy) ProtoReflect() protoreflect.Message {
	mi := &file_payment_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FreeTierPolicy.ProtoReflect.Descriptor instead.
func (*FreeTierPolicy) Descriptor() ([]byte, []int) {
	return file_payment_proto_rawDescGZIP(), []int{29}
}

func (x *FreeTierPolicy) GetCtx() *common.Context {
	if x != nil {
		return x.Ctx
	}
	return nil
}

func (x *FreeTierPolicy) GetAccountId() string {
	if x != nil && x.AccountId != nil {
		return *x.AccountId
	}
	return ""
}

func (x *FreeTierPolicy) GetService() string {
	if x != nil && x.Service != nil {
		return *x.Service
	}
	return ""
}

func (x *FreeTierPolicy) GetCategory() string {
	if x != nil && x.Category != nil {
		return *x.Category
	}
	return ""
}

func (x *FreeTierPolicy) GetFromHour() int64 {
	if x != nil && x.FromHour != nil {
		return *x.FromHour
	}
	return 0
}

func (x *FreeTierPolicy) GetToHour() int64 {
	if x != nil && x.ToHour != nil {
		return *x.ToHour
	}
	return 0
}

func (x *FreeTierPolicy) GetType() string {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return ""
}

func (x *FreeTierPolicy) GetCreatedBy() int64 {
	if x != nil && x.CreatedBy != nil {
		return *x.CreatedBy
	}
	return 0
}

func (x *FreeTierPolicy) GetCreated() int64 {
	if x != nil && x.Created != nil {
		return *x.Created
	}
	return 0
}

func (x *FreeTierPolicy) GetCapacityPerHour() int64 {
	if x != nil && x.CapacityPerHour != nil {
		return *x.CapacityPerHour
	}
	return 0
}

func (x *FreeTierPolicy) GetTotalCapacity() int64 {
	if x != nil && x.TotalCapacity != nil {
		return *x.TotalCapacity
	}
	return 0
}

type InvoiceItem_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Renew        *RenewInvoiceItem        `protobuf:"bytes,2,opt,name=renew" json:"renew,omitempty"`
	Agent        *AgentInvoiceItem        `protobuf:"bytes,3,opt,name=agent" json:"agent,omitempty"`
	Plan         *PlanInvoiceItem         `protobuf:"bytes,5,opt,name=plan" json:"plan,omitempty"`
	Marketing    *MarketingInvoiceItem    `protobuf:"bytes,6,opt,name=marketing" json:"marketing,omitempty"`
	ReservedPlan *ReservedPlanInvoiceItem `protobuf:"bytes,7,opt,name=reserved_plan,json=reservedPlan" json:"reserved_plan,omitempty"`
}

func (x *InvoiceItem_Data) Reset() {
	*x = InvoiceItem_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvoiceItem_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvoiceItem_Data) ProtoMessage() {}

func (x *InvoiceItem_Data) ProtoReflect() protoreflect.Message {
	mi := &file_payment_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvoiceItem_Data.ProtoReflect.Descriptor instead.
func (*InvoiceItem_Data) Descriptor() ([]byte, []int) {
	return file_payment_proto_rawDescGZIP(), []int{18, 0}
}

func (x *InvoiceItem_Data) GetRenew() *RenewInvoiceItem {
	if x != nil {
		return x.Renew
	}
	return nil
}

func (x *InvoiceItem_Data) GetAgent() *AgentInvoiceItem {
	if x != nil {
		return x.Agent
	}
	return nil
}

func (x *InvoiceItem_Data) GetPlan() *PlanInvoiceItem {
	if x != nil {
		return x.Plan
	}
	return nil
}

func (x *InvoiceItem_Data) GetMarketing() *MarketingInvoiceItem {
	if x != nil {
		return x.Marketing
	}
	return nil
}

func (x *InvoiceItem_Data) GetReservedPlan() *ReservedPlanInvoiceItem {
	if x != nil {
		return x.ReservedPlan
	}
	return nil
}

var File_payment_proto protoreflect.FileDescriptor

var file_payment_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x07, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x1a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x7a, 0x0a, 0x08, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x12, 0x21, 0x0a, 0x03, 0x63, 0x74, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74,
	0x52, 0x03, 0x63, 0x74, 0x78, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x22, 0xb5, 0x02, 0x0a, 0x07, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x21,
	0x0a, 0x03, 0x63, 0x74, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x03, 0x63, 0x74,
	0x78, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x74,
	0x6f, 0x70, 0x69, 0x63, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x61, 0x75,
	0x74, 0x68, 0x6f, 0x72, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x5f, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x22, 0x2c, 0x0a, 0x05, 0x50, 0x6c,
	0x61, 0x6e, 0x73, 0x12, 0x23, 0x0a, 0x05, 0x70, 0x6c, 0x61, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x6c, 0x61,
	0x6e, 0x52, 0x05, 0x70, 0x6c, 0x61, 0x6e, 0x73, 0x22, 0x94, 0x01, 0x0a, 0x0e, 0x44, 0x69, 0x66,
	0x66, 0x53, 0x75, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x40, 0x0a, 0x10, 0x6f,
	0x6c, 0x64, 0x5f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e,
	0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0f, 0x6f, 0x6c,
	0x64, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x40, 0x0a,
	0x10, 0x6e, 0x65, 0x77, 0x5f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0f,
	0x6e, 0x65, 0x77, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x86, 0x04, 0x0a, 0x04, 0x50, 0x6c, 0x61, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x05,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x70, 0x76, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x66, 0x70, 0x76, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x2c,
	0x0a, 0x12, 0x69, 0x73, 0x5f, 0x75, 0x6e, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x67, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x69, 0x73, 0x55, 0x6e,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x64, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x72, 0x65, 0x6e, 0x65, 0x77, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x09, 0x72, 0x65, 0x6e, 0x65, 0x77, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x3d, 0x0a, 0x1b, 0x69, 0x6e,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x64, 0x61, 0x79, 0x73, 0x5f, 0x61, 0x66, 0x74, 0x65,
	0x72, 0x5f, 0x63, 0x68, 0x75, 0x72, 0x6e, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x18, 0x69, 0x6e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x44, 0x61, 0x79, 0x73, 0x41, 0x66, 0x74,
	0x65, 0x72, 0x43, 0x68, 0x75, 0x72, 0x6e, 0x65, 0x64, 0x12, 0x3d, 0x0a, 0x1b, 0x6c, 0x6f, 0x6e,
	0x67, 0x5f, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x5f,
	0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x18,
	0x6c, 0x6f, 0x6e, 0x67, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x43, 0x79, 0x63, 0x6c, 0x65,
	0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x3d, 0x0a, 0x1b, 0x6d, 0x69, 0x6e, 0x69,
	0x6e, 0x75, 0x6d, 0x5f, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x79, 0x63, 0x6c,
	0x65, 0x5f, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x18, 0x6d,
	0x69, 0x6e, 0x69, 0x6e, 0x75, 0x6d, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x43, 0x79, 0x63,
	0x6c, 0x65, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x12, 0x22, 0x0a, 0x0d, 0x66, 0x70, 0x76, 0x5f, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x5f, 0x75, 0x73, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b,
	0x66, 0x70, 0x76, 0x50, 0x72, 0x69, 0x63, 0x65, 0x55, 0x73, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x66,
	0x70, 0x76, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x76, 0x6e, 0x64, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0b, 0x66, 0x70, 0x76, 0x50, 0x72, 0x69, 0x63, 0x65, 0x56, 0x6e, 0x64, 0x22,
	0x57, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x09, 0x0a, 0x05, 0x74, 0x72, 0x69, 0x61, 0x6c,
	0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x10, 0x02,
	0x12, 0x0c, 0x0a, 0x08, 0x61, 0x64, 0x76, 0x61, 0x6e, 0x63, 0x65, 0x64, 0x10, 0x03, 0x12, 0x1c,
	0x0a, 0x18, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x5f, 0x75, 0x6e, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x10, 0x04, 0x12, 0x0a, 0x0a, 0x06,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x10, 0x05, 0x22, 0xa7, 0x04, 0x0a, 0x0f, 0x50, 0x75, 0x72,
	0x63, 0x68, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x03,
	0x63, 0x74, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x03, 0x63, 0x74, 0x78, 0x12,
	0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x6d,
	0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x75, 0x74,
	0x6f, 0x5f, 0x72, 0x65, 0x6e, 0x65, 0x77, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x61,
	0x75, 0x74, 0x6f, 0x52, 0x65, 0x6e, 0x65, 0x77, 0x12, 0x2e, 0x0a, 0x13, 0x62, 0x69, 0x6c, 0x6c,
	0x69, 0x6e, 0x67, 0x5f, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x5f, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x43, 0x79,
	0x63, 0x6c, 0x65, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x12, 0x37, 0x0a, 0x18, 0x6e, 0x65, 0x78, 0x74,
	0x5f, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x5f, 0x6d,
	0x6f, 0x6e, 0x74, 0x68, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x15, 0x6e, 0x65, 0x78, 0x74,
	0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x43, 0x79, 0x63, 0x6c, 0x65, 0x4d, 0x6f, 0x6e, 0x74,
	0x68, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6c, 0x61, 0x6e, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x70, 0x6c, 0x61, 0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x20, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x23, 0x0a, 0x05,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x2a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x75, 0x74, 0x6f, 0x5f, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65,
	0x18, 0x2c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x61, 0x75, 0x74, 0x6f, 0x43, 0x68, 0x61, 0x72,
	0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x18, 0x2d, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x12, 0x39, 0x0a, 0x19, 0x66, 0x70, 0x76, 0x5f,
	0x75, 0x6e, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x31, 0x20, 0x01, 0x28, 0x03, 0x52, 0x16, 0x66, 0x70, 0x76,
	0x55, 0x6e, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x64, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6e, 0x75, 0x6d, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74,
	0x73, 0x18, 0x33, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6e, 0x75, 0x6d, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x73, 0x22, 0xbd, 0x05, 0x0a, 0x0c, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x03, 0x63, 0x74, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78,
	0x74, 0x52, 0x03, 0x63, 0x74, 0x78, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12,
	0x25, 0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69,
	0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64,
	0x12, 0x2e, 0x0a, 0x13, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x79, 0x63, 0x6c,
	0x65, 0x5f, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x62,
	0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x43, 0x79, 0x63, 0x6c, 0x65, 0x4d, 0x6f, 0x6e, 0x74, 0x68,
	0x12, 0x37, 0x0a, 0x18, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67,
	0x5f, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x5f, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x15, 0x6e, 0x65, 0x78, 0x74, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x43,
	0x79, 0x63, 0x6c, 0x65, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6c, 0x61,
	0x6e, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6c, 0x61, 0x6e, 0x12, 0x1b, 0x0a,
	0x09, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x72,
	0x65, 0x64, 0x69, 0x74, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x63, 0x72, 0x65, 0x64,
	0x69, 0x74, 0x12, 0x23, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x2a, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4c, 0x69, 0x6d, 0x69, 0x74,
	0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6e, 0x64, 0x65, 0x64,
	0x18, 0x2d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x68, 0x75, 0x72, 0x6e, 0x65, 0x64, 0x18, 0x2f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x63, 0x68, 0x75, 0x72, 0x6e, 0x65, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x66, 0x70, 0x76, 0x5f, 0x63,
	0x72, 0x65, 0x64, 0x69, 0x74, 0x5f, 0x76, 0x6e, 0x64, 0x18, 0x30, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0c, 0x66, 0x70, 0x76, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x56, 0x6e, 0x64, 0x12, 0x39, 0x0a,
	0x19, 0x66, 0x70, 0x76, 0x5f, 0x75, 0x6e, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x67, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x31, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x16, 0x66, 0x70, 0x76, 0x55, 0x6e, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x64, 0x41, 0x67,
	0x65, 0x6e, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x42, 0x0a, 0x1e, 0x66, 0x70, 0x76, 0x5f,
	0x6e, 0x65, 0x78, 0x74, 0x5f, 0x75, 0x6e, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x67, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x35, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x1a, 0x66, 0x70, 0x76, 0x4e, 0x65, 0x78, 0x74, 0x55, 0x6e, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x65, 0x64, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x6e, 0x75, 0x6d, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x32, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x6e, 0x75, 0x6d, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x75,
	0x73, 0x65, 0x5f, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x33, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x75, 0x73, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65,
	0x78, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x34, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x4e, 0x75, 0x6d, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x73, 0x22, 0xf3, 0x05, 0x0a, 0x04, 0x42, 0x69, 0x6c, 0x6c, 0x12, 0x21, 0x0a, 0x03, 0x63,
	0x74, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x03, 0x63, 0x74, 0x78, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1f, 0x0a,
	0x0b, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x06, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x49, 0x64, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x79, 0x65, 0x61, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x79,
	0x65, 0x61, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74,
	0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x11,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x3d,
	0x0a, 0x1b, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x62, 0x61, 0x6e, 0x6b, 0x5f,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x5f, 0x6e, 0x6f, 0x74, 0x65, 0x18, 0x12, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x18, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x42, 0x61, 0x6e,
	0x6b, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x65, 0x12, 0x2c, 0x0a,
	0x12, 0x62, 0x61, 0x6e, 0x6b, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x5f, 0x6e,
	0x6f, 0x74, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x62, 0x61, 0x6e, 0x6b, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x66,
	0x70, 0x76, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x76, 0x6e, 0x64, 0x18, 0x14, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0c, 0x66, 0x70, 0x76, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x56, 0x6e,
	0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64,
	0x12, 0x26, 0x0a, 0x0f, 0x62, 0x61, 0x6e, 0x6b, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x62, 0x61, 0x6e, 0x6b, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0b, 0x62, 0x79, 0x5f, 0x61,
	0x67, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62,
	0x79, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x66, 0x70, 0x76, 0x5f,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x75, 0x73, 0x64, 0x18, 0x18, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0c, 0x66, 0x70, 0x76, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x73, 0x64, 0x12, 0x3d,
	0x0a, 0x1b, 0x66, 0x70, 0x76, 0x5f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65, 0x72, 0x5f, 0x63,
	0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x76, 0x6e, 0x64, 0x18, 0x24, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x18, 0x66, 0x70, 0x76, 0x52, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65, 0x72,
	0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x56, 0x6e, 0x64, 0x12, 0x2a, 0x0a,
	0x11, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65, 0x72, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x25, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72,
	0x65, 0x72, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x3d, 0x0a, 0x1b, 0x66, 0x70, 0x76,
	0x5f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x73, 0x64, 0x18, 0x26, 0x20, 0x01, 0x28, 0x03, 0x52, 0x18,
	0x66, 0x70, 0x76, 0x52, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x55, 0x73, 0x64, 0x22, 0x6e, 0x0a, 0x05, 0x42, 0x69, 0x6c, 0x6c,
	0x73, 0x12, 0x21, 0x0a, 0x03, 0x63, 0x74, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52,
	0x03, 0x63, 0x74, 0x78, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x05, 0x62, 0x69, 0x6c, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x42, 0x69, 0x6c,
	0x6c, 0x52, 0x05, 0x62, 0x69, 0x6c, 0x6c, 0x73, 0x22, 0x77, 0x0a, 0x04, 0x4e, 0x6f, 0x74, 0x65,
	0x12, 0x21, 0x0a, 0x03, 0x63, 0x74, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x03,
	0x63, 0x74, 0x78, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x22, 0x92, 0x01, 0x0a, 0x08, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x73, 0x12, 0x21,
	0x0a, 0x03, 0x63, 0x74, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x03, 0x63, 0x74,
	0x78, 0x12, 0x2c, 0x0a, 0x08, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x49, 0x6e,
	0x76, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x08, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x73, 0x12,
	0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x61, 0x6e, 0x63, 0x68, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x61, 0x6e, 0x63, 0x68, 0x6f, 0x72, 0x22, 0x8b, 0x01, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x49,
	0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a,
	0x03, 0x63, 0x74, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x03, 0x63, 0x74, 0x78,
	0x12, 0x16, 0x0a, 0x06, 0x61, 0x6e, 0x63, 0x68, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x61, 0x6e, 0x63, 0x68, 0x6f, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x64, 0x69,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x72, 0x65, 0x64,
	0x69, 0x74, 0x49, 0x64, 0x22, 0xc9, 0x0a, 0x0a, 0x07, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65,
	0x12, 0x21, 0x0a, 0x03, 0x63, 0x74, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x03,
	0x63, 0x74, 0x78, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x72, 0x6f, 0x6d,
	0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x37, 0x0a, 0x0c, 0x62,
	0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x42, 0x69, 0x6c, 0x6c,
	0x69, 0x6e, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x19, 0x0a, 0x08, 0x64, 0x75, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x64, 0x75, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12,
	0x2a, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65,
	0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x73,
	0x75, 0x62, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x73,
	0x75, 0x62, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x61, 0x78, 0x5f, 0x70,
	0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x74, 0x61,
	0x78, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x78, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x02, 0x52, 0x03, 0x74, 0x61, 0x78, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x18, 0x11, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x12, 0x18, 0x0a, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x12, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x79, 0x65,
	0x61, 0x72, 0x18, 0x13, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x79, 0x65, 0x61, 0x72, 0x12, 0x23,
	0x0a, 0x05, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x18, 0x16, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x4e, 0x6f, 0x74, 0x65, 0x52, 0x05, 0x6e, 0x6f,
	0x74, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x69, 0x6c, 0x6c, 0x73, 0x18, 0x17, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x05, 0x62, 0x69, 0x6c, 0x6c, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x61, 0x64, 0x65, 0x18, 0x18, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x0b, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x61, 0x64, 0x65, 0x12, 0x36, 0x0a, 0x0b,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x75, 0x62, 0x18, 0x19, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x53, 0x75, 0x62, 0x12, 0x30, 0x0a, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f,
	0x70, 0x6c, 0x61, 0x6e, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x0b, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x72, 0x65, 0x64, 0x69,
	0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18,
	0x1c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12,
	0x22, 0x0a, 0x0d, 0x66, 0x70, 0x76, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x76, 0x6e, 0x64,
	0x18, 0x1d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x66, 0x70, 0x76, 0x54, 0x6f, 0x74, 0x61, 0x6c,
	0x56, 0x6e, 0x64, 0x12, 0x2f, 0x0a, 0x14, 0x66, 0x70, 0x76, 0x5f, 0x70, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x5f, 0x6d, 0x61, 0x64, 0x65, 0x5f, 0x76, 0x6e, 0x64, 0x18, 0x1e, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x11, 0x66, 0x70, 0x76, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x61, 0x64,
	0x65, 0x56, 0x6e, 0x64, 0x12, 0x1a, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x67, 0x65, 0x6e, 0x5f, 0x71,
	0x72, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x47, 0x65, 0x6e, 0x51, 0x72,
	0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x20,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12,
	0x37, 0x0a, 0x18, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x64,
	0x65, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x66, 0x70, 0x76, 0x18, 0x21, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x15, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x46, 0x70, 0x76, 0x12, 0x28, 0x0a, 0x10, 0x66, 0x70, 0x76, 0x5f,
	0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x76, 0x6e, 0x64, 0x18, 0x22, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0e, 0x66, 0x70, 0x76, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x56,
	0x6e, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x66, 0x70, 0x76, 0x5f, 0x73, 0x75, 0x62, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x5f, 0x76, 0x6e, 0x64, 0x18, 0x23, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x66, 0x70,
	0x76, 0x53, 0x75, 0x62, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x56, 0x6e, 0x64, 0x12, 0x28, 0x0a, 0x10,
	0x66, 0x70, 0x76, 0x5f, 0x73, 0x75, 0x62, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x75, 0x73, 0x64,
	0x18, 0x26, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x66, 0x70, 0x76, 0x53, 0x75, 0x62, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x55, 0x73, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x66, 0x70, 0x76, 0x5f, 0x74, 0x61,
	0x78, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x18, 0x27, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0d, 0x66, 0x70, 0x76, 0x54, 0x61, 0x78, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x12, 0x1e,
	0x0a, 0x0b, 0x66, 0x70, 0x76, 0x5f, 0x74, 0x61, 0x78, 0x5f, 0x75, 0x73, 0x64, 0x18, 0x28, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x66, 0x70, 0x76, 0x54, 0x61, 0x78, 0x55, 0x73, 0x64, 0x12, 0x22,
	0x0a, 0x0d, 0x66, 0x70, 0x76, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x75, 0x73, 0x64, 0x18,
	0x29, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x66, 0x70, 0x76, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x55,
	0x73, 0x64, 0x12, 0x2f, 0x0a, 0x14, 0x66, 0x70, 0x76, 0x5f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x5f, 0x6d, 0x61, 0x64, 0x65, 0x5f, 0x75, 0x73, 0x64, 0x18, 0x2a, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x11, 0x66, 0x70, 0x76, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x61, 0x64, 0x65,
	0x55, 0x73, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x66, 0x70, 0x76, 0x5f, 0x64, 0x69, 0x73, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x5f, 0x75, 0x73, 0x64, 0x18, 0x2b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x66,
	0x70, 0x76, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x73, 0x64, 0x12, 0x1f, 0x0a,
	0x0b, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x2d, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x22, 0x30,
	0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x09, 0x0a, 0x05, 0x64, 0x72, 0x61, 0x66, 0x74,
	0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x6f, 0x70, 0x65, 0x6e, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04,
	0x70, 0x61, 0x69, 0x64, 0x10, 0x03, 0x12, 0x08, 0x0a, 0x04, 0x76, 0x6f, 0x69, 0x64, 0x10, 0x04,
	0x22, 0x92, 0x01, 0x0a, 0x10, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63,
	0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6c, 0x61, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6c, 0x61, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x64, 0x61, 0x79,
	0x5f, 0x6c, 0x65, 0x66, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x64, 0x61, 0x79,
	0x4c, 0x65, 0x66, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x67, 0x65, 0x6e, 0x74,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x65, 0x6e, 0x64, 0x65, 0x64, 0x22, 0xc4, 0x01, 0x0a, 0x10, 0x52, 0x65, 0x6e, 0x65, 0x77, 0x49,
	0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6c,
	0x61, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6c, 0x61, 0x6e, 0x12, 0x2e,
	0x0a, 0x13, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x5f,
	0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x62, 0x69, 0x6c,
	0x6c, 0x69, 0x6e, 0x67, 0x43, 0x79, 0x63, 0x6c, 0x65, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x12, 0x1f,
	0x0a, 0x0b, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0a, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x1b, 0x0a, 0x09, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x66, 0x72, 0x6f, 0x6d, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x13,
	0x66, 0x70, 0x76, 0x5f, 0x73, 0x61, 0x76, 0x65, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74,
	0x61, 0x67, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x66, 0x70, 0x76, 0x53, 0x61,
	0x76, 0x65, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x22, 0xd1, 0x01, 0x0a,
	0x17, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x6e, 0x76,
	0x6f, 0x69, 0x63, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x6c, 0x64, 0x5f,
	0x70, 0x6c, 0x61, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x6c, 0x64, 0x50,
	0x6c, 0x61, 0x6e, 0x12, 0x26, 0x0a, 0x0f, 0x6f, 0x6c, 0x64, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x6f, 0x6c,
	0x64, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x35, 0x0a, 0x17, 0x6f,
	0x6c, 0x64, 0x5f, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x79, 0x63, 0x6c, 0x65,
	0x5f, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x14, 0x6f, 0x6c,
	0x64, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x43, 0x79, 0x63, 0x6c, 0x65, 0x4d, 0x6f, 0x6e,
	0x74, 0x68, 0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x6c, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65,
	0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6f, 0x6c, 0x64, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x65, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x6c, 0x64, 0x5f, 0x65, 0x6e, 0x64, 0x65, 0x64,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6f, 0x6c, 0x64, 0x45, 0x6e, 0x64, 0x65, 0x64,
	0x22, 0x92, 0x03, 0x0a, 0x0f, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65,
	0x49, 0x74, 0x65, 0x6d, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x61, 0x67, 0x65, 0x6e, 0x74,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2e, 0x0a, 0x13, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67,
	0x5f, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x5f, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x11, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x43, 0x79, 0x63, 0x6c, 0x65,
	0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x6c, 0x64, 0x5f, 0x70, 0x6c, 0x61,
	0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x6c, 0x64, 0x50, 0x6c, 0x61, 0x6e,
	0x12, 0x19, 0x0a, 0x08, 0x6e, 0x65, 0x77, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6e, 0x65, 0x77, 0x50, 0x6c, 0x61, 0x6e, 0x12, 0x27, 0x0a, 0x0f, 0x73,
	0x61, 0x76, 0x65, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x0e, 0x73, 0x61, 0x76, 0x65, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e,
	0x74, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x12, 0x19,
	0x0a, 0x08, 0x64, 0x61, 0x79, 0x5f, 0x6c, 0x65, 0x66, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x64, 0x61, 0x79, 0x4c, 0x65, 0x66, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x6f, 0x6c, 0x64,
	0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0d, 0x6f, 0x6c, 0x64, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x2c, 0x0a, 0x12, 0x69, 0x73, 0x5f, 0x75, 0x6e, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x69,
	0x73, 0x55, 0x6e, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x64, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x12,
	0x2e, 0x0a, 0x13, 0x66, 0x70, 0x76, 0x5f, 0x73, 0x61, 0x76, 0x65, 0x5f, 0x70, 0x65, 0x72, 0x63,
	0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x66, 0x70,
	0x76, 0x53, 0x61, 0x76, 0x65, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x65, 0x6e, 0x64, 0x65, 0x64, 0x22, 0x16, 0x0a, 0x14, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x69,
	0x6e, 0x67, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x22, 0x83, 0x06,
	0x0a, 0x0b, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x1a, 0x0a,
	0x08, 0x68, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x68, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x69,
	0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75,
	0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x71, 0x75,
	0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x2d, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x49, 0x74, 0x65, 0x6d,
	0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1f, 0x0a, 0x0b, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x22, 0x0a, 0x0d,
	0x66, 0x70, 0x76, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x76, 0x6e, 0x64, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0b, 0x66, 0x70, 0x76, 0x50, 0x72, 0x69, 0x63, 0x65, 0x56, 0x6e, 0x64,
	0x12, 0x2d, 0x0a, 0x13, 0x66, 0x70, 0x76, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x5f, 0x76, 0x6e, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x66,
	0x70, 0x76, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x56, 0x6e, 0x64, 0x12,
	0x28, 0x0a, 0x10, 0x66, 0x70, 0x76, 0x5f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f,
	0x76, 0x6e, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x66, 0x70, 0x76, 0x44, 0x69,
	0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x56, 0x6e, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x66, 0x70, 0x76,
	0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x75, 0x73, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0b, 0x66, 0x70, 0x76, 0x50, 0x72, 0x69, 0x63, 0x65, 0x55, 0x73, 0x64, 0x12, 0x2d, 0x0a,
	0x13, 0x66, 0x70, 0x76, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x5f, 0x75, 0x73, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x66, 0x70, 0x76, 0x54,
	0x6f, 0x74, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x55, 0x73, 0x64, 0x12, 0x28, 0x0a, 0x10,
	0x66, 0x70, 0x76, 0x5f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x75, 0x73, 0x64,
	0x18, 0x11, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x66, 0x70, 0x76, 0x44, 0x69, 0x73, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x55, 0x73, 0x64, 0x1a, 0x9a, 0x02, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x2f, 0x0a, 0x05, 0x72, 0x65, 0x6e, 0x65, 0x77, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x6e, 0x65, 0x77, 0x49, 0x6e,
	0x76, 0x6f, 0x69, 0x63, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x72, 0x65, 0x6e, 0x65, 0x77,
	0x12, 0x2f, 0x0a, 0x05, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x49,
	0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x61, 0x67, 0x65, 0x6e,
	0x74, 0x12, 0x2c, 0x0a, 0x04, 0x70, 0x6c, 0x61, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x6e,
	0x76, 0x6f, 0x69, 0x63, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x70, 0x6c, 0x61, 0x6e, 0x12,
	0x3b, 0x0a, 0x09, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x4d, 0x61, 0x72,
	0x6b, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x09, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x45, 0x0a, 0x0d,
	0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x65,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63,
	0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x50,
	0x6c, 0x61, 0x6e, 0x22, 0xa0, 0x01, 0x0a, 0x0b, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x10, 0x0a, 0x03, 0x76, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x76, 0x61, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x72, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72,
	0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x22, 0x4b, 0x0a, 0x04, 0x4c, 0x6f, 0x67, 0x73, 0x12, 0x21,
	0x0a, 0x03, 0x63, 0x74, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x03, 0x63, 0x74,
	0x78, 0x12, 0x20, 0x0a, 0x04, 0x6c, 0x6f, 0x67, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0c, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x6f, 0x67, 0x52, 0x04, 0x6c,
	0x6f, 0x67, 0x73, 0x22, 0xf9, 0x04, 0x0a, 0x03, 0x4c, 0x6f, 0x67, 0x12, 0x21, 0x0a, 0x03, 0x63,
	0x74, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x03, 0x63, 0x74, 0x78, 0x12, 0x12,
	0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x73,
	0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x22, 0xa1, 0x03, 0x0a, 0x06,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x0e, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x5f, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x10, 0x00, 0x12, 0x19, 0x0a, 0x15, 0x63, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x5f, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f,
	0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f, 0x64, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x5f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x10, 0x03, 0x12,
	0x13, 0x0a, 0x0f, 0x72, 0x65, 0x64, 0x65, 0x65, 0x6d, 0x5f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x10, 0x04, 0x12, 0x0e, 0x0a, 0x0a, 0x61, 0x64, 0x64, 0x5f, 0x63, 0x72, 0x65, 0x64,
	0x69, 0x74, 0x10, 0x05, 0x12, 0x11, 0x0a, 0x0d, 0x72, 0x65, 0x64, 0x65, 0x65, 0x6d, 0x5f, 0x63,
	0x72, 0x65, 0x64, 0x69, 0x74, 0x10, 0x06, 0x12, 0x12, 0x0a, 0x0e, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x10, 0x07, 0x12, 0x0f, 0x0a, 0x0b, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x10, 0x08, 0x12, 0x16, 0x0a, 0x12,
	0x72, 0x65, 0x6e, 0x65, 0x77, 0x5f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x10, 0x0a, 0x12, 0x1a, 0x0a, 0x16, 0x63, 0x6c, 0x69, 0x63, 0x6b, 0x5f, 0x73, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x5f, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x10, 0x0b,
	0x12, 0x14, 0x0a, 0x10, 0x70, 0x61, 0x79, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x72, 0x65, 0x66, 0x65,
	0x72, 0x72, 0x65, 0x72, 0x10, 0x0c, 0x12, 0x1a, 0x0a, 0x16, 0x61, 0x64, 0x64, 0x5f, 0x6d, 0x6f,
	0x6e, 0x65, 0x79, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65, 0x72,
	0x10, 0x0d, 0x12, 0x0f, 0x0a, 0x0b, 0x70, 0x61, 0x79, 0x5f, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63,
	0x65, 0x10, 0x0e, 0x12, 0x11, 0x0a, 0x0d, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x5f, 0x73, 0x74,
	0x72, 0x69, 0x70, 0x65, 0x10, 0x0f, 0x12, 0x0f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x5f, 0x62, 0x69, 0x6c, 0x6c, 0x10, 0x10, 0x12, 0x0e, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x5f, 0x63,
	0x72, 0x65, 0x64, 0x69, 0x74, 0x10, 0x11, 0x12, 0x15, 0x0a, 0x11, 0x65, 0x64, 0x69, 0x74, 0x5f,
	0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x10, 0x12, 0x12, 0x10,
	0x0a, 0x0c, 0x65, 0x64, 0x69, 0x74, 0x5f, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x10, 0x13,
	0x12, 0x0d, 0x0a, 0x09, 0x64, 0x6f, 0x77, 0x6e, 0x67, 0x72, 0x61, 0x64, 0x65, 0x10, 0x14, 0x22,
	0x3d, 0x0a, 0x06, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x21, 0x0a, 0x03, 0x63, 0x74, 0x78,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x03, 0x63, 0x74, 0x78, 0x12, 0x10, 0x0a, 0x03,
	0x73, 0x74, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x74, 0x72, 0x22, 0xc1,
	0x03, 0x0a, 0x0a, 0x50, 0x61, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a,
	0x03, 0x63, 0x74, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x03, 0x63, 0x74, 0x78,
	0x12, 0x1b, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b,
	0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0a, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x49, 0x64, 0x73, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x70, 0x76, 0x5f, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x66, 0x70, 0x76,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x26, 0x0a, 0x0f, 0x62,
	0x61, 0x6e, 0x6b, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x62, 0x61, 0x6e, 0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0b, 0x62, 0x79, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x79, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x11, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x70,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x12, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68,
	0x6f, 0x64, 0x22, 0xd2, 0x01, 0x0a, 0x0e, 0x41, 0x75, 0x74, 0x6f, 0x50, 0x61, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x03, 0x63, 0x74, 0x78, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x78, 0x74, 0x52, 0x03, 0x63, 0x74, 0x78, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x0f, 0x62, 0x61,
	0x6e, 0x6b, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x62, 0x61, 0x6e, 0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x1d, 0x0a, 0x0a,
	0x66, 0x70, 0x76, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x66, 0x70, 0x76, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x22, 0xdc, 0x01, 0x0a, 0x13, 0x49, 0x6e, 0x76, 0x6f,
	0x69, 0x63, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12,
	0x21, 0x0a, 0x03, 0x63, 0x74, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x03, 0x63,
	0x74, 0x78, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x49, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x69, 0x6e,
	0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x6c,
	0x69, 0x6e, 0x6b, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x69, 0x6e, 0x76, 0x6f, 0x69,
	0x63, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x22, 0x84, 0x01, 0x0a, 0x10, 0x54, 0x72, 0x69, 0x61, 0x6c,
	0x45, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x21, 0x0a, 0x03, 0x63,
	0x74, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x03, 0x63, 0x74, 0x78, 0x12, 0x1d,
	0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x65, 0x6e,
	0x64, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x22, 0xa3, 0x01,
	0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x45, 0x6d, 0x61, 0x69,
	0x6c, 0x12, 0x21, 0x0a, 0x03, 0x63, 0x74, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52,
	0x03, 0x63, 0x74, 0x78, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x6c, 0x64, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x6c, 0x64, 0x50, 0x6c, 0x61, 0x6e, 0x12, 0x19,
	0x0a, 0x08, 0x6e, 0x65, 0x77, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6e, 0x65, 0x77, 0x50, 0x6c, 0x61, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x22, 0xd9, 0x01, 0x0a, 0x10, 0x50, 0x61, 0x69, 0x64, 0x49, 0x6e, 0x76, 0x6f,
	0x69, 0x63, 0x65, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x21, 0x0a, 0x03, 0x63, 0x74, 0x78, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x03, 0x63, 0x74, 0x78, 0x12, 0x1d, 0x0a, 0x0a, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x6e,
	0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x69, 0x6e,
	0x76, 0x6f, 0x69, 0x63, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x21, 0x0a, 0x0c,
	0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x22,
	0xde, 0x02, 0x0a, 0x0e, 0x46, 0x72, 0x65, 0x65, 0x54, 0x69, 0x65, 0x72, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x12, 0x21, 0x0a, 0x03, 0x63, 0x74, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74,
	0x52, 0x03, 0x63, 0x74, 0x78, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x72,
	0x6f, 0x6d, 0x5f, 0x68, 0x6f, 0x75, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x66,
	0x72, 0x6f, 0x6d, 0x48, 0x6f, 0x75, 0x72, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x6f, 0x5f, 0x68, 0x6f,
	0x75, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x74, 0x6f, 0x48, 0x6f, 0x75, 0x72,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x62, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x42, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x2a, 0x0a,
	0x11, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x68, 0x6f,
	0x75, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69,
	0x74, 0x79, 0x50, 0x65, 0x72, 0x48, 0x6f, 0x75, 0x72, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x5f, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79,
	0x42, 0x21, 0x5a, 0x1f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73,
	0x75, 0x62, 0x69, 0x7a, 0x2f, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x2f, 0x70, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74,
}

var (
	file_payment_proto_rawDescOnce sync.Once
	file_payment_proto_rawDescData = file_payment_proto_rawDesc
)

func file_payment_proto_rawDescGZIP() []byte {
	file_payment_proto_rawDescOnce.Do(func() {
		file_payment_proto_rawDescData = protoimpl.X.CompressGZIP(file_payment_proto_rawDescData)
	})
	return file_payment_proto_rawDescData
}

var file_payment_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_payment_proto_msgTypes = make([]protoimpl.MessageInfo, 31)
var file_payment_proto_goTypes = []interface{}{
	(Plan_Type)(0),                  // 0: payment.Plan.Type
	(Invoice_State)(0),              // 1: payment.Invoice.State
	(Log_Action)(0),                 // 2: payment.Log.Action
	(*Comments)(nil),                // 3: payment.Comments
	(*Comment)(nil),                 // 4: payment.Comment
	(*Plans)(nil),                   // 5: payment.Plans
	(*DiffSubRequest)(nil),          // 6: payment.DiffSubRequest
	(*Plan)(nil),                    // 7: payment.Plan
	(*PurchaseRequest)(nil),         // 8: payment.PurchaseRequest
	(*Subscription)(nil),            // 9: payment.Subscription
	(*Bill)(nil),                    // 10: payment.Bill
	(*Bills)(nil),                   // 11: payment.Bills
	(*Note)(nil),                    // 12: payment.Note
	(*Invoices)(nil),                // 13: payment.Invoices
	(*ListInvoiceRequest)(nil),      // 14: payment.ListInvoiceRequest
	(*Invoice)(nil),                 // 15: payment.Invoice
	(*AgentInvoiceItem)(nil),        // 16: payment.AgentInvoiceItem
	(*RenewInvoiceItem)(nil),        // 17: payment.RenewInvoiceItem
	(*ReservedPlanInvoiceItem)(nil), // 18: payment.ReservedPlanInvoiceItem
	(*PlanInvoiceItem)(nil),         // 19: payment.PlanInvoiceItem
	(*MarketingInvoiceItem)(nil),    // 20: payment.MarketingInvoiceItem
	(*InvoiceItem)(nil),             // 21: payment.InvoiceItem
	(*BillingInfo)(nil),             // 22: payment.BillingInfo
	(*Logs)(nil),                    // 23: payment.Logs
	(*Log)(nil),                     // 24: payment.Log
	(*String)(nil),                  // 25: payment.String
	(*PayRequest)(nil),              // 26: payment.PayRequest
	(*AutoPayRequest)(nil),          // 27: payment.AutoPayRequest
	(*InvoiceCreatedEmail)(nil),     // 28: payment.InvoiceCreatedEmail
	(*TrialEndingEmail)(nil),        // 29: payment.TrialEndingEmail
	(*UpdatePlanEmail)(nil),         // 30: payment.UpdatePlanEmail
	(*PaidInvoiceEmail)(nil),        // 31: payment.PaidInvoiceEmail
	(*FreeTierPolicy)(nil),          // 32: payment.FreeTierPolicy
	(*InvoiceItem_Data)(nil),        // 33: payment.InvoiceItem.Data
	(*common.Context)(nil),          // 34: common.Context
	(*common.Limit)(nil),            // 35: common.Limit
}
var file_payment_proto_depIdxs = []int32{
	34, // 0: payment.Comments.ctx:type_name -> common.Context
	4,  // 1: payment.Comments.comments:type_name -> payment.Comment
	34, // 2: payment.Comment.ctx:type_name -> common.Context
	7,  // 3: payment.Plans.plans:type_name -> payment.Plan
	9,  // 4: payment.DiffSubRequest.old_subscription:type_name -> payment.Subscription
	9,  // 5: payment.DiffSubRequest.new_subscription:type_name -> payment.Subscription
	35, // 6: payment.Plan.limit:type_name -> common.Limit
	34, // 7: payment.PurchaseRequest.ctx:type_name -> common.Context
	35, // 8: payment.PurchaseRequest.limit:type_name -> common.Limit
	34, // 9: payment.Subscription.ctx:type_name -> common.Context
	35, // 10: payment.Subscription.limit:type_name -> common.Limit
	34, // 11: payment.Bill.ctx:type_name -> common.Context
	34, // 12: payment.Bills.ctx:type_name -> common.Context
	10, // 13: payment.Bills.bills:type_name -> payment.Bill
	34, // 14: payment.Note.ctx:type_name -> common.Context
	34, // 15: payment.Invoices.ctx:type_name -> common.Context
	15, // 16: payment.Invoices.invoices:type_name -> payment.Invoice
	34, // 17: payment.ListInvoiceRequest.ctx:type_name -> common.Context
	34, // 18: payment.Invoice.ctx:type_name -> common.Context
	22, // 19: payment.Invoice.billing_info:type_name -> payment.BillingInfo
	21, // 20: payment.Invoice.items:type_name -> payment.InvoiceItem
	12, // 21: payment.Invoice.notes:type_name -> payment.Note
	9,  // 22: payment.Invoice.current_sub:type_name -> payment.Subscription
	7,  // 23: payment.Invoice.current_plan:type_name -> payment.Plan
	33, // 24: payment.InvoiceItem.data:type_name -> payment.InvoiceItem.Data
	34, // 25: payment.Logs.ctx:type_name -> common.Context
	24, // 26: payment.Logs.logs:type_name -> payment.Log
	34, // 27: payment.Log.ctx:type_name -> common.Context
	34, // 28: payment.String.ctx:type_name -> common.Context
	34, // 29: payment.PayRequest.ctx:type_name -> common.Context
	34, // 30: payment.AutoPayRequest.ctx:type_name -> common.Context
	34, // 31: payment.InvoiceCreatedEmail.ctx:type_name -> common.Context
	34, // 32: payment.TrialEndingEmail.ctx:type_name -> common.Context
	34, // 33: payment.UpdatePlanEmail.ctx:type_name -> common.Context
	34, // 34: payment.PaidInvoiceEmail.ctx:type_name -> common.Context
	34, // 35: payment.FreeTierPolicy.ctx:type_name -> common.Context
	17, // 36: payment.InvoiceItem.Data.renew:type_name -> payment.RenewInvoiceItem
	16, // 37: payment.InvoiceItem.Data.agent:type_name -> payment.AgentInvoiceItem
	19, // 38: payment.InvoiceItem.Data.plan:type_name -> payment.PlanInvoiceItem
	20, // 39: payment.InvoiceItem.Data.marketing:type_name -> payment.MarketingInvoiceItem
	18, // 40: payment.InvoiceItem.Data.reserved_plan:type_name -> payment.ReservedPlanInvoiceItem
	41, // [41:41] is the sub-list for method output_type
	41, // [41:41] is the sub-list for method input_type
	41, // [41:41] is the sub-list for extension type_name
	41, // [41:41] is the sub-list for extension extendee
	0,  // [0:41] is the sub-list for field type_name
}

func init() { file_payment_proto_init() }
func file_payment_proto_init() {
	if File_payment_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_payment_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Comments); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Comment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Plans); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DiffSubRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Plan); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PurchaseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Subscription); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Bill); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Bills); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Note); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Invoices); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListInvoiceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Invoice); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentInvoiceItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RenewInvoiceItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReservedPlanInvoiceItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlanInvoiceItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MarketingInvoiceItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvoiceItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BillingInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Logs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Log); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*String); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AutoPayRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvoiceCreatedEmail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrialEndingEmail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePlanEmail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaidInvoiceEmail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FreeTierPolicy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvoiceItem_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_payment_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   31,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_payment_proto_goTypes,
		DependencyIndexes: file_payment_proto_depIdxs,
		EnumInfos:         file_payment_proto_enumTypes,
		MessageInfos:      file_payment_proto_msgTypes,
	}.Build()
	File_payment_proto = out.File
	file_payment_proto_rawDesc = nil
	file_payment_proto_goTypes = nil
	file_payment_proto_depIdxs = nil
}
