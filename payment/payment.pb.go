// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.21.3
// source: payment.proto

package payment

import (
	common "github.com/subiz/header/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Currency int32

const (
	Currency_usd Currency = 0
	Currency_vnd Currency = 1
	Currency_brl Currency = 2
)

// Enum value maps for Currency.
var (
	Currency_name = map[int32]string{
		0: "usd",
		1: "vnd",
		2: "brl",
	}
	Currency_value = map[string]int32{
		"usd": 0,
		"vnd": 1,
		"brl": 2,
	}
)

func (x Currency) Enum() *Currency {
	p := new(Currency)
	*p = x
	return p
}

func (x Currency) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Currency) Descriptor() protoreflect.EnumDescriptor {
	return file_payment_proto_enumTypes[0].Descriptor()
}

func (Currency) Type() protoreflect.EnumType {
	return &file_payment_proto_enumTypes[0]
}

func (x Currency) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *Currency) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = Currency(num)
	return nil
}

// Deprecated: Use Currency.Descriptor instead.
func (Currency) EnumDescriptor() ([]byte, []int) {
	return file_payment_proto_rawDescGZIP(), []int{0}
}

type PaymentMethod_Type int32

const (
	PaymentMethod_bank_transfer PaymentMethod_Type = 0
	PaymentMethod_credit_card   PaymentMethod_Type = 1
)

// Enum value maps for PaymentMethod_Type.
var (
	PaymentMethod_Type_name = map[int32]string{
		0: "bank_transfer",
		1: "credit_card",
	}
	PaymentMethod_Type_value = map[string]int32{
		"bank_transfer": 0,
		"credit_card":   1,
	}
)

func (x PaymentMethod_Type) Enum() *PaymentMethod_Type {
	p := new(PaymentMethod_Type)
	*p = x
	return p
}

func (x PaymentMethod_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PaymentMethod_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_payment_proto_enumTypes[1].Descriptor()
}

func (PaymentMethod_Type) Type() protoreflect.EnumType {
	return &file_payment_proto_enumTypes[1]
}

func (x PaymentMethod_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *PaymentMethod_Type) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = PaymentMethod_Type(num)
	return nil
}

// Deprecated: Use PaymentMethod_Type.Descriptor instead.
func (PaymentMethod_Type) EnumDescriptor() ([]byte, []int) {
	return file_payment_proto_rawDescGZIP(), []int{5, 0}
}

type PaymentMethod_State int32

const (
	PaymentMethod_active PaymentMethod_State = 0
	PaymentMethod_failed PaymentMethod_State = 1
)

// Enum value maps for PaymentMethod_State.
var (
	PaymentMethod_State_name = map[int32]string{
		0: "active",
		1: "failed",
	}
	PaymentMethod_State_value = map[string]int32{
		"active": 0,
		"failed": 1,
	}
)

func (x PaymentMethod_State) Enum() *PaymentMethod_State {
	p := new(PaymentMethod_State)
	*p = x
	return p
}

func (x PaymentMethod_State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PaymentMethod_State) Descriptor() protoreflect.EnumDescriptor {
	return file_payment_proto_enumTypes[2].Descriptor()
}

func (PaymentMethod_State) Type() protoreflect.EnumType {
	return &file_payment_proto_enumTypes[2]
}

func (x PaymentMethod_State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *PaymentMethod_State) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = PaymentMethod_State(num)
	return nil
}

// Deprecated: Use PaymentMethod_State.Descriptor instead.
func (PaymentMethod_State) EnumDescriptor() ([]byte, []int) {
	return file_payment_proto_rawDescGZIP(), []int{5, 1}
}

type Plan_Type int32

const (
	Plan_trial    Plan_Type = 0
	Plan_free     Plan_Type = 1
	Plan_standard Plan_Type = 2
	Plan_advanced Plan_Type = 3
)

// Enum value maps for Plan_Type.
var (
	Plan_Type_name = map[int32]string{
		0: "trial",
		1: "free",
		2: "standard",
		3: "advanced",
	}
	Plan_Type_value = map[string]int32{
		"trial":    0,
		"free":     1,
		"standard": 2,
		"advanced": 3,
	}
)

func (x Plan_Type) Enum() *Plan_Type {
	p := new(Plan_Type)
	*p = x
	return p
}

func (x Plan_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Plan_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_payment_proto_enumTypes[3].Descriptor()
}

func (Plan_Type) Type() protoreflect.EnumType {
	return &file_payment_proto_enumTypes[3]
}

func (x Plan_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *Plan_Type) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = Plan_Type(num)
	return nil
}

// Deprecated: Use Plan_Type.Descriptor instead.
func (Plan_Type) EnumDescriptor() ([]byte, []int) {
	return file_payment_proto_rawDescGZIP(), []int{8, 0}
}

type Invoice_State int32

const (
	Invoice_draft    Invoice_State = 0
	Invoice_open     Invoice_State = 1
	Invoice_overdue  Invoice_State = 2
	Invoice_paid     Invoice_State = 3
	Invoice_void     Invoice_State = 4
	Invoice_queueing Invoice_State = 5
)

// Enum value maps for Invoice_State.
var (
	Invoice_State_name = map[int32]string{
		0: "draft",
		1: "open",
		2: "overdue",
		3: "paid",
		4: "void",
		5: "queueing",
	}
	Invoice_State_value = map[string]int32{
		"draft":    0,
		"open":     1,
		"overdue":  2,
		"paid":     3,
		"void":     4,
		"queueing": 5,
	}
)

func (x Invoice_State) Enum() *Invoice_State {
	p := new(Invoice_State)
	*p = x
	return p
}

func (x Invoice_State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Invoice_State) Descriptor() protoreflect.EnumDescriptor {
	return file_payment_proto_enumTypes[4].Descriptor()
}

func (Invoice_State) Type() protoreflect.EnumType {
	return &file_payment_proto_enumTypes[4]
}

func (x Invoice_State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *Invoice_State) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = Invoice_State(num)
	return nil
}

// Deprecated: Use Invoice_State.Descriptor instead.
func (Invoice_State) EnumDescriptor() ([]byte, []int) {
	return file_payment_proto_rawDescGZIP(), []int{14, 0}
}

type Contact_Title int32

const (
	Contact_mr  Contact_Title = 0
	Contact_ms  Contact_Title = 1
	Contact_mrs Contact_Title = 2
	Contact_dr  Contact_Title = 3
)

// Enum value maps for Contact_Title.
var (
	Contact_Title_name = map[int32]string{
		0: "mr",
		1: "ms",
		2: "mrs",
		3: "dr",
	}
	Contact_Title_value = map[string]int32{
		"mr":  0,
		"ms":  1,
		"mrs": 2,
		"dr":  3,
	}
)

func (x Contact_Title) Enum() *Contact_Title {
	p := new(Contact_Title)
	*p = x
	return p
}

func (x Contact_Title) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Contact_Title) Descriptor() protoreflect.EnumDescriptor {
	return file_payment_proto_enumTypes[5].Descriptor()
}

func (Contact_Title) Type() protoreflect.EnumType {
	return &file_payment_proto_enumTypes[5]
}

func (x Contact_Title) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *Contact_Title) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = Contact_Title(num)
	return nil
}

// Deprecated: Use Contact_Title.Descriptor instead.
func (Contact_Title) EnumDescriptor() ([]byte, []int) {
	return file_payment_proto_rawDescGZIP(), []int{20, 0}
}

type PromotionCode_Type int32

const (
	PromotionCode_fixed_amount_promotion_code PromotionCode_Type = 0 // TODO : Delete
	PromotionCode_percent_promotion_code      PromotionCode_Type = 1
	PromotionCode_credit_code                 PromotionCode_Type = 2
	PromotionCode_referral_credit_code        PromotionCode_Type = 3
)

// Enum value maps for PromotionCode_Type.
var (
	PromotionCode_Type_name = map[int32]string{
		0: "fixed_amount_promotion_code",
		1: "percent_promotion_code",
		2: "credit_code",
		3: "referral_credit_code",
	}
	PromotionCode_Type_value = map[string]int32{
		"fixed_amount_promotion_code": 0,
		"percent_promotion_code":      1,
		"credit_code":                 2,
		"referral_credit_code":        3,
	}
)

func (x PromotionCode_Type) Enum() *PromotionCode_Type {
	p := new(PromotionCode_Type)
	*p = x
	return p
}

func (x PromotionCode_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PromotionCode_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_payment_proto_enumTypes[6].Descriptor()
}

func (PromotionCode_Type) Type() protoreflect.EnumType {
	return &file_payment_proto_enumTypes[6]
}

func (x PromotionCode_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *PromotionCode_Type) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = PromotionCode_Type(num)
	return nil
}

// Deprecated: Use PromotionCode_Type.Descriptor instead.
func (PromotionCode_Type) EnumDescriptor() ([]byte, []int) {
	return file_payment_proto_rawDescGZIP(), []int{26, 0}
}

type Referral_Status int32

const (
	Referral_active   Referral_Status = 0 // duoc phep refer nguoi khac
	Referral_inactive Referral_Status = 1
)

// Enum value maps for Referral_Status.
var (
	Referral_Status_name = map[int32]string{
		0: "active",
		1: "inactive",
	}
	Referral_Status_value = map[string]int32{
		"active":   0,
		"inactive": 1,
	}
)

func (x Referral_Status) Enum() *Referral_Status {
	p := new(Referral_Status)
	*p = x
	return p
}

func (x Referral_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Referral_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_payment_proto_enumTypes[7].Descriptor()
}

func (Referral_Status) Type() protoreflect.EnumType {
	return &file_payment_proto_enumTypes[7]
}

func (x Referral_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *Referral_Status) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = Referral_Status(num)
	return nil
}

// Deprecated: Use Referral_Status.Descriptor instead.
func (Referral_Status) EnumDescriptor() ([]byte, []int) {
	return file_payment_proto_rawDescGZIP(), []int{29, 0}
}

type Log_Action int32

const (
	Log_create_invoice         Log_Action = 0
	Log_change_invoice_status  Log_Action = 1
	Log_create_discount        Log_Action = 2
	Log_delete_discount        Log_Action = 3
	Log_redeem_discount        Log_Action = 4
	Log_add_credit             Log_Action = 5
	Log_redeem_credit          Log_Action = 6
	Log_delete_account         Log_Action = 7
	Log_change_plan            Log_Action = 8
	Log_renew_subscription     Log_Action = 10
	Log_click_subscribe_button Log_Action = 11
	Log_pay_for_referrer       Log_Action = 12
	Log_add_money_for_referrer Log_Action = 13
	Log_pay_invoice            Log_Action = 14
	Log_charge_stripe          Log_Action = 15
	Log_create_bill            Log_Action = 16
	Log_use_credit             Log_Action = 17
	Log_edit_subscription      Log_Action = 18
	Log_edit_invoice           Log_Action = 19
	Log_downgrade              Log_Action = 20
)

// Enum value maps for Log_Action.
var (
	Log_Action_name = map[int32]string{
		0:  "create_invoice",
		1:  "change_invoice_status",
		2:  "create_discount",
		3:  "delete_discount",
		4:  "redeem_discount",
		5:  "add_credit",
		6:  "redeem_credit",
		7:  "delete_account",
		8:  "change_plan",
		10: "renew_subscription",
		11: "click_subscribe_button",
		12: "pay_for_referrer",
		13: "add_money_for_referrer",
		14: "pay_invoice",
		15: "charge_stripe",
		16: "create_bill",
		17: "use_credit",
		18: "edit_subscription",
		19: "edit_invoice",
		20: "downgrade",
	}
	Log_Action_value = map[string]int32{
		"create_invoice":         0,
		"change_invoice_status":  1,
		"create_discount":        2,
		"delete_discount":        3,
		"redeem_discount":        4,
		"add_credit":             5,
		"redeem_credit":          6,
		"delete_account":         7,
		"change_plan":            8,
		"renew_subscription":     10,
		"click_subscribe_button": 11,
		"pay_for_referrer":       12,
		"add_money_for_referrer": 13,
		"pay_invoice":            14,
		"charge_stripe":          15,
		"create_bill":            16,
		"use_credit":             17,
		"edit_subscription":      18,
		"edit_invoice":           19,
		"downgrade":              20,
	}
)

func (x Log_Action) Enum() *Log_Action {
	p := new(Log_Action)
	*p = x
	return p
}

func (x Log_Action) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Log_Action) Descriptor() protoreflect.EnumDescriptor {
	return file_payment_proto_enumTypes[8].Descriptor()
}

func (Log_Action) Type() protoreflect.EnumType {
	return &file_payment_proto_enumTypes[8]
}

func (x Log_Action) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *Log_Action) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = Log_Action(num)
	return nil
}

// Deprecated: Use Log_Action.Descriptor instead.
func (Log_Action) EnumDescriptor() ([]byte, []int) {
	return file_payment_proto_rawDescGZIP(), []int{39, 0}
}

type ListCommentsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ctx       *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	AccountId *string         `protobuf:"bytes,2,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	TopicId   *string         `protobuf:"bytes,3,opt,name=topic_id,json=topicId" json:"topic_id,omitempty"`
}

func (x *ListCommentsRequest) Reset() {
	*x = ListCommentsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCommentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCommentsRequest) ProtoMessage() {}

func (x *ListCommentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_payment_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCommentsRequest.ProtoReflect.Descriptor instead.
func (*ListCommentsRequest) Descriptor() ([]byte, []int) {
	return file_payment_proto_rawDescGZIP(), []int{0}
}

func (x *ListCommentsRequest) GetCtx() *common.Context {
	if x != nil {
		return x.Ctx
	}
	return nil
}

func (x *ListCommentsRequest) GetAccountId() string {
	if x != nil && x.AccountId != nil {
		return *x.AccountId
	}
	return ""
}

func (x *ListCommentsRequest) GetTopicId() string {
	if x != nil && x.TopicId != nil {
		return *x.TopicId
	}
	return ""
}

type Comments struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ctx       *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	AccountId *string         `protobuf:"bytes,2,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	Comments  []*Comment      `protobuf:"bytes,3,rep,name=comments" json:"comments,omitempty"`
}

func (x *Comments) Reset() {
	*x = Comments{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Comments) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Comments) ProtoMessage() {}

func (x *Comments) ProtoReflect() protoreflect.Message {
	mi := &file_payment_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Comments.ProtoReflect.Descriptor instead.
func (*Comments) Descriptor() ([]byte, []int) {
	return file_payment_proto_rawDescGZIP(), []int{1}
}

func (x *Comments) GetCtx() *common.Context {
	if x != nil {
		return x.Ctx
	}
	return nil
}

func (x *Comments) GetAccountId() string {
	if x != nil && x.AccountId != nil {
		return *x.AccountId
	}
	return ""
}

func (x *Comments) GetComments() []*Comment {
	if x != nil {
		return x.Comments
	}
	return nil
}

type Comment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ctx             *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	AccountId       *string         `protobuf:"bytes,2,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	Id              *string         `protobuf:"bytes,3,opt,name=id" json:"id,omitempty"`
	TopicId         *string         `protobuf:"bytes,4,opt,name=topic_id,json=topicId" json:"topic_id,omitempty"`
	TopicType       *string         `protobuf:"bytes,5,opt,name=topic_type,json=topicType" json:"topic_type,omitempty"`
	AuthorAccountId *string         `protobuf:"bytes,8,opt,name=author_account_id,json=authorAccountId" json:"author_account_id,omitempty"`
	AuthorId        *string         `protobuf:"bytes,9,opt,name=author_id,json=authorId" json:"author_id,omitempty"`
	AuthorEmail     *string         `protobuf:"bytes,10,opt,name=author_email,json=authorEmail" json:"author_email,omitempty"`
	Content         *string         `protobuf:"bytes,11,opt,name=content" json:"content,omitempty"`
	Created         *int64          `protobuf:"varint,12,opt,name=created" json:"created,omitempty"`
}

func (x *Comment) Reset() {
	*x = Comment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Comment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Comment) ProtoMessage() {}

func (x *Comment) ProtoReflect() protoreflect.Message {
	mi := &file_payment_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Comment.ProtoReflect.Descriptor instead.
func (*Comment) Descriptor() ([]byte, []int) {
	return file_payment_proto_rawDescGZIP(), []int{2}
}

func (x *Comment) GetCtx() *common.Context {
	if x != nil {
		return x.Ctx
	}
	return nil
}

func (x *Comment) GetAccountId() string {
	if x != nil && x.AccountId != nil {
		return *x.AccountId
	}
	return ""
}

func (x *Comment) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *Comment) GetTopicId() string {
	if x != nil && x.TopicId != nil {
		return *x.TopicId
	}
	return ""
}

func (x *Comment) GetTopicType() string {
	if x != nil && x.TopicType != nil {
		return *x.TopicType
	}
	return ""
}

func (x *Comment) GetAuthorAccountId() string {
	if x != nil && x.AuthorAccountId != nil {
		return *x.AuthorAccountId
	}
	return ""
}

func (x *Comment) GetAuthorId() string {
	if x != nil && x.AuthorId != nil {
		return *x.AuthorId
	}
	return ""
}

func (x *Comment) GetAuthorEmail() string {
	if x != nil && x.AuthorEmail != nil {
		return *x.AuthorEmail
	}
	return ""
}

func (x *Comment) GetContent() string {
	if x != nil && x.Content != nil {
		return *x.Content
	}
	return ""
}

func (x *Comment) GetCreated() int64 {
	if x != nil && x.Created != nil {
		return *x.Created
	}
	return 0
}

type Stripe struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CardLast4  *string `protobuf:"bytes,2,opt,name=card_last4,json=cardLast4" json:"card_last4,omitempty"`
	CustomerId *string `protobuf:"bytes,3,opt,name=customer_id,json=customerId" json:"customer_id,omitempty"`
	Token      *string `protobuf:"bytes,4,opt,name=token" json:"token,omitempty"` // REST only
}

func (x *Stripe) Reset() {
	*x = Stripe{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Stripe) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Stripe) ProtoMessage() {}

func (x *Stripe) ProtoReflect() protoreflect.Message {
	mi := &file_payment_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Stripe.ProtoReflect.Descriptor instead.
func (*Stripe) Descriptor() ([]byte, []int) {
	return file_payment_proto_rawDescGZIP(), []int{3}
}

func (x *Stripe) GetCardLast4() string {
	if x != nil && x.CardLast4 != nil {
		return *x.CardLast4
	}
	return ""
}

func (x *Stripe) GetCustomerId() string {
	if x != nil && x.CustomerId != nil {
		return *x.CustomerId
	}
	return ""
}

func (x *Stripe) GetToken() string {
	if x != nil && x.Token != nil {
		return *x.Token
	}
	return ""
}

type PaymentMethods struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PaymentMethods []*PaymentMethod `protobuf:"bytes,2,rep,name=payment_methods,json=paymentMethods" json:"payment_methods,omitempty"`
}

func (x *PaymentMethods) Reset() {
	*x = PaymentMethods{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentMethods) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentMethods) ProtoMessage() {}

func (x *PaymentMethods) ProtoReflect() protoreflect.Message {
	mi := &file_payment_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentMethods.ProtoReflect.Descriptor instead.
func (*PaymentMethods) Descriptor() ([]byte, []int) {
	return file_payment_proto_rawDescGZIP(), []int{4}
}

func (x *PaymentMethods) GetPaymentMethods() []*PaymentMethod {
	if x != nil {
		return x.PaymentMethods
	}
	return nil
}

type PaymentMethod struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ctx           *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	Type          *string         `protobuf:"bytes,2,opt,name=type" json:"type,omitempty"`
	Id            *string         `protobuf:"bytes,3,opt,name=id" json:"id,omitempty"`
	AccountId     *string         `protobuf:"bytes,4,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	State         *string         `protobuf:"bytes,5,opt,name=state" json:"state,omitempty"`
	Created       *int64          `protobuf:"varint,8,opt,name=created" json:"created,omitempty"`
	Stripe        *Stripe         `protobuf:"bytes,9,opt,name=stripe" json:"stripe,omitempty"`
	FailedMessage *string         `protobuf:"bytes,10,opt,name=failed_message,json=failedMessage" json:"failed_message,omitempty"`
	Charged       *int64          `protobuf:"varint,11,opt,name=charged" json:"charged,omitempty"`
}

func (x *PaymentMethod) Reset() {
	*x = PaymentMethod{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentMethod) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentMethod) ProtoMessage() {}

func (x *PaymentMethod) ProtoReflect() protoreflect.Message {
	mi := &file_payment_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentMethod.ProtoReflect.Descriptor instead.
func (*PaymentMethod) Descriptor() ([]byte, []int) {
	return file_payment_proto_rawDescGZIP(), []int{5}
}

func (x *PaymentMethod) GetCtx() *common.Context {
	if x != nil {
		return x.Ctx
	}
	return nil
}

func (x *PaymentMethod) GetType() string {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return ""
}

func (x *PaymentMethod) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *PaymentMethod) GetAccountId() string {
	if x != nil && x.AccountId != nil {
		return *x.AccountId
	}
	return ""
}

func (x *PaymentMethod) GetState() string {
	if x != nil && x.State != nil {
		return *x.State
	}
	return ""
}

func (x *PaymentMethod) GetCreated() int64 {
	if x != nil && x.Created != nil {
		return *x.Created
	}
	return 0
}

func (x *PaymentMethod) GetStripe() *Stripe {
	if x != nil {
		return x.Stripe
	}
	return nil
}

func (x *PaymentMethod) GetFailedMessage() string {
	if x != nil && x.FailedMessage != nil {
		return *x.FailedMessage
	}
	return ""
}

func (x *PaymentMethod) GetCharged() int64 {
	if x != nil && x.Charged != nil {
		return *x.Charged
	}
	return 0
}

type Limit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ctx            *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	AccountId      *string         `protobuf:"bytes,3,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	MaxAutomations *uint32         `protobuf:"varint,4,opt,name=max_automations,json=maxAutomations" json:"max_automations,omitempty"`
	// optional uint32 max_conversations = 6;
	MaxSegments            *uint32 `protobuf:"varint,7,opt,name=max_segments,json=maxSegments" json:"max_segments,omitempty"`
	MaxAgents              *uint32 `protobuf:"varint,8,opt,name=max_agents,json=maxAgents" json:"max_agents,omitempty"`
	CanBuyAgent            *bool   `protobuf:"varint,10,opt,name=can_buy_agent,json=canBuyAgent" json:"can_buy_agent,omitempty"`
	AutomationWebhookQuota *uint32 `protobuf:"varint,12,opt,name=automation_webhook_quota,json=automationWebhookQuota" json:"automation_webhook_quota,omitempty"`
	AutomationEmailQuota   *uint32 `protobuf:"varint,13,opt,name=automation_email_quota,json=automationEmailQuota" json:"automation_email_quota,omitempty"`
	AutomationMessageQuota *uint32 `protobuf:"varint,14,opt,name=automation_message_quota,json=automationMessageQuota" json:"automation_message_quota,omitempty"`
	MaxRules               *uint32 `protobuf:"varint,16,opt,name=max_rules,json=maxRules" json:"max_rules,omitempty"`
}

func (x *Limit) Reset() {
	*x = Limit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Limit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Limit) ProtoMessage() {}

func (x *Limit) ProtoReflect() protoreflect.Message {
	mi := &file_payment_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Limit.ProtoReflect.Descriptor instead.
func (*Limit) Descriptor() ([]byte, []int) {
	return file_payment_proto_rawDescGZIP(), []int{6}
}

func (x *Limit) GetCtx() *common.Context {
	if x != nil {
		return x.Ctx
	}
	return nil
}

func (x *Limit) GetAccountId() string {
	if x != nil && x.AccountId != nil {
		return *x.AccountId
	}
	return ""
}

func (x *Limit) GetMaxAutomations() uint32 {
	if x != nil && x.MaxAutomations != nil {
		return *x.MaxAutomations
	}
	return 0
}

func (x *Limit) GetMaxSegments() uint32 {
	if x != nil && x.MaxSegments != nil {
		return *x.MaxSegments
	}
	return 0
}

func (x *Limit) GetMaxAgents() uint32 {
	if x != nil && x.MaxAgents != nil {
		return *x.MaxAgents
	}
	return 0
}

func (x *Limit) GetCanBuyAgent() bool {
	if x != nil && x.CanBuyAgent != nil {
		return *x.CanBuyAgent
	}
	return false
}

func (x *Limit) GetAutomationWebhookQuota() uint32 {
	if x != nil && x.AutomationWebhookQuota != nil {
		return *x.AutomationWebhookQuota
	}
	return 0
}

func (x *Limit) GetAutomationEmailQuota() uint32 {
	if x != nil && x.AutomationEmailQuota != nil {
		return *x.AutomationEmailQuota
	}
	return 0
}

func (x *Limit) GetAutomationMessageQuota() uint32 {
	if x != nil && x.AutomationMessageQuota != nil {
		return *x.AutomationMessageQuota
	}
	return 0
}

func (x *Limit) GetMaxRules() uint32 {
	if x != nil && x.MaxRules != nil {
		return *x.MaxRules
	}
	return 0
}

type Plans struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Plans []*Plan `protobuf:"bytes,2,rep,name=plans" json:"plans,omitempty"`
}

func (x *Plans) Reset() {
	*x = Plans{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Plans) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Plans) ProtoMessage() {}

func (x *Plans) ProtoReflect() protoreflect.Message {
	mi := &file_payment_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Plans.ProtoReflect.Descriptor instead.
func (*Plans) Descriptor() ([]byte, []int) {
	return file_payment_proto_rawDescGZIP(), []int{7}
}

func (x *Plans) GetPlans() []*Plan {
	if x != nil {
		return x.Plans
	}
	return nil
}

type Plan struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  *string  `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Limit *Limit   `protobuf:"bytes,3,opt,name=limit" json:"limit,omitempty"`
	Price *float32 `protobuf:"fixed32,4,opt,name=price" json:"price,omitempty"` // usd
}

func (x *Plan) Reset() {
	*x = Plan{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Plan) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Plan) ProtoMessage() {}

func (x *Plan) ProtoReflect() protoreflect.Message {
	mi := &file_payment_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Plan.ProtoReflect.Descriptor instead.
func (*Plan) Descriptor() ([]byte, []int) {
	return file_payment_proto_rawDescGZIP(), []int{8}
}

func (x *Plan) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *Plan) GetLimit() *Limit {
	if x != nil {
		return x.Limit
	}
	return nil
}

func (x *Plan) GetPrice() float32 {
	if x != nil && x.Price != nil {
		return *x.Price
	}
	return 0
}

type Subscription struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ctx                   *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	AccountId             *string         `protobuf:"bytes,3,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	Created               *int64          `protobuf:"varint,11,opt,name=created" json:"created,omitempty"`
	PromotionCode         *string         `protobuf:"bytes,4,opt,name=promotion_code,json=promotionCode" json:"promotion_code,omitempty"`
	Name                  *string         `protobuf:"bytes,7,opt,name=name" json:"name,omitempty"`
	Started               *int64          `protobuf:"varint,5,opt,name=started" json:"started,omitempty"`
	AutoRenew             *bool           `protobuf:"varint,9,opt,name=auto_renew,json=autoRenew" json:"auto_renew,omitempty"`
	BillingCycleMonth     *uint32         `protobuf:"varint,15,opt,name=billing_cycle_month,json=billingCycleMonth" json:"billing_cycle_month,omitempty"`
	NextBillingCycleMonth *uint32         `protobuf:"varint,16,opt,name=next_billing_cycle_month,json=nextBillingCycleMonth" json:"next_billing_cycle_month,omitempty"`
	Plan                  *string         `protobuf:"bytes,17,opt,name=plan" json:"plan,omitempty"`
	Credit                *float32        `protobuf:"fixed32,27,opt,name=credit" json:"credit,omitempty"`
	Notes                 []*Note         `protobuf:"bytes,28,rep,name=notes" json:"notes,omitempty"`
	ReferralBy            *string         `protobuf:"bytes,29,opt,name=referral_by,json=referralBy" json:"referral_by,omitempty"` // account_id
	Customer              *Customer       `protobuf:"bytes,31,opt,name=customer" json:"customer,omitempty"`
	PrimaryPaymentMethod  *string         `protobuf:"bytes,32,opt,name=primary_payment_method,json=primaryPaymentMethod" json:"primary_payment_method,omitempty"`
	Limit                 *Limit          `protobuf:"bytes,42,opt,name=limit" json:"limit,omitempty"`
	V3State               *int32          `protobuf:"varint,43,opt,name=v3_state,json=v3State" json:"v3_state,omitempty"`
	AutoCharge            *bool           `protobuf:"varint,44,opt,name=auto_charge,json=autoCharge" json:"auto_charge,omitempty"`
	Ended                 *int64          `protobuf:"varint,45,opt,name=ended" json:"ended,omitempty"`
	Trusted               *bool           `protobuf:"varint,46,opt,name=trusted" json:"trusted,omitempty"`
}

func (x *Subscription) Reset() {
	*x = Subscription{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Subscription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Subscription) ProtoMessage() {}

func (x *Subscription) ProtoReflect() protoreflect.Message {
	mi := &file_payment_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Subscription.ProtoReflect.Descriptor instead.
func (*Subscription) Descriptor() ([]byte, []int) {
	return file_payment_proto_rawDescGZIP(), []int{9}
}

func (x *Subscription) GetCtx() *common.Context {
	if x != nil {
		return x.Ctx
	}
	return nil
}

func (x *Subscription) GetAccountId() string {
	if x != nil && x.AccountId != nil {
		return *x.AccountId
	}
	return ""
}

func (x *Subscription) GetCreated() int64 {
	if x != nil && x.Created != nil {
		return *x.Created
	}
	return 0
}

func (x *Subscription) GetPromotionCode() string {
	if x != nil && x.PromotionCode != nil {
		return *x.PromotionCode
	}
	return ""
}

func (x *Subscription) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *Subscription) GetStarted() int64 {
	if x != nil && x.Started != nil {
		return *x.Started
	}
	return 0
}

func (x *Subscription) GetAutoRenew() bool {
	if x != nil && x.AutoRenew != nil {
		return *x.AutoRenew
	}
	return false
}

func (x *Subscription) GetBillingCycleMonth() uint32 {
	if x != nil && x.BillingCycleMonth != nil {
		return *x.BillingCycleMonth
	}
	return 0
}

func (x *Subscription) GetNextBillingCycleMonth() uint32 {
	if x != nil && x.NextBillingCycleMonth != nil {
		return *x.NextBillingCycleMonth
	}
	return 0
}

func (x *Subscription) GetPlan() string {
	if x != nil && x.Plan != nil {
		return *x.Plan
	}
	return ""
}

func (x *Subscription) GetCredit() float32 {
	if x != nil && x.Credit != nil {
		return *x.Credit
	}
	return 0
}

func (x *Subscription) GetNotes() []*Note {
	if x != nil {
		return x.Notes
	}
	return nil
}

func (x *Subscription) GetReferralBy() string {
	if x != nil && x.ReferralBy != nil {
		return *x.ReferralBy
	}
	return ""
}

func (x *Subscription) GetCustomer() *Customer {
	if x != nil {
		return x.Customer
	}
	return nil
}

func (x *Subscription) GetPrimaryPaymentMethod() string {
	if x != nil && x.PrimaryPaymentMethod != nil {
		return *x.PrimaryPaymentMethod
	}
	return ""
}

func (x *Subscription) GetLimit() *Limit {
	if x != nil {
		return x.Limit
	}
	return nil
}

func (x *Subscription) GetV3State() int32 {
	if x != nil && x.V3State != nil {
		return *x.V3State
	}
	return 0
}

func (x *Subscription) GetAutoCharge() bool {
	if x != nil && x.AutoCharge != nil {
		return *x.AutoCharge
	}
	return false
}

func (x *Subscription) GetEnded() int64 {
	if x != nil && x.Ended != nil {
		return *x.Ended
	}
	return 0
}

func (x *Subscription) GetTrusted() bool {
	if x != nil && x.Trusted != nil {
		return *x.Trusted
	}
	return false
}

type Bill struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ctx           *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	Id            *string         `protobuf:"bytes,3,opt,name=id" json:"id,omitempty"`
	AccountId     *string         `protobuf:"bytes,4,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	Amount        *float32        `protobuf:"fixed32,5,opt,name=amount" json:"amount,omitempty"`
	InvoiceIds    []string        `protobuf:"bytes,6,rep,name=invoice_ids,json=invoiceIds" json:"invoice_ids,omitempty"`
	Created       *int64          `protobuf:"varint,7,opt,name=created" json:"created,omitempty"`
	CustomerInfo  *Contact        `protobuf:"bytes,8,opt,name=customer_info,json=customerInfo" json:"customer_info,omitempty"`
	PaymentMethod *string         `protobuf:"bytes,10,opt,name=payment_method,json=paymentMethod" json:"payment_method,omitempty"`
	Year          *int32          `protobuf:"varint,11,opt,name=year" json:"year,omitempty"`
	Description   *string         `protobuf:"bytes,12,opt,name=description" json:"description,omitempty"`
}

func (x *Bill) Reset() {
	*x = Bill{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Bill) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Bill) ProtoMessage() {}

func (x *Bill) ProtoReflect() protoreflect.Message {
	mi := &file_payment_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Bill.ProtoReflect.Descriptor instead.
func (*Bill) Descriptor() ([]byte, []int) {
	return file_payment_proto_rawDescGZIP(), []int{10}
}

func (x *Bill) GetCtx() *common.Context {
	if x != nil {
		return x.Ctx
	}
	return nil
}

func (x *Bill) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *Bill) GetAccountId() string {
	if x != nil && x.AccountId != nil {
		return *x.AccountId
	}
	return ""
}

func (x *Bill) GetAmount() float32 {
	if x != nil && x.Amount != nil {
		return *x.Amount
	}
	return 0
}

func (x *Bill) GetInvoiceIds() []string {
	if x != nil {
		return x.InvoiceIds
	}
	return nil
}

func (x *Bill) GetCreated() int64 {
	if x != nil && x.Created != nil {
		return *x.Created
	}
	return 0
}

func (x *Bill) GetCustomerInfo() *Contact {
	if x != nil {
		return x.CustomerInfo
	}
	return nil
}

func (x *Bill) GetPaymentMethod() string {
	if x != nil && x.PaymentMethod != nil {
		return *x.PaymentMethod
	}
	return ""
}

func (x *Bill) GetYear() int32 {
	if x != nil && x.Year != nil {
		return *x.Year
	}
	return 0
}

func (x *Bill) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

type Note struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ctx     *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	Message *string         `protobuf:"bytes,4,opt,name=message" json:"message,omitempty"`
	Creator *string         `protobuf:"bytes,5,opt,name=creator" json:"creator,omitempty"`
	Created *int64          `protobuf:"varint,6,opt,name=created" json:"created,omitempty"`
}

func (x *Note) Reset() {
	*x = Note{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Note) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Note) ProtoMessage() {}

func (x *Note) ProtoReflect() protoreflect.Message {
	mi := &file_payment_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Note.ProtoReflect.Descriptor instead.
func (*Note) Descriptor() ([]byte, []int) {
	return file_payment_proto_rawDescGZIP(), []int{11}
}

func (x *Note) GetCtx() *common.Context {
	if x != nil {
		return x.Ctx
	}
	return nil
}

func (x *Note) GetMessage() string {
	if x != nil && x.Message != nil {
		return *x.Message
	}
	return ""
}

func (x *Note) GetCreator() string {
	if x != nil && x.Creator != nil {
		return *x.Creator
	}
	return ""
}

func (x *Note) GetCreated() int64 {
	if x != nil && x.Created != nil {
		return *x.Created
	}
	return 0
}

type Invoices struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Invoices  []*Invoice `protobuf:"bytes,2,rep,name=invoices" json:"invoices,omitempty"`
	AccountId *string    `protobuf:"bytes,3,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	Anchor    *string    `protobuf:"bytes,4,opt,name=anchor" json:"anchor,omitempty"`
}

func (x *Invoices) Reset() {
	*x = Invoices{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Invoices) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Invoices) ProtoMessage() {}

func (x *Invoices) ProtoReflect() protoreflect.Message {
	mi := &file_payment_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Invoices.ProtoReflect.Descriptor instead.
func (*Invoices) Descriptor() ([]byte, []int) {
	return file_payment_proto_rawDescGZIP(), []int{12}
}

func (x *Invoices) GetInvoices() []*Invoice {
	if x != nil {
		return x.Invoices
	}
	return nil
}

func (x *Invoices) GetAccountId() string {
	if x != nil && x.AccountId != nil {
		return *x.AccountId
	}
	return ""
}

func (x *Invoices) GetAnchor() string {
	if x != nil && x.Anchor != nil {
		return *x.Anchor
	}
	return ""
}

type ListInvoiceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ctx       *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	Anchor    *string         `protobuf:"bytes,4,opt,name=anchor" json:"anchor,omitempty"`
	AccountId *string         `protobuf:"bytes,5,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
}

func (x *ListInvoiceRequest) Reset() {
	*x = ListInvoiceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListInvoiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListInvoiceRequest) ProtoMessage() {}

func (x *ListInvoiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_payment_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListInvoiceRequest.ProtoReflect.Descriptor instead.
func (*ListInvoiceRequest) Descriptor() ([]byte, []int) {
	return file_payment_proto_rawDescGZIP(), []int{13}
}

func (x *ListInvoiceRequest) GetCtx() *common.Context {
	if x != nil {
		return x.Ctx
	}
	return nil
}

func (x *ListInvoiceRequest) GetAnchor() string {
	if x != nil && x.Anchor != nil {
		return *x.Anchor
	}
	return ""
}

func (x *ListInvoiceRequest) GetAccountId() string {
	if x != nil && x.AccountId != nil {
		return *x.AccountId
	}
	return ""
}

type Invoice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ctx           *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	AccountId     *string         `protobuf:"bytes,2,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	Id            *string         `protobuf:"bytes,3,opt,name=id" json:"id,omitempty"`
	AmountDue     *float32        `protobuf:"fixed32,4,opt,name=amount_due,json=amountDue" json:"amount_due,omitempty"`
	PromotionCode *string         `protobuf:"bytes,5,opt,name=promotion_code,json=promotionCode" json:"promotion_code,omitempty"`
	Description   *string         `protobuf:"bytes,6,opt,name=description" json:"description,omitempty"`
	BillingInfo   *BillingInfo    `protobuf:"bytes,8,opt,name=billing_info,json=billingInfo" json:"billing_info,omitempty"`
	DueDate       *int64          `protobuf:"varint,9,opt,name=due_date,json=dueDate" json:"due_date,omitempty"`
	State         *string         `protobuf:"bytes,10,opt,name=state" json:"state,omitempty"`
	Created       *int64          `protobuf:"varint,11,opt,name=created" json:"created,omitempty"`
	Items         []*InvoiceItem  `protobuf:"bytes,12,rep,name=items" json:"items,omitempty"`
	Subtotal      *float32        `protobuf:"fixed32,14,opt,name=subtotal" json:"subtotal,omitempty"`
	TaxPercent    *float32        `protobuf:"fixed32,15,opt,name=tax_percent,json=taxPercent" json:"tax_percent,omitempty"`
	Tax           *float32        `protobuf:"fixed32,16,opt,name=tax" json:"tax,omitempty"`
	Total         *float32        `protobuf:"fixed32,17,opt,name=total" json:"total,omitempty"`
	Updated       *int64          `protobuf:"varint,18,opt,name=updated" json:"updated,omitempty"`
	Year          *int32          `protobuf:"varint,19,opt,name=year" json:"year,omitempty"` // optional
	Notes         []*Note         `protobuf:"bytes,22,rep,name=notes" json:"notes,omitempty"`
	Bills         []string        `protobuf:"bytes,23,rep,name=bills" json:"bills,omitempty"`
	PaymentMade   *float32        `protobuf:"fixed32,24,opt,name=payment_made,json=paymentMade" json:"payment_made,omitempty"`
	CurrentSub    *Subscription   `protobuf:"bytes,25,opt,name=current_sub,json=currentSub" json:"current_sub,omitempty"`    // optional
	CurrentPlan   *Plan           `protobuf:"bytes,26,opt,name=current_plan,json=currentPlan" json:"current_plan,omitempty"` // optional
}

func (x *Invoice) Reset() {
	*x = Invoice{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Invoice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Invoice) ProtoMessage() {}

func (x *Invoice) ProtoReflect() protoreflect.Message {
	mi := &file_payment_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Invoice.ProtoReflect.Descriptor instead.
func (*Invoice) Descriptor() ([]byte, []int) {
	return file_payment_proto_rawDescGZIP(), []int{14}
}

func (x *Invoice) GetCtx() *common.Context {
	if x != nil {
		return x.Ctx
	}
	return nil
}

func (x *Invoice) GetAccountId() string {
	if x != nil && x.AccountId != nil {
		return *x.AccountId
	}
	return ""
}

func (x *Invoice) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *Invoice) GetAmountDue() float32 {
	if x != nil && x.AmountDue != nil {
		return *x.AmountDue
	}
	return 0
}

func (x *Invoice) GetPromotionCode() string {
	if x != nil && x.PromotionCode != nil {
		return *x.PromotionCode
	}
	return ""
}

func (x *Invoice) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *Invoice) GetBillingInfo() *BillingInfo {
	if x != nil {
		return x.BillingInfo
	}
	return nil
}

func (x *Invoice) GetDueDate() int64 {
	if x != nil && x.DueDate != nil {
		return *x.DueDate
	}
	return 0
}

func (x *Invoice) GetState() string {
	if x != nil && x.State != nil {
		return *x.State
	}
	return ""
}

func (x *Invoice) GetCreated() int64 {
	if x != nil && x.Created != nil {
		return *x.Created
	}
	return 0
}

func (x *Invoice) GetItems() []*InvoiceItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *Invoice) GetSubtotal() float32 {
	if x != nil && x.Subtotal != nil {
		return *x.Subtotal
	}
	return 0
}

func (x *Invoice) GetTaxPercent() float32 {
	if x != nil && x.TaxPercent != nil {
		return *x.TaxPercent
	}
	return 0
}

func (x *Invoice) GetTax() float32 {
	if x != nil && x.Tax != nil {
		return *x.Tax
	}
	return 0
}

func (x *Invoice) GetTotal() float32 {
	if x != nil && x.Total != nil {
		return *x.Total
	}
	return 0
}

func (x *Invoice) GetUpdated() int64 {
	if x != nil && x.Updated != nil {
		return *x.Updated
	}
	return 0
}

func (x *Invoice) GetYear() int32 {
	if x != nil && x.Year != nil {
		return *x.Year
	}
	return 0
}

func (x *Invoice) GetNotes() []*Note {
	if x != nil {
		return x.Notes
	}
	return nil
}

func (x *Invoice) GetBills() []string {
	if x != nil {
		return x.Bills
	}
	return nil
}

func (x *Invoice) GetPaymentMade() float32 {
	if x != nil && x.PaymentMade != nil {
		return *x.PaymentMade
	}
	return 0
}

func (x *Invoice) GetCurrentSub() *Subscription {
	if x != nil {
		return x.CurrentSub
	}
	return nil
}

func (x *Invoice) GetCurrentPlan() *Plan {
	if x != nil {
		return x.CurrentPlan
	}
	return nil
}

type AgentInvoiceItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Plan       *string `protobuf:"bytes,3,opt,name=plan" json:"plan,omitempty"`
	DayLeft    *int32  `protobuf:"varint,4,opt,name=day_left,json=dayLeft" json:"day_left,omitempty"`
	AgentCount *int32  `protobuf:"varint,8,opt,name=agent_count,json=agentCount" json:"agent_count,omitempty"`
}

func (x *AgentInvoiceItem) Reset() {
	*x = AgentInvoiceItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentInvoiceItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentInvoiceItem) ProtoMessage() {}

func (x *AgentInvoiceItem) ProtoReflect() protoreflect.Message {
	mi := &file_payment_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentInvoiceItem.ProtoReflect.Descriptor instead.
func (*AgentInvoiceItem) Descriptor() ([]byte, []int) {
	return file_payment_proto_rawDescGZIP(), []int{15}
}

func (x *AgentInvoiceItem) GetPlan() string {
	if x != nil && x.Plan != nil {
		return *x.Plan
	}
	return ""
}

func (x *AgentInvoiceItem) GetDayLeft() int32 {
	if x != nil && x.DayLeft != nil {
		return *x.DayLeft
	}
	return 0
}

func (x *AgentInvoiceItem) GetAgentCount() int32 {
	if x != nil && x.AgentCount != nil {
		return *x.AgentCount
	}
	return 0
}

type RenewInvoiceItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Plan              *string `protobuf:"bytes,3,opt,name=plan" json:"plan,omitempty"`
	BillingCycleMonth *uint32 `protobuf:"varint,4,opt,name=billing_cycle_month,json=billingCycleMonth" json:"billing_cycle_month,omitempty"`
	AgentCount        *uint32 `protobuf:"varint,5,opt,name=agent_count,json=agentCount" json:"agent_count,omitempty"`
	FromTime          *int64  `protobuf:"varint,6,opt,name=from_time,json=fromTime" json:"from_time,omitempty"`
}

func (x *RenewInvoiceItem) Reset() {
	*x = RenewInvoiceItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RenewInvoiceItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RenewInvoiceItem) ProtoMessage() {}

func (x *RenewInvoiceItem) ProtoReflect() protoreflect.Message {
	mi := &file_payment_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RenewInvoiceItem.ProtoReflect.Descriptor instead.
func (*RenewInvoiceItem) Descriptor() ([]byte, []int) {
	return file_payment_proto_rawDescGZIP(), []int{16}
}

func (x *RenewInvoiceItem) GetPlan() string {
	if x != nil && x.Plan != nil {
		return *x.Plan
	}
	return ""
}

func (x *RenewInvoiceItem) GetBillingCycleMonth() uint32 {
	if x != nil && x.BillingCycleMonth != nil {
		return *x.BillingCycleMonth
	}
	return 0
}

func (x *RenewInvoiceItem) GetAgentCount() uint32 {
	if x != nil && x.AgentCount != nil {
		return *x.AgentCount
	}
	return 0
}

func (x *RenewInvoiceItem) GetFromTime() int64 {
	if x != nil && x.FromTime != nil {
		return *x.FromTime
	}
	return 0
}

type PlanInvoiceItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AgentCount        *uint32  `protobuf:"varint,2,opt,name=agent_count,json=agentCount" json:"agent_count,omitempty"`
	BillingCycleMonth *uint32  `protobuf:"varint,5,opt,name=billing_cycle_month,json=billingCycleMonth" json:"billing_cycle_month,omitempty"`
	OldPlan           *string  `protobuf:"bytes,6,opt,name=old_plan,json=oldPlan" json:"old_plan,omitempty"`
	NewPlan           *string  `protobuf:"bytes,3,opt,name=new_plan,json=newPlan" json:"new_plan,omitempty"`
	SavePercentage    *float32 `protobuf:"fixed32,9,opt,name=save_percentage,json=savePercentage" json:"save_percentage,omitempty"`
	Started           *int64   `protobuf:"varint,8,opt,name=started" json:"started,omitempty"`
	DayLeft           *int32   `protobuf:"varint,4,opt,name=day_left,json=dayLeft" json:"day_left,omitempty"`
	OldAgentCount     *uint32  `protobuf:"varint,10,opt,name=old_agent_count,json=oldAgentCount" json:"old_agent_count,omitempty"`
}

func (x *PlanInvoiceItem) Reset() {
	*x = PlanInvoiceItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlanInvoiceItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlanInvoiceItem) ProtoMessage() {}

func (x *PlanInvoiceItem) ProtoReflect() protoreflect.Message {
	mi := &file_payment_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlanInvoiceItem.ProtoReflect.Descriptor instead.
func (*PlanInvoiceItem) Descriptor() ([]byte, []int) {
	return file_payment_proto_rawDescGZIP(), []int{17}
}

func (x *PlanInvoiceItem) GetAgentCount() uint32 {
	if x != nil && x.AgentCount != nil {
		return *x.AgentCount
	}
	return 0
}

func (x *PlanInvoiceItem) GetBillingCycleMonth() uint32 {
	if x != nil && x.BillingCycleMonth != nil {
		return *x.BillingCycleMonth
	}
	return 0
}

func (x *PlanInvoiceItem) GetOldPlan() string {
	if x != nil && x.OldPlan != nil {
		return *x.OldPlan
	}
	return ""
}

func (x *PlanInvoiceItem) GetNewPlan() string {
	if x != nil && x.NewPlan != nil {
		return *x.NewPlan
	}
	return ""
}

func (x *PlanInvoiceItem) GetSavePercentage() float32 {
	if x != nil && x.SavePercentage != nil {
		return *x.SavePercentage
	}
	return 0
}

func (x *PlanInvoiceItem) GetStarted() int64 {
	if x != nil && x.Started != nil {
		return *x.Started
	}
	return 0
}

func (x *PlanInvoiceItem) GetDayLeft() int32 {
	if x != nil && x.DayLeft != nil {
		return *x.DayLeft
	}
	return 0
}

func (x *PlanInvoiceItem) GetOldAgentCount() uint32 {
	if x != nil && x.OldAgentCount != nil {
		return *x.OldAgentCount
	}
	return 0
}

type InvoiceItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Headline    *string           `protobuf:"bytes,4,opt,name=headline" json:"headline,omitempty"`
	Description *string           `protobuf:"bytes,5,opt,name=description" json:"description,omitempty"`
	InvoiceId   *string           `protobuf:"bytes,6,opt,name=invoice_id,json=invoiceId" json:"invoice_id,omitempty"` // remove
	Quantity    *int32            `protobuf:"varint,7,opt,name=quantity" json:"quantity,omitempty"`
	Price       *float32          `protobuf:"fixed32,8,opt,name=price" json:"price,omitempty"` // per unit
	Data        *InvoiceItem_Data `protobuf:"bytes,9,opt,name=data" json:"data,omitempty"`
	TotalPrice  *float32          `protobuf:"fixed32,10,opt,name=total_price,json=totalPrice" json:"total_price,omitempty"` // = (* quantity price)
}

func (x *InvoiceItem) Reset() {
	*x = InvoiceItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvoiceItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvoiceItem) ProtoMessage() {}

func (x *InvoiceItem) ProtoReflect() protoreflect.Message {
	mi := &file_payment_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvoiceItem.ProtoReflect.Descriptor instead.
func (*InvoiceItem) Descriptor() ([]byte, []int) {
	return file_payment_proto_rawDescGZIP(), []int{18}
}

func (x *InvoiceItem) GetHeadline() string {
	if x != nil && x.Headline != nil {
		return *x.Headline
	}
	return ""
}

func (x *InvoiceItem) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *InvoiceItem) GetInvoiceId() string {
	if x != nil && x.InvoiceId != nil {
		return *x.InvoiceId
	}
	return ""
}

func (x *InvoiceItem) GetQuantity() int32 {
	if x != nil && x.Quantity != nil {
		return *x.Quantity
	}
	return 0
}

func (x *InvoiceItem) GetPrice() float32 {
	if x != nil && x.Price != nil {
		return *x.Price
	}
	return 0
}

func (x *InvoiceItem) GetData() *InvoiceItem_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *InvoiceItem) GetTotalPrice() float32 {
	if x != nil && x.TotalPrice != nil {
		return *x.TotalPrice
	}
	return 0
}

type BillingInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        *string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Address     *string `protobuf:"bytes,3,opt,name=address" json:"address,omitempty"`
	Vat         *string `protobuf:"bytes,4,opt,name=vat" json:"vat,omitempty"`
	CountryCode *string `protobuf:"bytes,5,opt,name=country_code,json=countryCode" json:"country_code,omitempty"`
}

func (x *BillingInfo) Reset() {
	*x = BillingInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BillingInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BillingInfo) ProtoMessage() {}

func (x *BillingInfo) ProtoReflect() protoreflect.Message {
	mi := &file_payment_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BillingInfo.ProtoReflect.Descriptor instead.
func (*BillingInfo) Descriptor() ([]byte, []int) {
	return file_payment_proto_rawDescGZIP(), []int{19}
}

func (x *BillingInfo) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *BillingInfo) GetAddress() string {
	if x != nil && x.Address != nil {
		return *x.Address
	}
	return ""
}

func (x *BillingInfo) GetVat() string {
	if x != nil && x.Vat != nil {
		return *x.Vat
	}
	return ""
}

func (x *BillingInfo) GetCountryCode() string {
	if x != nil && x.CountryCode != nil {
		return *x.CountryCode
	}
	return ""
}

type Contact struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ctx      *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	Name     *string         `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Email    *string         `protobuf:"bytes,3,opt,name=email" json:"email,omitempty"`
	Phone    *string         `protobuf:"bytes,4,opt,name=phone" json:"phone,omitempty"`
	JobTitle *string         `protobuf:"bytes,5,opt,name=job_title,json=jobTitle" json:"job_title,omitempty"`
	Title    *string         `protobuf:"bytes,6,opt,name=title" json:"title,omitempty"`
	Primary  *bool           `protobuf:"varint,7,opt,name=primary" json:"primary,omitempty"`
}

func (x *Contact) Reset() {
	*x = Contact{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Contact) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Contact) ProtoMessage() {}

func (x *Contact) ProtoReflect() protoreflect.Message {
	mi := &file_payment_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Contact.ProtoReflect.Descriptor instead.
func (*Contact) Descriptor() ([]byte, []int) {
	return file_payment_proto_rawDescGZIP(), []int{20}
}

func (x *Contact) GetCtx() *common.Context {
	if x != nil {
		return x.Ctx
	}
	return nil
}

func (x *Contact) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *Contact) GetEmail() string {
	if x != nil && x.Email != nil {
		return *x.Email
	}
	return ""
}

func (x *Contact) GetPhone() string {
	if x != nil && x.Phone != nil {
		return *x.Phone
	}
	return ""
}

func (x *Contact) GetJobTitle() string {
	if x != nil && x.JobTitle != nil {
		return *x.JobTitle
	}
	return ""
}

func (x *Contact) GetTitle() string {
	if x != nil && x.Title != nil {
		return *x.Title
	}
	return ""
}

func (x *Contact) GetPrimary() bool {
	if x != nil && x.Primary != nil {
		return *x.Primary
	}
	return false
}

type Customer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          *string      `protobuf:"bytes,2,opt,name=id" json:"id,omitempty"`
	AccountId   *string      `protobuf:"bytes,3,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	Contacts    []*Contact   `protobuf:"bytes,4,rep,name=contacts" json:"contacts,omitempty"`
	Created     *int64       `protobuf:"varint,5,opt,name=created" json:"created,omitempty"`
	BillingInfo *BillingInfo `protobuf:"bytes,6,opt,name=billing_info,json=billingInfo" json:"billing_info,omitempty"`
}

func (x *Customer) Reset() {
	*x = Customer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Customer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Customer) ProtoMessage() {}

func (x *Customer) ProtoReflect() protoreflect.Message {
	mi := &file_payment_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Customer.ProtoReflect.Descriptor instead.
func (*Customer) Descriptor() ([]byte, []int) {
	return file_payment_proto_rawDescGZIP(), []int{21}
}

func (x *Customer) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *Customer) GetAccountId() string {
	if x != nil && x.AccountId != nil {
		return *x.AccountId
	}
	return ""
}

func (x *Customer) GetContacts() []*Contact {
	if x != nil {
		return x.Contacts
	}
	return nil
}

func (x *Customer) GetCreated() int64 {
	if x != nil && x.Created != nil {
		return *x.Created
	}
	return 0
}

func (x *Customer) GetBillingInfo() *BillingInfo {
	if x != nil {
		return x.BillingInfo
	}
	return nil
}

type FixedAmountPromotionCode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Amount *float32 `protobuf:"fixed32,2,opt,name=amount" json:"amount,omitempty"`
}

func (x *FixedAmountPromotionCode) Reset() {
	*x = FixedAmountPromotionCode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FixedAmountPromotionCode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FixedAmountPromotionCode) ProtoMessage() {}

func (x *FixedAmountPromotionCode) ProtoReflect() protoreflect.Message {
	mi := &file_payment_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FixedAmountPromotionCode.ProtoReflect.Descriptor instead.
func (*FixedAmountPromotionCode) Descriptor() ([]byte, []int) {
	return file_payment_proto_rawDescGZIP(), []int{22}
}

func (x *FixedAmountPromotionCode) GetAmount() float32 {
	if x != nil && x.Amount != nil {
		return *x.Amount
	}
	return 0
}

type PercentPromotionCode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Percent *float32 `protobuf:"fixed32,2,opt,name=percent" json:"percent,omitempty"`
}

func (x *PercentPromotionCode) Reset() {
	*x = PercentPromotionCode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PercentPromotionCode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PercentPromotionCode) ProtoMessage() {}

func (x *PercentPromotionCode) ProtoReflect() protoreflect.Message {
	mi := &file_payment_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PercentPromotionCode.ProtoReflect.Descriptor instead.
func (*PercentPromotionCode) Descriptor() ([]byte, []int) {
	return file_payment_proto_rawDescGZIP(), []int{23}
}

func (x *PercentPromotionCode) GetPercent() float32 {
	if x != nil && x.Percent != nil {
		return *x.Percent
	}
	return 0
}

type CreditCode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Credit *float32 `protobuf:"fixed32,2,opt,name=credit" json:"credit,omitempty"`
}

func (x *CreditCode) Reset() {
	*x = CreditCode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreditCode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreditCode) ProtoMessage() {}

func (x *CreditCode) ProtoReflect() protoreflect.Message {
	mi := &file_payment_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreditCode.ProtoReflect.Descriptor instead.
func (*CreditCode) Descriptor() ([]byte, []int) {
	return file_payment_proto_rawDescGZIP(), []int{24}
}

func (x *CreditCode) GetCredit() float32 {
	if x != nil && x.Credit != nil {
		return *x.Credit
	}
	return 0
}

type ReferralCreditCode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReferrerId *string  `protobuf:"bytes,2,opt,name=referrer_id,json=referrerId" json:"referrer_id,omitempty"`
	Credit     *float32 `protobuf:"fixed32,3,opt,name=credit" json:"credit,omitempty"`
}

func (x *ReferralCreditCode) Reset() {
	*x = ReferralCreditCode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReferralCreditCode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReferralCreditCode) ProtoMessage() {}

func (x *ReferralCreditCode) ProtoReflect() protoreflect.Message {
	mi := &file_payment_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReferralCreditCode.ProtoReflect.Descriptor instead.
func (*ReferralCreditCode) Descriptor() ([]byte, []int) {
	return file_payment_proto_rawDescGZIP(), []int{25}
}

func (x *ReferralCreditCode) GetReferrerId() string {
	if x != nil && x.ReferrerId != nil {
		return *x.ReferrerId
	}
	return ""
}

func (x *ReferralCreditCode) GetCredit() float32 {
	if x != nil && x.Credit != nil {
		return *x.Credit
	}
	return 0
}

type PromotionCode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ctx            *common.Context     `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	Description    *string             `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
	Type           *string             `protobuf:"bytes,6,opt,name=type" json:"type,omitempty"`
	RedeemCount    *int32              `protobuf:"varint,5,opt,name=redeem_count,json=redeemCount" json:"redeem_count,omitempty"`
	Creator        *string             `protobuf:"bytes,9,opt,name=creator" json:"creator,omitempty"`
	Created        *int64              `protobuf:"varint,10,opt,name=created" json:"created,omitempty"`
	Code           *string             `protobuf:"bytes,11,opt,name=code" json:"code,omitempty"`
	Data           *PromotionCode_Data `protobuf:"bytes,14,opt,name=data" json:"data,omitempty"`
	Start          *int64              `protobuf:"varint,16,opt,name=start" json:"start,omitempty"`
	End            *int64              `protobuf:"varint,17,opt,name=end" json:"end,omitempty"`
	ForPlan        *string             `protobuf:"bytes,18,opt,name=for_plan,json=forPlan" json:"for_plan,omitempty"`
	ForAccountId   *string             `protobuf:"bytes,19,opt,name=for_account_id,json=forAccountId" json:"for_account_id,omitempty"`
	MaxRedemptions *int32              `protobuf:"varint,20,opt,name=max_redemptions,json=maxRedemptions" json:"max_redemptions,omitempty"`
	Addon          *string             `protobuf:"bytes,21,opt,name=addon" json:"addon,omitempty"`
	ForItems       []string            `protobuf:"bytes,23,rep,name=for_items,json=forItems" json:"for_items,omitempty"`
	MinAmount      *float32            `protobuf:"fixed32,24,opt,name=min_amount,json=minAmount" json:"min_amount,omitempty"` //TODO: Delete
	MaxAmount      *float32            `protobuf:"fixed32,25,opt,name=max_amount,json=maxAmount" json:"max_amount,omitempty"` //TODO: Delete
	ForPlans       []string            `protobuf:"bytes,26,rep,name=for_plans,json=forPlans" json:"for_plans,omitempty"`
	ForAccountIds  []string            `protobuf:"bytes,27,rep,name=for_account_ids,json=forAccountIds" json:"for_account_ids,omitempty"`
	ForChannels    []string            `protobuf:"bytes,29,rep,name=for_channels,json=forChannels" json:"for_channels,omitempty"`
	IsDeleted      *bool               `protobuf:"varint,30,opt,name=is_deleted,json=isDeleted" json:"is_deleted,omitempty"`
	//repeated int32 for_number_of_agents = 31;
	ForNumberOfAgents []uint32 `protobuf:"varint,32,rep,name=for_number_of_agents,json=forNumberOfAgents" json:"for_number_of_agents,omitempty"`
	Id                *string  `protobuf:"bytes,33,opt,name=id" json:"id,omitempty"`
}

func (x *PromotionCode) Reset() {
	*x = PromotionCode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PromotionCode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PromotionCode) ProtoMessage() {}

func (x *PromotionCode) ProtoReflect() protoreflect.Message {
	mi := &file_payment_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PromotionCode.ProtoReflect.Descriptor instead.
func (*PromotionCode) Descriptor() ([]byte, []int) {
	return file_payment_proto_rawDescGZIP(), []int{26}
}

func (x *PromotionCode) GetCtx() *common.Context {
	if x != nil {
		return x.Ctx
	}
	return nil
}

func (x *PromotionCode) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *PromotionCode) GetType() string {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return ""
}

func (x *PromotionCode) GetRedeemCount() int32 {
	if x != nil && x.RedeemCount != nil {
		return *x.RedeemCount
	}
	return 0
}

func (x *PromotionCode) GetCreator() string {
	if x != nil && x.Creator != nil {
		return *x.Creator
	}
	return ""
}

func (x *PromotionCode) GetCreated() int64 {
	if x != nil && x.Created != nil {
		return *x.Created
	}
	return 0
}

func (x *PromotionCode) GetCode() string {
	if x != nil && x.Code != nil {
		return *x.Code
	}
	return ""
}

func (x *PromotionCode) GetData() *PromotionCode_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *PromotionCode) GetStart() int64 {
	if x != nil && x.Start != nil {
		return *x.Start
	}
	return 0
}

func (x *PromotionCode) GetEnd() int64 {
	if x != nil && x.End != nil {
		return *x.End
	}
	return 0
}

func (x *PromotionCode) GetForPlan() string {
	if x != nil && x.ForPlan != nil {
		return *x.ForPlan
	}
	return ""
}

func (x *PromotionCode) GetForAccountId() string {
	if x != nil && x.ForAccountId != nil {
		return *x.ForAccountId
	}
	return ""
}

func (x *PromotionCode) GetMaxRedemptions() int32 {
	if x != nil && x.MaxRedemptions != nil {
		return *x.MaxRedemptions
	}
	return 0
}

func (x *PromotionCode) GetAddon() string {
	if x != nil && x.Addon != nil {
		return *x.Addon
	}
	return ""
}

func (x *PromotionCode) GetForItems() []string {
	if x != nil {
		return x.ForItems
	}
	return nil
}

func (x *PromotionCode) GetMinAmount() float32 {
	if x != nil && x.MinAmount != nil {
		return *x.MinAmount
	}
	return 0
}

func (x *PromotionCode) GetMaxAmount() float32 {
	if x != nil && x.MaxAmount != nil {
		return *x.MaxAmount
	}
	return 0
}

func (x *PromotionCode) GetForPlans() []string {
	if x != nil {
		return x.ForPlans
	}
	return nil
}

func (x *PromotionCode) GetForAccountIds() []string {
	if x != nil {
		return x.ForAccountIds
	}
	return nil
}

func (x *PromotionCode) GetForChannels() []string {
	if x != nil {
		return x.ForChannels
	}
	return nil
}

func (x *PromotionCode) GetIsDeleted() bool {
	if x != nil && x.IsDeleted != nil {
		return *x.IsDeleted
	}
	return false
}

func (x *PromotionCode) GetForNumberOfAgents() []uint32 {
	if x != nil {
		return x.ForNumberOfAgents
	}
	return nil
}

func (x *PromotionCode) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

type PromotionCodeByCode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code *string `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	Id   *string `protobuf:"bytes,2,opt,name=id" json:"id,omitempty"`
}

func (x *PromotionCodeByCode) Reset() {
	*x = PromotionCodeByCode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PromotionCodeByCode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PromotionCodeByCode) ProtoMessage() {}

func (x *PromotionCodeByCode) ProtoReflect() protoreflect.Message {
	mi := &file_payment_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PromotionCodeByCode.ProtoReflect.Descriptor instead.
func (*PromotionCodeByCode) Descriptor() ([]byte, []int) {
	return file_payment_proto_rawDescGZIP(), []int{27}
}

func (x *PromotionCodeByCode) GetCode() string {
	if x != nil && x.Code != nil {
		return *x.Code
	}
	return ""
}

func (x *PromotionCodeByCode) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

type LogPromotionCodeUsed struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      *string `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	AccountId *string `protobuf:"bytes,2,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	Created   *int64  `protobuf:"varint,3,opt,name=created" json:"created,omitempty"`
}

func (x *LogPromotionCodeUsed) Reset() {
	*x = LogPromotionCodeUsed{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogPromotionCodeUsed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogPromotionCodeUsed) ProtoMessage() {}

func (x *LogPromotionCodeUsed) ProtoReflect() protoreflect.Message {
	mi := &file_payment_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogPromotionCodeUsed.ProtoReflect.Descriptor instead.
func (*LogPromotionCodeUsed) Descriptor() ([]byte, []int) {
	return file_payment_proto_rawDescGZIP(), []int{28}
}

func (x *LogPromotionCodeUsed) GetCode() string {
	if x != nil && x.Code != nil {
		return *x.Code
	}
	return ""
}

func (x *LogPromotionCodeUsed) GetAccountId() string {
	if x != nil && x.AccountId != nil {
		return *x.AccountId
	}
	return ""
}

func (x *LogPromotionCodeUsed) GetCreated() int64 {
	if x != nil && x.Created != nil {
		return *x.Created
	}
	return 0
}

type Referral struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ctx                *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	AgentId            *string         `protobuf:"bytes,2,opt,name=agent_id,json=agentId" json:"agent_id,omitempty"`
	AccountId          *string         `protobuf:"bytes,3,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	Status             *string         `protobuf:"bytes,5,opt,name=status" json:"status,omitempty"`
	Earning            *float32        `protobuf:"fixed32,6,opt,name=earning" json:"earning,omitempty"`
	CommissionRate     *float32        `protobuf:"fixed32,7,opt,name=commission_rate,json=commissionRate" json:"commission_rate,omitempty"`
	Created            *int64          `protobuf:"varint,9,opt,name=created" json:"created,omitempty"`
	BankName           *string         `protobuf:"bytes,11,opt,name=bank_name,json=bankName" json:"bank_name,omitempty"`
	BankAccountNumber  *string         `protobuf:"bytes,12,opt,name=bank_account_number,json=bankAccountNumber" json:"bank_account_number,omitempty"`
	BankBranch         *string         `protobuf:"bytes,14,opt,name=bank_branch,json=bankBranch" json:"bank_branch,omitempty"`
	BankFullname       *string         `protobuf:"bytes,15,opt,name=bank_fullname,json=bankFullname" json:"bank_fullname,omitempty"`
	ReferrerId         *string         `protobuf:"bytes,16,opt,name=referrer_id,json=referrerId" json:"referrer_id,omitempty"`
	MinimumPayment     *float32        `protobuf:"fixed32,17,opt,name=minimum_payment,json=minimumPayment" json:"minimum_payment,omitempty"`
	NumberOfRefer      *int32          `protobuf:"varint,18,opt,name=number_of_refer,json=numberOfRefer" json:"number_of_refer,omitempty"`
	NumberOfReferByDay *int32          `protobuf:"varint,19,opt,name=number_of_refer_by_day,json=numberOfReferByDay" json:"number_of_refer_by_day,omitempty"`
}

func (x *Referral) Reset() {
	*x = Referral{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Referral) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Referral) ProtoMessage() {}

func (x *Referral) ProtoReflect() protoreflect.Message {
	mi := &file_payment_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Referral.ProtoReflect.Descriptor instead.
func (*Referral) Descriptor() ([]byte, []int) {
	return file_payment_proto_rawDescGZIP(), []int{29}
}

func (x *Referral) GetCtx() *common.Context {
	if x != nil {
		return x.Ctx
	}
	return nil
}

func (x *Referral) GetAgentId() string {
	if x != nil && x.AgentId != nil {
		return *x.AgentId
	}
	return ""
}

func (x *Referral) GetAccountId() string {
	if x != nil && x.AccountId != nil {
		return *x.AccountId
	}
	return ""
}

func (x *Referral) GetStatus() string {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return ""
}

func (x *Referral) GetEarning() float32 {
	if x != nil && x.Earning != nil {
		return *x.Earning
	}
	return 0
}

func (x *Referral) GetCommissionRate() float32 {
	if x != nil && x.CommissionRate != nil {
		return *x.CommissionRate
	}
	return 0
}

func (x *Referral) GetCreated() int64 {
	if x != nil && x.Created != nil {
		return *x.Created
	}
	return 0
}

func (x *Referral) GetBankName() string {
	if x != nil && x.BankName != nil {
		return *x.BankName
	}
	return ""
}

func (x *Referral) GetBankAccountNumber() string {
	if x != nil && x.BankAccountNumber != nil {
		return *x.BankAccountNumber
	}
	return ""
}

func (x *Referral) GetBankBranch() string {
	if x != nil && x.BankBranch != nil {
		return *x.BankBranch
	}
	return ""
}

func (x *Referral) GetBankFullname() string {
	if x != nil && x.BankFullname != nil {
		return *x.BankFullname
	}
	return ""
}

func (x *Referral) GetReferrerId() string {
	if x != nil && x.ReferrerId != nil {
		return *x.ReferrerId
	}
	return ""
}

func (x *Referral) GetMinimumPayment() float32 {
	if x != nil && x.MinimumPayment != nil {
		return *x.MinimumPayment
	}
	return 0
}

func (x *Referral) GetNumberOfRefer() int32 {
	if x != nil && x.NumberOfRefer != nil {
		return *x.NumberOfRefer
	}
	return 0
}

func (x *Referral) GetNumberOfReferByDay() int32 {
	if x != nil && x.NumberOfReferByDay != nil {
		return *x.NumberOfReferByDay
	}
	return 0
}

type AgentByReferId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReferrerId *string `protobuf:"bytes,1,opt,name=referrer_id,json=referrerId" json:"referrer_id,omitempty"`
	AccountId  *string `protobuf:"bytes,2,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	AgentId    *string `protobuf:"bytes,3,opt,name=agent_id,json=agentId" json:"agent_id,omitempty"`
}

func (x *AgentByReferId) Reset() {
	*x = AgentByReferId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentByReferId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentByReferId) ProtoMessage() {}

func (x *AgentByReferId) ProtoReflect() protoreflect.Message {
	mi := &file_payment_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentByReferId.ProtoReflect.Descriptor instead.
func (*AgentByReferId) Descriptor() ([]byte, []int) {
	return file_payment_proto_rawDescGZIP(), []int{30}
}

func (x *AgentByReferId) GetReferrerId() string {
	if x != nil && x.ReferrerId != nil {
		return *x.ReferrerId
	}
	return ""
}

func (x *AgentByReferId) GetAccountId() string {
	if x != nil && x.AccountId != nil {
		return *x.AccountId
	}
	return ""
}

func (x *AgentByReferId) GetAgentId() string {
	if x != nil && x.AgentId != nil {
		return *x.AgentId
	}
	return ""
}

type LogAccountReferred struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReferrerId        *string `protobuf:"bytes,1,opt,name=referrer_id,json=referrerId" json:"referrer_id,omitempty"`
	AccountId         *string `protobuf:"bytes,2,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	Created           *int64  `protobuf:"varint,3,opt,name=created" json:"created,omitempty"`
	ReferrerAccountId *string `protobuf:"bytes,4,opt,name=referrer_account_id,json=referrerAccountId" json:"referrer_account_id,omitempty"`
	ReferrerAgentId   *string `protobuf:"bytes,5,opt,name=referrer_agent_id,json=referrerAgentId" json:"referrer_agent_id,omitempty"`
}

func (x *LogAccountReferred) Reset() {
	*x = LogAccountReferred{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogAccountReferred) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogAccountReferred) ProtoMessage() {}

func (x *LogAccountReferred) ProtoReflect() protoreflect.Message {
	mi := &file_payment_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogAccountReferred.ProtoReflect.Descriptor instead.
func (*LogAccountReferred) Descriptor() ([]byte, []int) {
	return file_payment_proto_rawDescGZIP(), []int{31}
}

func (x *LogAccountReferred) GetReferrerId() string {
	if x != nil && x.ReferrerId != nil {
		return *x.ReferrerId
	}
	return ""
}

func (x *LogAccountReferred) GetAccountId() string {
	if x != nil && x.AccountId != nil {
		return *x.AccountId
	}
	return ""
}

func (x *LogAccountReferred) GetCreated() int64 {
	if x != nil && x.Created != nil {
		return *x.Created
	}
	return 0
}

func (x *LogAccountReferred) GetReferrerAccountId() string {
	if x != nil && x.ReferrerAccountId != nil {
		return *x.ReferrerAccountId
	}
	return ""
}

func (x *LogAccountReferred) GetReferrerAgentId() string {
	if x != nil && x.ReferrerAgentId != nil {
		return *x.ReferrerAgentId
	}
	return ""
}

type LogAccountReferreds struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ctx                 *common.Context       `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	LogAccountReferreds []*LogAccountReferred `protobuf:"bytes,2,rep,name=log_account_referreds,json=logAccountReferreds" json:"log_account_referreds,omitempty"`
}

func (x *LogAccountReferreds) Reset() {
	*x = LogAccountReferreds{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogAccountReferreds) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogAccountReferreds) ProtoMessage() {}

func (x *LogAccountReferreds) ProtoReflect() protoreflect.Message {
	mi := &file_payment_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogAccountReferreds.ProtoReflect.Descriptor instead.
func (*LogAccountReferreds) Descriptor() ([]byte, []int) {
	return file_payment_proto_rawDescGZIP(), []int{32}
}

func (x *LogAccountReferreds) GetCtx() *common.Context {
	if x != nil {
		return x.Ctx
	}
	return nil
}

func (x *LogAccountReferreds) GetLogAccountReferreds() []*LogAccountReferred {
	if x != nil {
		return x.LogAccountReferreds
	}
	return nil
}

type LogBillByAccountReferred struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReferrerId        *string  `protobuf:"bytes,1,opt,name=referrer_id,json=referrerId" json:"referrer_id,omitempty"`
	AccountId         *string  `protobuf:"bytes,2,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	CommissionRate    *float32 `protobuf:"fixed32,3,opt,name=commission_rate,json=commissionRate" json:"commission_rate,omitempty"`
	Amount            *float32 `protobuf:"fixed32,4,opt,name=amount" json:"amount,omitempty"`
	Created           *int64   `protobuf:"varint,5,opt,name=created" json:"created,omitempty"`
	BillId            *string  `protobuf:"bytes,6,opt,name=bill_id,json=billId" json:"bill_id,omitempty"`
	Year              *int32   `protobuf:"varint,7,opt,name=year" json:"year,omitempty"`
	ReferrerAccountId *string  `protobuf:"bytes,8,opt,name=referrer_account_id,json=referrerAccountId" json:"referrer_account_id,omitempty"`
	ReferrerAgentId   *string  `protobuf:"bytes,9,opt,name=referrer_agent_id,json=referrerAgentId" json:"referrer_agent_id,omitempty"`
}

func (x *LogBillByAccountReferred) Reset() {
	*x = LogBillByAccountReferred{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogBillByAccountReferred) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogBillByAccountReferred) ProtoMessage() {}

func (x *LogBillByAccountReferred) ProtoReflect() protoreflect.Message {
	mi := &file_payment_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogBillByAccountReferred.ProtoReflect.Descriptor instead.
func (*LogBillByAccountReferred) Descriptor() ([]byte, []int) {
	return file_payment_proto_rawDescGZIP(), []int{33}
}

func (x *LogBillByAccountReferred) GetReferrerId() string {
	if x != nil && x.ReferrerId != nil {
		return *x.ReferrerId
	}
	return ""
}

func (x *LogBillByAccountReferred) GetAccountId() string {
	if x != nil && x.AccountId != nil {
		return *x.AccountId
	}
	return ""
}

func (x *LogBillByAccountReferred) GetCommissionRate() float32 {
	if x != nil && x.CommissionRate != nil {
		return *x.CommissionRate
	}
	return 0
}

func (x *LogBillByAccountReferred) GetAmount() float32 {
	if x != nil && x.Amount != nil {
		return *x.Amount
	}
	return 0
}

func (x *LogBillByAccountReferred) GetCreated() int64 {
	if x != nil && x.Created != nil {
		return *x.Created
	}
	return 0
}

func (x *LogBillByAccountReferred) GetBillId() string {
	if x != nil && x.BillId != nil {
		return *x.BillId
	}
	return ""
}

func (x *LogBillByAccountReferred) GetYear() int32 {
	if x != nil && x.Year != nil {
		return *x.Year
	}
	return 0
}

func (x *LogBillByAccountReferred) GetReferrerAccountId() string {
	if x != nil && x.ReferrerAccountId != nil {
		return *x.ReferrerAccountId
	}
	return ""
}

func (x *LogBillByAccountReferred) GetReferrerAgentId() string {
	if x != nil && x.ReferrerAgentId != nil {
		return *x.ReferrerAgentId
	}
	return ""
}

type LogBillByAccountReferreds struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ctx                       *common.Context             `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	LogBillByAccountReferreds []*LogBillByAccountReferred `protobuf:"bytes,2,rep,name=log_bill_by_account_referreds,json=logBillByAccountReferreds" json:"log_bill_by_account_referreds,omitempty"`
}

func (x *LogBillByAccountReferreds) Reset() {
	*x = LogBillByAccountReferreds{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogBillByAccountReferreds) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogBillByAccountReferreds) ProtoMessage() {}

func (x *LogBillByAccountReferreds) ProtoReflect() protoreflect.Message {
	mi := &file_payment_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogBillByAccountReferreds.ProtoReflect.Descriptor instead.
func (*LogBillByAccountReferreds) Descriptor() ([]byte, []int) {
	return file_payment_proto_rawDescGZIP(), []int{34}
}

func (x *LogBillByAccountReferreds) GetCtx() *common.Context {
	if x != nil {
		return x.Ctx
	}
	return nil
}

func (x *LogBillByAccountReferreds) GetLogBillByAccountReferreds() []*LogBillByAccountReferred {
	if x != nil {
		return x.LogBillByAccountReferreds
	}
	return nil
}

type LogPaidForAgentReferrer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ctx               *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	ReferrerId        *string         `protobuf:"bytes,2,opt,name=referrer_id,json=referrerId" json:"referrer_id,omitempty"`
	Amount            *float32        `protobuf:"fixed32,3,opt,name=amount" json:"amount,omitempty"`
	Created           *int64          `protobuf:"varint,5,opt,name=created" json:"created,omitempty"`
	ReferrerAccountId *string         `protobuf:"bytes,6,opt,name=referrer_account_id,json=referrerAccountId" json:"referrer_account_id,omitempty"`
	ReferrerAgentId   *string         `protobuf:"bytes,7,opt,name=referrer_agent_id,json=referrerAgentId" json:"referrer_agent_id,omitempty"`
	TransactionId     *string         `protobuf:"bytes,8,opt,name=transaction_id,json=transactionId" json:"transaction_id,omitempty"`
}

func (x *LogPaidForAgentReferrer) Reset() {
	*x = LogPaidForAgentReferrer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogPaidForAgentReferrer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogPaidForAgentReferrer) ProtoMessage() {}

func (x *LogPaidForAgentReferrer) ProtoReflect() protoreflect.Message {
	mi := &file_payment_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogPaidForAgentReferrer.ProtoReflect.Descriptor instead.
func (*LogPaidForAgentReferrer) Descriptor() ([]byte, []int) {
	return file_payment_proto_rawDescGZIP(), []int{35}
}

func (x *LogPaidForAgentReferrer) GetCtx() *common.Context {
	if x != nil {
		return x.Ctx
	}
	return nil
}

func (x *LogPaidForAgentReferrer) GetReferrerId() string {
	if x != nil && x.ReferrerId != nil {
		return *x.ReferrerId
	}
	return ""
}

func (x *LogPaidForAgentReferrer) GetAmount() float32 {
	if x != nil && x.Amount != nil {
		return *x.Amount
	}
	return 0
}

func (x *LogPaidForAgentReferrer) GetCreated() int64 {
	if x != nil && x.Created != nil {
		return *x.Created
	}
	return 0
}

func (x *LogPaidForAgentReferrer) GetReferrerAccountId() string {
	if x != nil && x.ReferrerAccountId != nil {
		return *x.ReferrerAccountId
	}
	return ""
}

func (x *LogPaidForAgentReferrer) GetReferrerAgentId() string {
	if x != nil && x.ReferrerAgentId != nil {
		return *x.ReferrerAgentId
	}
	return ""
}

func (x *LogPaidForAgentReferrer) GetTransactionId() string {
	if x != nil && x.TransactionId != nil {
		return *x.TransactionId
	}
	return ""
}

type LogPaidForAgentReferrers struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ctx                      *common.Context            `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	LogPaidForAgentReferrers []*LogPaidForAgentReferrer `protobuf:"bytes,2,rep,name=log_paid_for_agent_referrers,json=logPaidForAgentReferrers" json:"log_paid_for_agent_referrers,omitempty"`
}

func (x *LogPaidForAgentReferrers) Reset() {
	*x = LogPaidForAgentReferrers{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogPaidForAgentReferrers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogPaidForAgentReferrers) ProtoMessage() {}

func (x *LogPaidForAgentReferrers) ProtoReflect() protoreflect.Message {
	mi := &file_payment_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogPaidForAgentReferrers.ProtoReflect.Descriptor instead.
func (*LogPaidForAgentReferrers) Descriptor() ([]byte, []int) {
	return file_payment_proto_rawDescGZIP(), []int{36}
}

func (x *LogPaidForAgentReferrers) GetCtx() *common.Context {
	if x != nil {
		return x.Ctx
	}
	return nil
}

func (x *LogPaidForAgentReferrers) GetLogPaidForAgentReferrers() []*LogPaidForAgentReferrer {
	if x != nil {
		return x.LogPaidForAgentReferrers
	}
	return nil
}

type ListLogsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ctx       *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	AccountId *string         `protobuf:"bytes,2,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	Limit     *int32          `protobuf:"varint,3,opt,name=limit" json:"limit,omitempty"`
	Anchor    *string         `protobuf:"bytes,4,opt,name=anchor" json:"anchor,omitempty"`
}

func (x *ListLogsRequest) Reset() {
	*x = ListLogsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListLogsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListLogsRequest) ProtoMessage() {}

func (x *ListLogsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_payment_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListLogsRequest.ProtoReflect.Descriptor instead.
func (*ListLogsRequest) Descriptor() ([]byte, []int) {
	return file_payment_proto_rawDescGZIP(), []int{37}
}

func (x *ListLogsRequest) GetCtx() *common.Context {
	if x != nil {
		return x.Ctx
	}
	return nil
}

func (x *ListLogsRequest) GetAccountId() string {
	if x != nil && x.AccountId != nil {
		return *x.AccountId
	}
	return ""
}

func (x *ListLogsRequest) GetLimit() int32 {
	if x != nil && x.Limit != nil {
		return *x.Limit
	}
	return 0
}

func (x *ListLogsRequest) GetAnchor() string {
	if x != nil && x.Anchor != nil {
		return *x.Anchor
	}
	return ""
}

type Logs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ctx    *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	Logs   []*Log          `protobuf:"bytes,5,rep,name=logs" json:"logs,omitempty"`
	Anchor *string         `protobuf:"bytes,4,opt,name=anchor" json:"anchor,omitempty"`
}

func (x *Logs) Reset() {
	*x = Logs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Logs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Logs) ProtoMessage() {}

func (x *Logs) ProtoReflect() protoreflect.Message {
	mi := &file_payment_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Logs.ProtoReflect.Descriptor instead.
func (*Logs) Descriptor() ([]byte, []int) {
	return file_payment_proto_rawDescGZIP(), []int{38}
}

func (x *Logs) GetCtx() *common.Context {
	if x != nil {
		return x.Ctx
	}
	return nil
}

func (x *Logs) GetLogs() []*Log {
	if x != nil {
		return x.Logs
	}
	return nil
}

func (x *Logs) GetAnchor() string {
	if x != nil && x.Anchor != nil {
		return *x.Anchor
	}
	return ""
}

type Log struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ctx         *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	User        *string         `protobuf:"bytes,2,opt,name=user" json:"user,omitempty"`
	Id          *string         `protobuf:"bytes,8,opt,name=id" json:"id,omitempty"`
	Action      *string         `protobuf:"bytes,3,opt,name=action" json:"action,omitempty"`
	Created     *int64          `protobuf:"varint,4,opt,name=created" json:"created,omitempty"`
	Description *string         `protobuf:"bytes,5,opt,name=description" json:"description,omitempty"`
	AccountId   *string         `protobuf:"bytes,6,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	Month       *int32          `protobuf:"varint,7,opt,name=month" json:"month,omitempty"`
}

func (x *Log) Reset() {
	*x = Log{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Log) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Log) ProtoMessage() {}

func (x *Log) ProtoReflect() protoreflect.Message {
	mi := &file_payment_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Log.ProtoReflect.Descriptor instead.
func (*Log) Descriptor() ([]byte, []int) {
	return file_payment_proto_rawDescGZIP(), []int{39}
}

func (x *Log) GetCtx() *common.Context {
	if x != nil {
		return x.Ctx
	}
	return nil
}

func (x *Log) GetUser() string {
	if x != nil && x.User != nil {
		return *x.User
	}
	return ""
}

func (x *Log) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *Log) GetAction() string {
	if x != nil && x.Action != nil {
		return *x.Action
	}
	return ""
}

func (x *Log) GetCreated() int64 {
	if x != nil && x.Created != nil {
		return *x.Created
	}
	return 0
}

func (x *Log) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *Log) GetAccountId() string {
	if x != nil && x.AccountId != nil {
		return *x.AccountId
	}
	return ""
}

func (x *Log) GetMonth() int32 {
	if x != nil && x.Month != nil {
		return *x.Month
	}
	return 0
}

type SearchInvoiceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ctx    *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	Query  *string         `protobuf:"bytes,4,opt,name=query" json:"query,omitempty"`
	Anchor *string         `protobuf:"bytes,5,opt,name=anchor" json:"anchor,omitempty"`
	State  *string         `protobuf:"bytes,6,opt,name=state" json:"state,omitempty"`
	Limit  *int32          `protobuf:"varint,7,opt,name=limit" json:"limit,omitempty"`
}

func (x *SearchInvoiceRequest) Reset() {
	*x = SearchInvoiceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchInvoiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchInvoiceRequest) ProtoMessage() {}

func (x *SearchInvoiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_payment_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchInvoiceRequest.ProtoReflect.Descriptor instead.
func (*SearchInvoiceRequest) Descriptor() ([]byte, []int) {
	return file_payment_proto_rawDescGZIP(), []int{40}
}

func (x *SearchInvoiceRequest) GetCtx() *common.Context {
	if x != nil {
		return x.Ctx
	}
	return nil
}

func (x *SearchInvoiceRequest) GetQuery() string {
	if x != nil && x.Query != nil {
		return *x.Query
	}
	return ""
}

func (x *SearchInvoiceRequest) GetAnchor() string {
	if x != nil && x.Anchor != nil {
		return *x.Anchor
	}
	return ""
}

func (x *SearchInvoiceRequest) GetState() string {
	if x != nil && x.State != nil {
		return *x.State
	}
	return ""
}

func (x *SearchInvoiceRequest) GetLimit() int32 {
	if x != nil && x.Limit != nil {
		return *x.Limit
	}
	return 0
}

type DiffSubRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ctx *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	Dst *Subscription   `protobuf:"bytes,2,opt,name=dst" json:"dst,omitempty"`
	Src *Subscription   `protobuf:"bytes,3,opt,name=src" json:"src,omitempty"`
}

func (x *DiffSubRequest) Reset() {
	*x = DiffSubRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DiffSubRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiffSubRequest) ProtoMessage() {}

func (x *DiffSubRequest) ProtoReflect() protoreflect.Message {
	mi := &file_payment_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiffSubRequest.ProtoReflect.Descriptor instead.
func (*DiffSubRequest) Descriptor() ([]byte, []int) {
	return file_payment_proto_rawDescGZIP(), []int{41}
}

func (x *DiffSubRequest) GetCtx() *common.Context {
	if x != nil {
		return x.Ctx
	}
	return nil
}

func (x *DiffSubRequest) GetDst() *Subscription {
	if x != nil {
		return x.Dst
	}
	return nil
}

func (x *DiffSubRequest) GetSrc() *Subscription {
	if x != nil {
		return x.Src
	}
	return nil
}

type LogAccountReferredByTime struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time              *string `protobuf:"bytes,1,opt,name=time" json:"time,omitempty"`
	ReferrerAccountId *string `protobuf:"bytes,2,opt,name=referrer_account_id,json=referrerAccountId" json:"referrer_account_id,omitempty"`
	ReferrerAgentId   *string `protobuf:"bytes,3,opt,name=referrer_agent_id,json=referrerAgentId" json:"referrer_agent_id,omitempty"`
	AccountId         *string `protobuf:"bytes,4,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	Created           *int64  `protobuf:"varint,5,opt,name=created" json:"created,omitempty"`
}

func (x *LogAccountReferredByTime) Reset() {
	*x = LogAccountReferredByTime{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogAccountReferredByTime) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogAccountReferredByTime) ProtoMessage() {}

func (x *LogAccountReferredByTime) ProtoReflect() protoreflect.Message {
	mi := &file_payment_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogAccountReferredByTime.ProtoReflect.Descriptor instead.
func (*LogAccountReferredByTime) Descriptor() ([]byte, []int) {
	return file_payment_proto_rawDescGZIP(), []int{42}
}

func (x *LogAccountReferredByTime) GetTime() string {
	if x != nil && x.Time != nil {
		return *x.Time
	}
	return ""
}

func (x *LogAccountReferredByTime) GetReferrerAccountId() string {
	if x != nil && x.ReferrerAccountId != nil {
		return *x.ReferrerAccountId
	}
	return ""
}

func (x *LogAccountReferredByTime) GetReferrerAgentId() string {
	if x != nil && x.ReferrerAgentId != nil {
		return *x.ReferrerAgentId
	}
	return ""
}

func (x *LogAccountReferredByTime) GetAccountId() string {
	if x != nil && x.AccountId != nil {
		return *x.AccountId
	}
	return ""
}

func (x *LogAccountReferredByTime) GetCreated() int64 {
	if x != nil && x.Created != nil {
		return *x.Created
	}
	return 0
}

type NumberOfReferByAgent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AgentId             *string  `protobuf:"bytes,1,opt,name=agent_id,json=agentId" json:"agent_id,omitempty"`
	AccountId           *string  `protobuf:"bytes,2,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	Earning             *float32 `protobuf:"fixed32,3,opt,name=earning" json:"earning,omitempty"`
	NumberOfRefer       *int32   `protobuf:"varint,4,opt,name=number_of_refer,json=numberOfRefer" json:"number_of_refer,omitempty"`
	NumberOfRecentRefer *int32   `protobuf:"varint,5,opt,name=number_of_recent_refer,json=numberOfRecentRefer" json:"number_of_recent_refer,omitempty"`
	ReferrerId          *string  `protobuf:"bytes,6,opt,name=referrer_id,json=referrerId" json:"referrer_id,omitempty"`
	Status              *string  `protobuf:"bytes,7,opt,name=status" json:"status,omitempty"`
}

func (x *NumberOfReferByAgent) Reset() {
	*x = NumberOfReferByAgent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NumberOfReferByAgent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NumberOfReferByAgent) ProtoMessage() {}

func (x *NumberOfReferByAgent) ProtoReflect() protoreflect.Message {
	mi := &file_payment_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NumberOfReferByAgent.ProtoReflect.Descriptor instead.
func (*NumberOfReferByAgent) Descriptor() ([]byte, []int) {
	return file_payment_proto_rawDescGZIP(), []int{43}
}

func (x *NumberOfReferByAgent) GetAgentId() string {
	if x != nil && x.AgentId != nil {
		return *x.AgentId
	}
	return ""
}

func (x *NumberOfReferByAgent) GetAccountId() string {
	if x != nil && x.AccountId != nil {
		return *x.AccountId
	}
	return ""
}

func (x *NumberOfReferByAgent) GetEarning() float32 {
	if x != nil && x.Earning != nil {
		return *x.Earning
	}
	return 0
}

func (x *NumberOfReferByAgent) GetNumberOfRefer() int32 {
	if x != nil && x.NumberOfRefer != nil {
		return *x.NumberOfRefer
	}
	return 0
}

func (x *NumberOfReferByAgent) GetNumberOfRecentRefer() int32 {
	if x != nil && x.NumberOfRecentRefer != nil {
		return *x.NumberOfRecentRefer
	}
	return 0
}

func (x *NumberOfReferByAgent) GetReferrerId() string {
	if x != nil && x.ReferrerId != nil {
		return *x.ReferrerId
	}
	return ""
}

func (x *NumberOfReferByAgent) GetStatus() string {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return ""
}

type ReferralResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ctx          *common.Context         `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	TopReferrals []*NumberOfReferByAgent `protobuf:"bytes,2,rep,name=top_referrals,json=topReferrals" json:"top_referrals,omitempty"`
}

func (x *ReferralResponse) Reset() {
	*x = ReferralResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReferralResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReferralResponse) ProtoMessage() {}

func (x *ReferralResponse) ProtoReflect() protoreflect.Message {
	mi := &file_payment_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReferralResponse.ProtoReflect.Descriptor instead.
func (*ReferralResponse) Descriptor() ([]byte, []int) {
	return file_payment_proto_rawDescGZIP(), []int{44}
}

func (x *ReferralResponse) GetCtx() *common.Context {
	if x != nil {
		return x.Ctx
	}
	return nil
}

func (x *ReferralResponse) GetTopReferrals() []*NumberOfReferByAgent {
	if x != nil {
		return x.TopReferrals
	}
	return nil
}

type SearchReferredRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ctx       *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	AccountId *string         `protobuf:"bytes,2,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	AgentId   *string         `protobuf:"bytes,3,opt,name=agent_id,json=agentId" json:"agent_id,omitempty"`
}

func (x *SearchReferredRequest) Reset() {
	*x = SearchReferredRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchReferredRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchReferredRequest) ProtoMessage() {}

func (x *SearchReferredRequest) ProtoReflect() protoreflect.Message {
	mi := &file_payment_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchReferredRequest.ProtoReflect.Descriptor instead.
func (*SearchReferredRequest) Descriptor() ([]byte, []int) {
	return file_payment_proto_rawDescGZIP(), []int{45}
}

func (x *SearchReferredRequest) GetCtx() *common.Context {
	if x != nil {
		return x.Ctx
	}
	return nil
}

func (x *SearchReferredRequest) GetAccountId() string {
	if x != nil && x.AccountId != nil {
		return *x.AccountId
	}
	return ""
}

func (x *SearchReferredRequest) GetAgentId() string {
	if x != nil && x.AgentId != nil {
		return *x.AgentId
	}
	return ""
}

type PromotionCodes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ctx            *common.Context  `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	PromotionCodes []*PromotionCode `protobuf:"bytes,2,rep,name=promotion_codes,json=promotionCodes" json:"promotion_codes,omitempty"`
	Anchor         *string          `protobuf:"bytes,3,opt,name=anchor" json:"anchor,omitempty"`
	Total          *int64           `protobuf:"varint,4,opt,name=total" json:"total,omitempty"`
}

func (x *PromotionCodes) Reset() {
	*x = PromotionCodes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PromotionCodes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PromotionCodes) ProtoMessage() {}

func (x *PromotionCodes) ProtoReflect() protoreflect.Message {
	mi := &file_payment_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PromotionCodes.ProtoReflect.Descriptor instead.
func (*PromotionCodes) Descriptor() ([]byte, []int) {
	return file_payment_proto_rawDescGZIP(), []int{46}
}

func (x *PromotionCodes) GetCtx() *common.Context {
	if x != nil {
		return x.Ctx
	}
	return nil
}

func (x *PromotionCodes) GetPromotionCodes() []*PromotionCode {
	if x != nil {
		return x.PromotionCodes
	}
	return nil
}

func (x *PromotionCodes) GetAnchor() string {
	if x != nil && x.Anchor != nil {
		return *x.Anchor
	}
	return ""
}

func (x *PromotionCodes) GetTotal() int64 {
	if x != nil && x.Total != nil {
		return *x.Total
	}
	return 0
}

type PromotionCodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ctx       *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	Code      *string         `protobuf:"bytes,2,opt,name=code" json:"code,omitempty"`
	AccountId *string         `protobuf:"bytes,3,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
}

func (x *PromotionCodeRequest) Reset() {
	*x = PromotionCodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PromotionCodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PromotionCodeRequest) ProtoMessage() {}

func (x *PromotionCodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_payment_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PromotionCodeRequest.ProtoReflect.Descriptor instead.
func (*PromotionCodeRequest) Descriptor() ([]byte, []int) {
	return file_payment_proto_rawDescGZIP(), []int{47}
}

func (x *PromotionCodeRequest) GetCtx() *common.Context {
	if x != nil {
		return x.Ctx
	}
	return nil
}

func (x *PromotionCodeRequest) GetCode() string {
	if x != nil && x.Code != nil {
		return *x.Code
	}
	return ""
}

func (x *PromotionCodeRequest) GetAccountId() string {
	if x != nil && x.AccountId != nil {
		return *x.AccountId
	}
	return ""
}

type ListPromotionCodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ctx    *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	Anchor *string         `protobuf:"bytes,2,opt,name=anchor" json:"anchor,omitempty"`
	Limit  *int32          `protobuf:"varint,4,opt,name=limit" json:"limit,omitempty"`
}

func (x *ListPromotionCodeRequest) Reset() {
	*x = ListPromotionCodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPromotionCodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPromotionCodeRequest) ProtoMessage() {}

func (x *ListPromotionCodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_payment_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPromotionCodeRequest.ProtoReflect.Descriptor instead.
func (*ListPromotionCodeRequest) Descriptor() ([]byte, []int) {
	return file_payment_proto_rawDescGZIP(), []int{48}
}

func (x *ListPromotionCodeRequest) GetCtx() *common.Context {
	if x != nil {
		return x.Ctx
	}
	return nil
}

func (x *ListPromotionCodeRequest) GetAnchor() string {
	if x != nil && x.Anchor != nil {
		return *x.Anchor
	}
	return ""
}

func (x *ListPromotionCodeRequest) GetLimit() int32 {
	if x != nil && x.Limit != nil {
		return *x.Limit
	}
	return 0
}

type String struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ctx *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	Str *string         `protobuf:"bytes,2,opt,name=str" json:"str,omitempty"`
}

func (x *String) Reset() {
	*x = String{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *String) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*String) ProtoMessage() {}

func (x *String) ProtoReflect() protoreflect.Message {
	mi := &file_payment_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use String.ProtoReflect.Descriptor instead.
func (*String) Descriptor() ([]byte, []int) {
	return file_payment_proto_rawDescGZIP(), []int{49}
}

func (x *String) GetCtx() *common.Context {
	if x != nil {
		return x.Ctx
	}
	return nil
}

func (x *String) GetStr() string {
	if x != nil && x.Str != nil {
		return *x.Str
	}
	return ""
}

type PayRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ctx          *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	AccountId    *string         `protobuf:"bytes,8,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	InvoiceIds   []string        `protobuf:"bytes,6,rep,name=invoice_ids,json=invoiceIds" json:"invoice_ids,omitempty"`
	Description  *string         `protobuf:"bytes,7,opt,name=description" json:"description,omitempty"`
	CustomerInfo *Contact        `protobuf:"bytes,9,opt,name=CustomerInfo" json:"CustomerInfo,omitempty"`
	Amount       *float32        `protobuf:"fixed32,10,opt,name=amount" json:"amount,omitempty"`
}

func (x *PayRequest) Reset() {
	*x = PayRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayRequest) ProtoMessage() {}

func (x *PayRequest) ProtoReflect() protoreflect.Message {
	mi := &file_payment_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayRequest.ProtoReflect.Descriptor instead.
func (*PayRequest) Descriptor() ([]byte, []int) {
	return file_payment_proto_rawDescGZIP(), []int{50}
}

func (x *PayRequest) GetCtx() *common.Context {
	if x != nil {
		return x.Ctx
	}
	return nil
}

func (x *PayRequest) GetAccountId() string {
	if x != nil && x.AccountId != nil {
		return *x.AccountId
	}
	return ""
}

func (x *PayRequest) GetInvoiceIds() []string {
	if x != nil {
		return x.InvoiceIds
	}
	return nil
}

func (x *PayRequest) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *PayRequest) GetCustomerInfo() *Contact {
	if x != nil {
		return x.CustomerInfo
	}
	return nil
}

func (x *PayRequest) GetAmount() float32 {
	if x != nil && x.Amount != nil {
		return *x.Amount
	}
	return 0
}

type InvoiceCreatedEmail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ctx            *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	AccountId      *string         `protobuf:"bytes,3,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	InvoiceId      *string         `protobuf:"bytes,5,opt,name=invoice_id,json=invoiceId" json:"invoice_id,omitempty"`
	Created        *int64          `protobuf:"varint,6,opt,name=created" json:"created,omitempty"`
	InvoiceCreated *string         `protobuf:"bytes,8,opt,name=invoice_created,json=invoiceCreated" json:"invoice_created,omitempty"`
	InvoiceLink    *string         `protobuf:"bytes,9,opt,name=invoice_link,json=invoiceLink" json:"invoice_link,omitempty"`
}

func (x *InvoiceCreatedEmail) Reset() {
	*x = InvoiceCreatedEmail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvoiceCreatedEmail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvoiceCreatedEmail) ProtoMessage() {}

func (x *InvoiceCreatedEmail) ProtoReflect() protoreflect.Message {
	mi := &file_payment_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvoiceCreatedEmail.ProtoReflect.Descriptor instead.
func (*InvoiceCreatedEmail) Descriptor() ([]byte, []int) {
	return file_payment_proto_rawDescGZIP(), []int{51}
}

func (x *InvoiceCreatedEmail) GetCtx() *common.Context {
	if x != nil {
		return x.Ctx
	}
	return nil
}

func (x *InvoiceCreatedEmail) GetAccountId() string {
	if x != nil && x.AccountId != nil {
		return *x.AccountId
	}
	return ""
}

func (x *InvoiceCreatedEmail) GetInvoiceId() string {
	if x != nil && x.InvoiceId != nil {
		return *x.InvoiceId
	}
	return ""
}

func (x *InvoiceCreatedEmail) GetCreated() int64 {
	if x != nil && x.Created != nil {
		return *x.Created
	}
	return 0
}

func (x *InvoiceCreatedEmail) GetInvoiceCreated() string {
	if x != nil && x.InvoiceCreated != nil {
		return *x.InvoiceCreated
	}
	return ""
}

func (x *InvoiceCreatedEmail) GetInvoiceLink() string {
	if x != nil && x.InvoiceLink != nil {
		return *x.InvoiceLink
	}
	return ""
}

type TrialEndingEmail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ctx       *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	AccountId *string         `protobuf:"bytes,2,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	Ended     *int64          `protobuf:"varint,3,opt,name=ended" json:"ended,omitempty"`
	Created   *int64          `protobuf:"varint,6,opt,name=created" json:"created,omitempty"`
}

func (x *TrialEndingEmail) Reset() {
	*x = TrialEndingEmail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrialEndingEmail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrialEndingEmail) ProtoMessage() {}

func (x *TrialEndingEmail) ProtoReflect() protoreflect.Message {
	mi := &file_payment_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrialEndingEmail.ProtoReflect.Descriptor instead.
func (*TrialEndingEmail) Descriptor() ([]byte, []int) {
	return file_payment_proto_rawDescGZIP(), []int{52}
}

func (x *TrialEndingEmail) GetCtx() *common.Context {
	if x != nil {
		return x.Ctx
	}
	return nil
}

func (x *TrialEndingEmail) GetAccountId() string {
	if x != nil && x.AccountId != nil {
		return *x.AccountId
	}
	return ""
}

func (x *TrialEndingEmail) GetEnded() int64 {
	if x != nil && x.Ended != nil {
		return *x.Ended
	}
	return 0
}

func (x *TrialEndingEmail) GetCreated() int64 {
	if x != nil && x.Created != nil {
		return *x.Created
	}
	return 0
}

type UpdatePlanEmail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ctx       *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	AccountId *string         `protobuf:"bytes,2,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	OldPlan   *string         `protobuf:"bytes,4,opt,name=old_plan,json=oldPlan" json:"old_plan,omitempty"`
	NewPlan   *string         `protobuf:"bytes,5,opt,name=new_plan,json=newPlan" json:"new_plan,omitempty"`
	Created   *int64          `protobuf:"varint,6,opt,name=created" json:"created,omitempty"`
}

func (x *UpdatePlanEmail) Reset() {
	*x = UpdatePlanEmail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePlanEmail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePlanEmail) ProtoMessage() {}

func (x *UpdatePlanEmail) ProtoReflect() protoreflect.Message {
	mi := &file_payment_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePlanEmail.ProtoReflect.Descriptor instead.
func (*UpdatePlanEmail) Descriptor() ([]byte, []int) {
	return file_payment_proto_rawDescGZIP(), []int{53}
}

func (x *UpdatePlanEmail) GetCtx() *common.Context {
	if x != nil {
		return x.Ctx
	}
	return nil
}

func (x *UpdatePlanEmail) GetAccountId() string {
	if x != nil && x.AccountId != nil {
		return *x.AccountId
	}
	return ""
}

func (x *UpdatePlanEmail) GetOldPlan() string {
	if x != nil && x.OldPlan != nil {
		return *x.OldPlan
	}
	return ""
}

func (x *UpdatePlanEmail) GetNewPlan() string {
	if x != nil && x.NewPlan != nil {
		return *x.NewPlan
	}
	return ""
}

func (x *UpdatePlanEmail) GetCreated() int64 {
	if x != nil && x.Created != nil {
		return *x.Created
	}
	return 0
}

type PaidInvoiceEmail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ctx            *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	AccountId      *string         `protobuf:"bytes,3,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	InvoiceId      *string         `protobuf:"bytes,5,opt,name=invoice_id,json=invoiceId" json:"invoice_id,omitempty"`
	Created        *int64          `protobuf:"varint,6,opt,name=created" json:"created,omitempty"`
	InvoiceCreated *string         `protobuf:"bytes,8,opt,name=invoice_created,json=invoiceCreated" json:"invoice_created,omitempty"`
	InvoiceLink    *string         `protobuf:"bytes,9,opt,name=invoice_link,json=invoiceLink" json:"invoice_link,omitempty"`
}

func (x *PaidInvoiceEmail) Reset() {
	*x = PaidInvoiceEmail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaidInvoiceEmail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaidInvoiceEmail) ProtoMessage() {}

func (x *PaidInvoiceEmail) ProtoReflect() protoreflect.Message {
	mi := &file_payment_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaidInvoiceEmail.ProtoReflect.Descriptor instead.
func (*PaidInvoiceEmail) Descriptor() ([]byte, []int) {
	return file_payment_proto_rawDescGZIP(), []int{54}
}

func (x *PaidInvoiceEmail) GetCtx() *common.Context {
	if x != nil {
		return x.Ctx
	}
	return nil
}

func (x *PaidInvoiceEmail) GetAccountId() string {
	if x != nil && x.AccountId != nil {
		return *x.AccountId
	}
	return ""
}

func (x *PaidInvoiceEmail) GetInvoiceId() string {
	if x != nil && x.InvoiceId != nil {
		return *x.InvoiceId
	}
	return ""
}

func (x *PaidInvoiceEmail) GetCreated() int64 {
	if x != nil && x.Created != nil {
		return *x.Created
	}
	return 0
}

func (x *PaidInvoiceEmail) GetInvoiceCreated() string {
	if x != nil && x.InvoiceCreated != nil {
		return *x.InvoiceCreated
	}
	return ""
}

func (x *PaidInvoiceEmail) GetInvoiceLink() string {
	if x != nil && x.InvoiceLink != nil {
		return *x.InvoiceLink
	}
	return ""
}

type InvoiceItem_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Renew *RenewInvoiceItem `protobuf:"bytes,2,opt,name=renew" json:"renew,omitempty"`
	Agent *AgentInvoiceItem `protobuf:"bytes,3,opt,name=agent" json:"agent,omitempty"`
	Plan  *PlanInvoiceItem  `protobuf:"bytes,5,opt,name=plan" json:"plan,omitempty"`
}

func (x *InvoiceItem_Data) Reset() {
	*x = InvoiceItem_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvoiceItem_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvoiceItem_Data) ProtoMessage() {}

func (x *InvoiceItem_Data) ProtoReflect() protoreflect.Message {
	mi := &file_payment_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvoiceItem_Data.ProtoReflect.Descriptor instead.
func (*InvoiceItem_Data) Descriptor() ([]byte, []int) {
	return file_payment_proto_rawDescGZIP(), []int{18, 0}
}

func (x *InvoiceItem_Data) GetRenew() *RenewInvoiceItem {
	if x != nil {
		return x.Renew
	}
	return nil
}

func (x *InvoiceItem_Data) GetAgent() *AgentInvoiceItem {
	if x != nil {
		return x.Agent
	}
	return nil
}

func (x *InvoiceItem_Data) GetPlan() *PlanInvoiceItem {
	if x != nil {
		return x.Plan
	}
	return nil
}

type PromotionCode_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FixedAmount *FixedAmountPromotionCode `protobuf:"bytes,1,opt,name=fixed_amount,json=fixedAmount" json:"fixed_amount,omitempty"` // TODO: Delete
	Percent     *PercentPromotionCode     `protobuf:"bytes,2,opt,name=percent" json:"percent,omitempty"`
	Credit      *CreditCode               `protobuf:"bytes,3,opt,name=credit" json:"credit,omitempty"`
	Referral    *ReferralCreditCode       `protobuf:"bytes,4,opt,name=referral" json:"referral,omitempty"`
}

func (x *PromotionCode_Data) Reset() {
	*x = PromotionCode_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PromotionCode_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PromotionCode_Data) ProtoMessage() {}

func (x *PromotionCode_Data) ProtoReflect() protoreflect.Message {
	mi := &file_payment_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PromotionCode_Data.ProtoReflect.Descriptor instead.
func (*PromotionCode_Data) Descriptor() ([]byte, []int) {
	return file_payment_proto_rawDescGZIP(), []int{26, 0}
}

func (x *PromotionCode_Data) GetFixedAmount() *FixedAmountPromotionCode {
	if x != nil {
		return x.FixedAmount
	}
	return nil
}

func (x *PromotionCode_Data) GetPercent() *PercentPromotionCode {
	if x != nil {
		return x.Percent
	}
	return nil
}

func (x *PromotionCode_Data) GetCredit() *CreditCode {
	if x != nil {
		return x.Credit
	}
	return nil
}

func (x *PromotionCode_Data) GetReferral() *ReferralCreditCode {
	if x != nil {
		return x.Referral
	}
	return nil
}

var File_payment_proto protoreflect.FileDescriptor

var file_payment_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x07, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x1a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x72, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a,
	0x03, 0x63, 0x74, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x03, 0x63, 0x74, 0x78,
	0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12,
	0x19, 0x0a, 0x08, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x22, 0x7a, 0x0a, 0x08, 0x43, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x21, 0x0a, 0x03, 0x63, 0x74, 0x78, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x78, 0x74, 0x52, 0x03, 0x63, 0x74, 0x78, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x08, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x08, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0xb5, 0x02, 0x0a, 0x07, 0x43, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x21, 0x0a, 0x03, 0x63, 0x74, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74,
	0x52, 0x03, 0x63, 0x74, 0x78, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x12,
	0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2a,
	0x0a, 0x11, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x61, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x75,
	0x74, 0x68, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x22, 0x5e,
	0x0a, 0x06, 0x53, 0x74, 0x72, 0x69, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x61, 0x72, 0x64,
	0x5f, 0x6c, 0x61, 0x73, 0x74, 0x34, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x61,
	0x72, 0x64, 0x4c, 0x61, 0x73, 0x74, 0x34, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x51,
	0x0a, 0x0e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x73,
	0x12, 0x3f, 0x0a, 0x0f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x65, 0x74, 0x68,
	0x6f, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f,
	0x64, 0x52, 0x0e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x73, 0x22, 0xdc, 0x02, 0x0a, 0x0d, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x12, 0x21, 0x0a, 0x03, 0x63, 0x74, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78,
	0x74, 0x52, 0x03, 0x63, 0x74, 0x78, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x27, 0x0a, 0x06, 0x73, 0x74, 0x72,
	0x69, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x70, 0x65, 0x52, 0x06, 0x73, 0x74, 0x72, 0x69,
	0x70, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x5f, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x66, 0x61, 0x69, 0x6c,
	0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x61,
	0x72, 0x67, 0x65, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x68, 0x61, 0x72,
	0x67, 0x65, 0x64, 0x22, 0x2a, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x11, 0x0a, 0x0d, 0x62,
	0x61, 0x6e, 0x6b, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x10, 0x00, 0x12, 0x0f,
	0x0a, 0x0b, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x10, 0x01, 0x22,
	0x1f, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x10, 0x01,
	0x22, 0x9f, 0x03, 0x0a, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x21, 0x0a, 0x03, 0x63, 0x74,
	0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x03, 0x63, 0x74, 0x78, 0x12, 0x1d, 0x0a,
	0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f,
	0x6d, 0x61, 0x78, 0x5f, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x6d, 0x61, 0x78, 0x41, 0x75, 0x74, 0x6f, 0x6d, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x61, 0x78, 0x5f, 0x73, 0x65, 0x67,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x6d, 0x61, 0x78,
	0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x61, 0x78, 0x5f,
	0x61, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x6d, 0x61,
	0x78, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x22, 0x0a, 0x0d, 0x63, 0x61, 0x6e, 0x5f, 0x62,
	0x75, 0x79, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b,
	0x63, 0x61, 0x6e, 0x42, 0x75, 0x79, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x38, 0x0a, 0x18, 0x61,
	0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f,
	0x6b, 0x5f, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x16, 0x61,
	0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b,
	0x51, 0x75, 0x6f, 0x74, 0x61, 0x12, 0x34, 0x0a, 0x16, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x14, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x12, 0x38, 0x0a, 0x18, 0x61,
	0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x5f, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x16, 0x61,
	0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x51, 0x75, 0x6f, 0x74, 0x61, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x61, 0x78, 0x5f, 0x72, 0x75, 0x6c,
	0x65, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x6d, 0x61, 0x78, 0x52, 0x75, 0x6c,
	0x65, 0x73, 0x22, 0x2c, 0x0a, 0x05, 0x50, 0x6c, 0x61, 0x6e, 0x73, 0x12, 0x23, 0x0a, 0x05, 0x70,
	0x6c, 0x61, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x05, 0x70, 0x6c, 0x61, 0x6e, 0x73,
	0x22, 0x8f, 0x01, 0x0a, 0x04, 0x50, 0x6c, 0x61, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a,
	0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x52, 0x05, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x22, 0x37, 0x0a, 0x04, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x09, 0x0a, 0x05, 0x74, 0x72, 0x69, 0x61, 0x6c, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04,
	0x66, 0x72, 0x65, 0x65, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61,
	0x72, 0x64, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x61, 0x64, 0x76, 0x61, 0x6e, 0x63, 0x65, 0x64,
	0x10, 0x03, 0x22, 0xb0, 0x05, 0x0a, 0x0c, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x03, 0x63, 0x74, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78,
	0x74, 0x52, 0x03, 0x63, 0x74, 0x78, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12,
	0x25, 0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69,
	0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x65, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x75, 0x74, 0x6f, 0x5f, 0x72, 0x65, 0x6e,
	0x65, 0x77, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x61, 0x75, 0x74, 0x6f, 0x52, 0x65,
	0x6e, 0x65, 0x77, 0x12, 0x2e, 0x0a, 0x13, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x63,
	0x79, 0x63, 0x6c, 0x65, 0x5f, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x11, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x43, 0x79, 0x63, 0x6c, 0x65, 0x4d, 0x6f,
	0x6e, 0x74, 0x68, 0x12, 0x37, 0x0a, 0x18, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x62, 0x69, 0x6c, 0x6c,
	0x69, 0x6e, 0x67, 0x5f, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x5f, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x15, 0x6e, 0x65, 0x78, 0x74, 0x42, 0x69, 0x6c, 0x6c, 0x69,
	0x6e, 0x67, 0x43, 0x79, 0x63, 0x6c, 0x65, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x6c, 0x61, 0x6e, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6c, 0x61, 0x6e,
	0x12, 0x16, 0x0a, 0x06, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x06, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x12, 0x23, 0x0a, 0x05, 0x6e, 0x6f, 0x74, 0x65,
	0x73, 0x18, 0x1c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x2e, 0x4e, 0x6f, 0x74, 0x65, 0x52, 0x05, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x12, 0x1f, 0x0a,
	0x0b, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x61, 0x6c, 0x5f, 0x62, 0x79, 0x18, 0x1d, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x61, 0x6c, 0x42, 0x79, 0x12, 0x2d,
	0x0a, 0x08, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x52, 0x08, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x12, 0x34, 0x0a,
	0x16, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x5f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x20, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x70,
	0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x12, 0x24, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x2a, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x6d,
	0x69, 0x74, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x76, 0x33, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x2b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x33, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x75, 0x74, 0x6f, 0x5f, 0x63, 0x68, 0x61,
	0x72, 0x67, 0x65, 0x18, 0x2c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x61, 0x75, 0x74, 0x6f, 0x43,
	0x68, 0x61, 0x72, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x18, 0x2d,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x74,
	0x72, 0x75, 0x73, 0x74, 0x65, 0x64, 0x18, 0x2e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x74, 0x72,
	0x75, 0x73, 0x74, 0x65, 0x64, 0x22, 0xbf, 0x02, 0x0a, 0x04, 0x42, 0x69, 0x6c, 0x6c, 0x12, 0x21,
	0x0a, 0x03, 0x63, 0x74, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x03, 0x63, 0x74,
	0x78, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6e, 0x76, 0x6f,
	0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x69,
	0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x49, 0x64, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x12, 0x35, 0x0a, 0x0d, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x52, 0x0c, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x79, 0x65, 0x61, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x79, 0x65, 0x61, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x77, 0x0a, 0x04, 0x4e, 0x6f, 0x74, 0x65, 0x12,
	0x21, 0x0a, 0x03, 0x63, 0x74, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x03, 0x63,
	0x74, 0x78, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x22, 0x6f, 0x0a, 0x08, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x73, 0x12, 0x2c, 0x0a, 0x08,
	0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65,
	0x52, 0x08, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6e, 0x63,
	0x68, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6e, 0x63, 0x68, 0x6f,
	0x72, 0x22, 0x6e, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x03, 0x63, 0x74, 0x78, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x03, 0x63, 0x74, 0x78, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6e,
	0x63, 0x68, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6e, 0x63, 0x68,
	0x6f, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49,
	0x64, 0x22, 0x9b, 0x06, 0x0a, 0x07, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x12, 0x21, 0x0a,
	0x03, 0x63, 0x74, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x03, 0x63, 0x74, 0x78,
	0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x1d, 0x0a, 0x0a, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x64, 0x75, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x09, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x75, 0x65, 0x12, 0x25,
	0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f,
	0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x37, 0x0a, 0x0c, 0x62, 0x69, 0x6c, 0x6c, 0x69,
	0x6e, 0x67, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x19, 0x0a, 0x08, 0x64, 0x75, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x64, 0x75, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x2a, 0x0a, 0x05, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x75, 0x62, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x73, 0x75, 0x62, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x61, 0x78, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65,
	0x6e, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x74, 0x61, 0x78, 0x50, 0x65, 0x72,
	0x63, 0x65, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x78, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x03, 0x74, 0x61, 0x78, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18,
	0x11, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x18, 0x0a, 0x07,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x12, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x79, 0x65, 0x61, 0x72, 0x18, 0x13,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x79, 0x65, 0x61, 0x72, 0x12, 0x23, 0x0a, 0x05, 0x6e, 0x6f,
	0x74, 0x65, 0x73, 0x18, 0x16, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x2e, 0x4e, 0x6f, 0x74, 0x65, 0x52, 0x05, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x12,
	0x14, 0x0a, 0x05, 0x62, 0x69, 0x6c, 0x6c, 0x73, 0x18, 0x17, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05,
	0x62, 0x69, 0x6c, 0x6c, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x6d, 0x61, 0x64, 0x65, 0x18, 0x18, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x70, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x61, 0x64, 0x65, 0x12, 0x36, 0x0a, 0x0b, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x5f, 0x73, 0x75, 0x62, 0x18, 0x19, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x53, 0x75, 0x62,
	0x12, 0x30, 0x0a, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x6c, 0x61, 0x6e,
	0x18, 0x1a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x2e, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x0b, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x6c,
	0x61, 0x6e, 0x22, 0x4b, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x09, 0x0a, 0x05, 0x64,
	0x72, 0x61, 0x66, 0x74, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x6f, 0x70, 0x65, 0x6e, 0x10, 0x01,
	0x12, 0x0b, 0x0a, 0x07, 0x6f, 0x76, 0x65, 0x72, 0x64, 0x75, 0x65, 0x10, 0x02, 0x12, 0x08, 0x0a,
	0x04, 0x70, 0x61, 0x69, 0x64, 0x10, 0x03, 0x12, 0x08, 0x0a, 0x04, 0x76, 0x6f, 0x69, 0x64, 0x10,
	0x04, 0x12, 0x0c, 0x0a, 0x08, 0x71, 0x75, 0x65, 0x75, 0x65, 0x69, 0x6e, 0x67, 0x10, 0x05, 0x22,
	0x62, 0x0a, 0x10, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x49,
	0x74, 0x65, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6c, 0x61, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x70, 0x6c, 0x61, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x64, 0x61, 0x79, 0x5f, 0x6c,
	0x65, 0x66, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x64, 0x61, 0x79, 0x4c, 0x65,
	0x66, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x22, 0x94, 0x01, 0x0a, 0x10, 0x52, 0x65, 0x6e, 0x65, 0x77, 0x49, 0x6e, 0x76,
	0x6f, 0x69, 0x63, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6c, 0x61, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6c, 0x61, 0x6e, 0x12, 0x2e, 0x0a, 0x13,
	0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x5f, 0x6d, 0x6f,
	0x6e, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x62, 0x69, 0x6c, 0x6c, 0x69,
	0x6e, 0x67, 0x43, 0x79, 0x63, 0x6c, 0x65, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x12, 0x1f, 0x0a, 0x0b,
	0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0a, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1b, 0x0a,
	0x09, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x66, 0x72, 0x6f, 0x6d, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x9e, 0x02, 0x0a, 0x0f, 0x50,
	0x6c, 0x61, 0x6e, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x1f,
	0x0a, 0x0b, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0a, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x2e, 0x0a, 0x13, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x79, 0x63, 0x6c, 0x65,
	0x5f, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x62, 0x69,
	0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x43, 0x79, 0x63, 0x6c, 0x65, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x12,
	0x19, 0x0a, 0x08, 0x6f, 0x6c, 0x64, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6f, 0x6c, 0x64, 0x50, 0x6c, 0x61, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x6e, 0x65,
	0x77, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x65,
	0x77, 0x50, 0x6c, 0x61, 0x6e, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x61, 0x76, 0x65, 0x5f, 0x70, 0x65,
	0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0e,
	0x73, 0x61, 0x76, 0x65, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x64, 0x61, 0x79, 0x5f,
	0x6c, 0x65, 0x66, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x64, 0x61, 0x79, 0x4c,
	0x65, 0x66, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x6f, 0x6c, 0x64, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x6f, 0x6c,
	0x64, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x85, 0x03, 0x0a, 0x0b,
	0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x68,
	0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68,
	0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x6e, 0x76,
	0x6f, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69,
	0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x2d, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x2e, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x2e, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x1a, 0x96, 0x01, 0x0a, 0x04, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x2f, 0x0a, 0x05, 0x72, 0x65, 0x6e, 0x65, 0x77, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x6e,
	0x65, 0x77, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x72,
	0x65, 0x6e, 0x65, 0x77, 0x12, 0x2f, 0x0a, 0x05, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x67,
	0x65, 0x6e, 0x74, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05,
	0x61, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x2c, 0x0a, 0x04, 0x70, 0x6c, 0x61, 0x6e, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x6c,
	0x61, 0x6e, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x70,
	0x6c, 0x61, 0x6e, 0x22, 0x70, 0x0a, 0x0b, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x10, 0x0a, 0x03, 0x76, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x76,
	0x61, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72,
	0x79, 0x43, 0x6f, 0x64, 0x65, 0x22, 0xe3, 0x01, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63,
	0x74, 0x12, 0x21, 0x0a, 0x03, 0x63, 0x74, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52,
	0x03, 0x63, 0x74, 0x78, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x14,
	0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70,
	0x68, 0x6f, 0x6e, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6a, 0x6f, 0x62, 0x5f, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6a, 0x6f, 0x62, 0x54, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x69, 0x6d, 0x61,
	0x72, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72,
	0x79, 0x22, 0x28, 0x0a, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x06, 0x0a, 0x02, 0x6d, 0x72,
	0x10, 0x00, 0x12, 0x06, 0x0a, 0x02, 0x6d, 0x73, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x6d, 0x72,
	0x73, 0x10, 0x02, 0x12, 0x06, 0x0a, 0x02, 0x64, 0x72, 0x10, 0x03, 0x22, 0xba, 0x01, 0x0a, 0x08,
	0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x61,
	0x63, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x52, 0x08, 0x63, 0x6f, 0x6e,
	0x74, 0x61, 0x63, 0x74, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12,
	0x37, 0x0a, 0x0c, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e,
	0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x62, 0x69, 0x6c,
	0x6c, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x32, 0x0a, 0x18, 0x46, 0x69, 0x78, 0x65,
	0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x30, 0x0a, 0x14,
	0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x22, 0x24,
	0x0a, 0x0a, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x63, 0x72,
	0x65, 0x64, 0x69, 0x74, 0x22, 0x4d, 0x0a, 0x12, 0x52, 0x65, 0x66, 0x65, 0x72, 0x72, 0x61, 0x6c,
	0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65,
	0x66, 0x65, 0x72, 0x72, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x63,
	0x72, 0x65, 0x64, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x63, 0x72, 0x65,
	0x64, 0x69, 0x74, 0x22, 0xad, 0x08, 0x0a, 0x0d, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f,
	0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x21, 0x0a, 0x03, 0x63, 0x74, 0x78, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x78, 0x74, 0x52, 0x03, 0x63, 0x74, 0x78, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x21,
	0x0a, 0x0c, 0x72, 0x65, 0x64, 0x65, 0x65, 0x6d, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x72, 0x65, 0x64, 0x65, 0x65, 0x6d, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x2f, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x2e, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x2e,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x12, 0x10, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x11, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x65,
	0x6e, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x6f, 0x72, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x18, 0x12,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x6f, 0x72, 0x50, 0x6c, 0x61, 0x6e, 0x12, 0x24, 0x0a,
	0x0e, 0x66, 0x6f, 0x72, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x66, 0x6f, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x6d, 0x61, 0x78, 0x5f, 0x72, 0x65, 0x64, 0x65, 0x6d,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x14, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x6d, 0x61,
	0x78, 0x52, 0x65, 0x64, 0x65, 0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x14, 0x0a, 0x05,
	0x61, 0x64, 0x64, 0x6f, 0x6e, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x64, 0x64,
	0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x6f, 0x72, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18,
	0x17, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x66, 0x6f, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12,
	0x1d, 0x0a, 0x0a, 0x6d, 0x69, 0x6e, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x18, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x09, 0x6d, 0x69, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x6d, 0x61, 0x78, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x19, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x09, 0x6d, 0x61, 0x78, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1b, 0x0a,
	0x09, 0x66, 0x6f, 0x72, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x73, 0x18, 0x1a, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x08, 0x66, 0x6f, 0x72, 0x50, 0x6c, 0x61, 0x6e, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x66, 0x6f,
	0x72, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x1b, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0d, 0x66, 0x6f, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49,
	0x64, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x66, 0x6f, 0x72, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x73, 0x18, 0x1d, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x66, 0x6f, 0x72, 0x43, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x64, 0x12, 0x2f, 0x0a, 0x14, 0x66, 0x6f, 0x72, 0x5f, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x5f, 0x6f, 0x66, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x20, 0x20, 0x03,
	0x28, 0x0d, 0x52, 0x11, 0x66, 0x6f, 0x72, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x21, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x1a, 0xeb, 0x01, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x44,
	0x0a, 0x0c, 0x66, 0x69, 0x78, 0x65, 0x64, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x46,
	0x69, 0x78, 0x65, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x0b, 0x66, 0x69, 0x78, 0x65, 0x64, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x37, 0x0a, 0x07, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e,
	0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x6f, 0x64, 0x65, 0x52, 0x07, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x12, 0x2b, 0x0a,
	0x06, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x43, 0x6f,
	0x64, 0x65, 0x52, 0x06, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x12, 0x37, 0x0a, 0x08, 0x72, 0x65,
	0x66, 0x65, 0x72, 0x72, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x72, 0x61, 0x6c, 0x43,
	0x72, 0x65, 0x64, 0x69, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x08, 0x72, 0x65, 0x66, 0x65, 0x72,
	0x72, 0x61, 0x6c, 0x22, 0x6e, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x1b, 0x66,
	0x69, 0x78, 0x65, 0x64, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x6d,
	0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x10, 0x00, 0x12, 0x1a, 0x0a, 0x16,
	0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x64,
	0x69, 0x74, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x10, 0x02, 0x12, 0x18, 0x0a, 0x14, 0x72, 0x65, 0x66,
	0x65, 0x72, 0x72, 0x61, 0x6c, 0x5f, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x5f, 0x63, 0x6f, 0x64,
	0x65, 0x10, 0x03, 0x22, 0x39, 0x0a, 0x13, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x6f, 0x64, 0x65, 0x42, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x63,
	0x0a, 0x14, 0x4c, 0x6f, 0x67, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f,
	0x64, 0x65, 0x55, 0x73, 0x65, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x22, 0xb9, 0x04, 0x0a, 0x08, 0x52, 0x65, 0x66, 0x65, 0x72, 0x72, 0x61, 0x6c,
	0x12, 0x21, 0x0a, 0x03, 0x63, 0x74, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x03,
	0x63, 0x74, 0x78, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x12,
	0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x61,
	0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x52, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x61, 0x6e, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x61, 0x6e, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x2e, 0x0a, 0x13, 0x62, 0x61, 0x6e, 0x6b, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x62, 0x61,
	0x6e, 0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12,
	0x1f, 0x0a, 0x0b, 0x62, 0x61, 0x6e, 0x6b, 0x5f, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x61, 0x6e, 0x6b, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68,
	0x12, 0x23, 0x0a, 0x0d, 0x62, 0x61, 0x6e, 0x6b, 0x5f, 0x66, 0x75, 0x6c, 0x6c, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x62, 0x61, 0x6e, 0x6b, 0x46, 0x75, 0x6c,
	0x6c, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x66, 0x65,
	0x72, 0x72, 0x65, 0x72, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75,
	0x6d, 0x5f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x0e, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12,
	0x26, 0x0a, 0x0f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6f, 0x66, 0x5f, 0x72, 0x65, 0x66,
	0x65, 0x72, 0x18, 0x12, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x4f, 0x66, 0x52, 0x65, 0x66, 0x65, 0x72, 0x12, 0x32, 0x0a, 0x16, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x5f, 0x6f, 0x66, 0x5f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x5f, 0x62, 0x79, 0x5f, 0x64, 0x61,
	0x79, 0x18, 0x13, 0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f,
	0x66, 0x52, 0x65, 0x66, 0x65, 0x72, 0x42, 0x79, 0x44, 0x61, 0x79, 0x22, 0x22, 0x0a, 0x06, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0a, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x10,
	0x00, 0x12, 0x0c, 0x0a, 0x08, 0x69, 0x6e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x10, 0x01, 0x22,
	0x6b, 0x0a, 0x0e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x42, 0x79, 0x52, 0x65, 0x66, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0xca, 0x01, 0x0a,
	0x12, 0x4c, 0x6f, 0x67, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x66, 0x65, 0x72,
	0x72, 0x65, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x2e, 0x0a,
	0x13, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x72, 0x65, 0x66, 0x65,
	0x72, 0x72, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x2a, 0x0a,
	0x11, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65, 0x72, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72,
	0x65, 0x72, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x89, 0x01, 0x0a, 0x13, 0x4c, 0x6f,
	0x67, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65, 0x64,
	0x73, 0x12, 0x21, 0x0a, 0x03, 0x63, 0x74, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52,
	0x03, 0x63, 0x74, 0x78, 0x12, 0x4f, 0x0a, 0x15, 0x6c, 0x6f, 0x67, 0x5f, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65, 0x64, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x6f,
	0x67, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65, 0x64,
	0x52, 0x13, 0x6c, 0x6f, 0x67, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x66, 0x65,
	0x72, 0x72, 0x65, 0x64, 0x73, 0x22, 0xbe, 0x02, 0x0a, 0x18, 0x4c, 0x6f, 0x67, 0x42, 0x69, 0x6c,
	0x6c, 0x42, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x66, 0x65, 0x72, 0x72,
	0x65, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0e, 0x63, 0x6f, 0x6d,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x17, 0x0a,
	0x07, 0x62, 0x69, 0x6c, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x62, 0x69, 0x6c, 0x6c, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x79, 0x65, 0x61, 0x72, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x79, 0x65, 0x61, 0x72, 0x12, 0x2e, 0x0a, 0x13, 0x72, 0x65,
	0x66, 0x65, 0x72, 0x72, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65,
	0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x72, 0x65,
	0x66, 0x65, 0x72, 0x72, 0x65, 0x72, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65, 0x72, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0xa3, 0x01, 0x0a, 0x19, 0x4c, 0x6f, 0x67, 0x42, 0x69,
	0x6c, 0x6c, 0x42, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x66, 0x65, 0x72,
	0x72, 0x65, 0x64, 0x73, 0x12, 0x21, 0x0a, 0x03, 0x63, 0x74, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x78, 0x74, 0x52, 0x03, 0x63, 0x74, 0x78, 0x12, 0x63, 0x0a, 0x1d, 0x6c, 0x6f, 0x67, 0x5f, 0x62,
	0x69, 0x6c, 0x6c, 0x5f, 0x62, 0x79, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x72,
	0x65, 0x66, 0x65, 0x72, 0x72, 0x65, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21,
	0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x6f, 0x67, 0x42, 0x69, 0x6c, 0x6c,
	0x42, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65,
	0x64, 0x52, 0x19, 0x6c, 0x6f, 0x67, 0x42, 0x69, 0x6c, 0x6c, 0x42, 0x79, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65, 0x64, 0x73, 0x22, 0x92, 0x02, 0x0a,
	0x17, 0x4c, 0x6f, 0x67, 0x50, 0x61, 0x69, 0x64, 0x46, 0x6f, 0x72, 0x41, 0x67, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x03, 0x63, 0x74, 0x78, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x03, 0x63, 0x74, 0x78, 0x12, 0x1f, 0x0a, 0x0b, 0x72,
	0x65, 0x66, 0x65, 0x72, 0x72, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x2e,
	0x0a, 0x13, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x72, 0x65, 0x66,
	0x65, 0x72, 0x72, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x2a,
	0x0a, 0x11, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65, 0x72, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x72, 0x65, 0x66, 0x65, 0x72,
	0x72, 0x65, 0x72, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x22, 0x9f, 0x01, 0x0a, 0x18, 0x4c, 0x6f, 0x67, 0x50, 0x61, 0x69, 0x64, 0x46, 0x6f, 0x72,
	0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65, 0x72, 0x73, 0x12, 0x21,
	0x0a, 0x03, 0x63, 0x74, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x03, 0x63, 0x74,
	0x78, 0x12, 0x60, 0x0a, 0x1c, 0x6c, 0x6f, 0x67, 0x5f, 0x70, 0x61, 0x69, 0x64, 0x5f, 0x66, 0x6f,
	0x72, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65, 0x72,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x2e, 0x4c, 0x6f, 0x67, 0x50, 0x61, 0x69, 0x64, 0x46, 0x6f, 0x72, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65, 0x72, 0x52, 0x18, 0x6c, 0x6f, 0x67, 0x50, 0x61,
	0x69, 0x64, 0x46, 0x6f, 0x72, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x66, 0x65, 0x72, 0x72,
	0x65, 0x72, 0x73, 0x22, 0x81, 0x01, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x03, 0x63, 0x74, 0x78, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x03, 0x63, 0x74, 0x78, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x61, 0x6e, 0x63, 0x68, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x61, 0x6e, 0x63, 0x68, 0x6f, 0x72, 0x22, 0x63, 0x0a, 0x04, 0x4c, 0x6f, 0x67, 0x73, 0x12,
	0x21, 0x0a, 0x03, 0x63, 0x74, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x03, 0x63,
	0x74, 0x78, 0x12, 0x20, 0x0a, 0x04, 0x6c, 0x6f, 0x67, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0c, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x6f, 0x67, 0x52, 0x04,
	0x6c, 0x6f, 0x67, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6e, 0x63, 0x68, 0x6f, 0x72, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6e, 0x63, 0x68, 0x6f, 0x72, 0x22, 0xf9, 0x04, 0x0a,
	0x03, 0x4c, 0x6f, 0x67, 0x12, 0x21, 0x0a, 0x03, 0x63, 0x74, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x78, 0x74, 0x52, 0x03, 0x63, 0x74, 0x78, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6d,
	0x6f, 0x6e, 0x74, 0x68, 0x22, 0xa1, 0x03, 0x0a, 0x06, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x12, 0x0a, 0x0e, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63,
	0x65, 0x10, 0x00, 0x12, 0x19, 0x0a, 0x15, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x69, 0x6e,
	0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x10, 0x01, 0x12, 0x13,
	0x0a, 0x0f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x64, 0x69,
	0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x10, 0x03, 0x12, 0x13, 0x0a, 0x0f, 0x72, 0x65, 0x64, 0x65,
	0x65, 0x6d, 0x5f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x10, 0x04, 0x12, 0x0e, 0x0a,
	0x0a, 0x61, 0x64, 0x64, 0x5f, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x10, 0x05, 0x12, 0x11, 0x0a,
	0x0d, 0x72, 0x65, 0x64, 0x65, 0x65, 0x6d, 0x5f, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x10, 0x06,
	0x12, 0x12, 0x0a, 0x0e, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x10, 0x07, 0x12, 0x0f, 0x0a, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x70,
	0x6c, 0x61, 0x6e, 0x10, 0x08, 0x12, 0x16, 0x0a, 0x12, 0x72, 0x65, 0x6e, 0x65, 0x77, 0x5f, 0x73,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x10, 0x0a, 0x12, 0x1a, 0x0a,
	0x16, 0x63, 0x6c, 0x69, 0x63, 0x6b, 0x5f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x5f, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x10, 0x0b, 0x12, 0x14, 0x0a, 0x10, 0x70, 0x61, 0x79,
	0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65, 0x72, 0x10, 0x0c, 0x12,
	0x1a, 0x0a, 0x16, 0x61, 0x64, 0x64, 0x5f, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x5f, 0x66, 0x6f, 0x72,
	0x5f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65, 0x72, 0x10, 0x0d, 0x12, 0x0f, 0x0a, 0x0b, 0x70,
	0x61, 0x79, 0x5f, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x10, 0x0e, 0x12, 0x11, 0x0a, 0x0d,
	0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x70, 0x65, 0x10, 0x0f, 0x12,
	0x0f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x69, 0x6c, 0x6c, 0x10, 0x10,
	0x12, 0x0e, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x5f, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x10, 0x11,
	0x12, 0x15, 0x0a, 0x11, 0x65, 0x64, 0x69, 0x74, 0x5f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x10, 0x12, 0x12, 0x10, 0x0a, 0x0c, 0x65, 0x64, 0x69, 0x74, 0x5f,
	0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x10, 0x13, 0x12, 0x0d, 0x0a, 0x09, 0x64, 0x6f, 0x77,
	0x6e, 0x67, 0x72, 0x61, 0x64, 0x65, 0x10, 0x14, 0x22, 0x93, 0x01, 0x0a, 0x14, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x21, 0x0a, 0x03, 0x63, 0x74, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52,
	0x03, 0x63, 0x74, 0x78, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6e,
	0x63, 0x68, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6e, 0x63, 0x68,
	0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x85,
	0x01, 0x0a, 0x0e, 0x44, 0x69, 0x66, 0x66, 0x53, 0x75, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x21, 0x0a, 0x03, 0x63, 0x74, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52,
	0x03, 0x63, 0x74, 0x78, 0x12, 0x27, 0x0a, 0x03, 0x64, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x03, 0x64, 0x73, 0x74, 0x12, 0x27, 0x0a,
	0x03, 0x73, 0x72, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x03, 0x73, 0x72, 0x63, 0x22, 0xc3, 0x01, 0x0a, 0x18, 0x4c, 0x6f, 0x67, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65, 0x64, 0x42, 0x79, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x72, 0x65, 0x66, 0x65, 0x72,
	0x72, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65, 0x72, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x72, 0x65, 0x66, 0x65, 0x72,
	0x72, 0x65, 0x72, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65, 0x72, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x22, 0x80, 0x02, 0x0a,
	0x14, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x52, 0x65, 0x66, 0x65, 0x72, 0x42, 0x79,
	0x41, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x07, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x5f, 0x6f, 0x66, 0x5f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0d, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x52, 0x65, 0x66, 0x65,
	0x72, 0x12, 0x33, 0x0a, 0x16, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6f, 0x66, 0x5f, 0x72,
	0x65, 0x63, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x13, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x52, 0x65, 0x63, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x66, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x66,
	0x65, 0x72, 0x72, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22,
	0x79, 0x0a, 0x10, 0x52, 0x65, 0x66, 0x65, 0x72, 0x72, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x03, 0x63, 0x74, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78,
	0x74, 0x52, 0x03, 0x63, 0x74, 0x78, 0x12, 0x42, 0x0a, 0x0d, 0x74, 0x6f, 0x70, 0x5f, 0x72, 0x65,
	0x66, 0x65, 0x72, 0x72, 0x61, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e,
	0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66,
	0x52, 0x65, 0x66, 0x65, 0x72, 0x42, 0x79, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x0c, 0x74, 0x6f,
	0x70, 0x52, 0x65, 0x66, 0x65, 0x72, 0x72, 0x61, 0x6c, 0x73, 0x22, 0x74, 0x0a, 0x15, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x03, 0x63, 0x74, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78,
	0x74, 0x52, 0x03, 0x63, 0x74, 0x78, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x22, 0xa2, 0x01, 0x0a, 0x0e, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f,
	0x64, 0x65, 0x73, 0x12, 0x21, 0x0a, 0x03, 0x63, 0x74, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78,
	0x74, 0x52, 0x03, 0x63, 0x74, 0x78, 0x12, 0x3f, 0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x0e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69,
	0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6e, 0x63, 0x68, 0x6f,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6e, 0x63, 0x68, 0x6f, 0x72, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x6c, 0x0a, 0x14, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69,
	0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a,
	0x03, 0x63, 0x74, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x03, 0x63, 0x74, 0x78,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x49, 0x64, 0x22, 0x6b, 0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x6d, 0x6f,
	0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x21, 0x0a, 0x03, 0x63, 0x74, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x03, 0x63,
	0x74, 0x78, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6e, 0x63, 0x68, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x61, 0x6e, 0x63, 0x68, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x22, 0x3d, 0x0a, 0x06, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x21, 0x0a, 0x03, 0x63, 0x74,
	0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x03, 0x63, 0x74, 0x78, 0x12, 0x10, 0x0a,
	0x03, 0x73, 0x74, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x74, 0x72, 0x22,
	0xdf, 0x01, 0x0a, 0x0a, 0x50, 0x61, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21,
	0x0a, 0x03, 0x63, 0x74, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x03, 0x63, 0x74,
	0x78, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x73, 0x18,
	0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x49, 0x64,
	0x73, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x34, 0x0a, 0x0c, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x52, 0x0c, 0x43, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x22, 0xdc, 0x01, 0x0a, 0x13, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x21, 0x0a, 0x03, 0x63, 0x74, 0x78,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x03, 0x63, 0x74, 0x78, 0x12, 0x1d, 0x0a, 0x0a,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x69,
	0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x69,
	0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x21, 0x0a,
	0x0c, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x6e, 0x6b,
	0x22, 0x84, 0x01, 0x0a, 0x10, 0x54, 0x72, 0x69, 0x61, 0x6c, 0x45, 0x6e, 0x64, 0x69, 0x6e, 0x67,
	0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x21, 0x0a, 0x03, 0x63, 0x74, 0x78, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x78, 0x74, 0x52, 0x03, 0x63, 0x74, 0x78, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6e, 0x64, 0x65, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x22, 0xa3, 0x01, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x21, 0x0a, 0x03, 0x63,
	0x74, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x03, 0x63, 0x74, 0x78, 0x12, 0x1d,
	0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x19, 0x0a,
	0x08, 0x6f, 0x6c, 0x64, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6f, 0x6c, 0x64, 0x50, 0x6c, 0x61, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x6e, 0x65, 0x77, 0x5f,
	0x70, 0x6c, 0x61, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x65, 0x77, 0x50,
	0x6c, 0x61, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x22, 0xd9, 0x01,
	0x0a, 0x10, 0x50, 0x61, 0x69, 0x64, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x45, 0x6d, 0x61,
	0x69, 0x6c, 0x12, 0x21, 0x0a, 0x03, 0x63, 0x74, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74,
	0x52, 0x03, 0x63, 0x74, 0x78, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63,
	0x65, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x27, 0x0a,
	0x0f, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63,
	0x65, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x69, 0x6e,
	0x76, 0x6f, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x2a, 0x25, 0x0a, 0x08, 0x43, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x07, 0x0a, 0x03, 0x75, 0x73, 0x64, 0x10, 0x00, 0x12, 0x07,
	0x0a, 0x03, 0x76, 0x6e, 0x64, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x62, 0x72, 0x6c, 0x10, 0x02,
	0x42, 0x21, 0x5a, 0x1f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73,
	0x75, 0x62, 0x69, 0x7a, 0x2f, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x2f, 0x70, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74,
}

var (
	file_payment_proto_rawDescOnce sync.Once
	file_payment_proto_rawDescData = file_payment_proto_rawDesc
)

func file_payment_proto_rawDescGZIP() []byte {
	file_payment_proto_rawDescOnce.Do(func() {
		file_payment_proto_rawDescData = protoimpl.X.CompressGZIP(file_payment_proto_rawDescData)
	})
	return file_payment_proto_rawDescData
}

var file_payment_proto_enumTypes = make([]protoimpl.EnumInfo, 9)
var file_payment_proto_msgTypes = make([]protoimpl.MessageInfo, 57)
var file_payment_proto_goTypes = []interface{}{
	(Currency)(0),                     // 0: payment.Currency
	(PaymentMethod_Type)(0),           // 1: payment.PaymentMethod.Type
	(PaymentMethod_State)(0),          // 2: payment.PaymentMethod.State
	(Plan_Type)(0),                    // 3: payment.Plan.Type
	(Invoice_State)(0),                // 4: payment.Invoice.State
	(Contact_Title)(0),                // 5: payment.Contact.Title
	(PromotionCode_Type)(0),           // 6: payment.PromotionCode.Type
	(Referral_Status)(0),              // 7: payment.Referral.Status
	(Log_Action)(0),                   // 8: payment.Log.Action
	(*ListCommentsRequest)(nil),       // 9: payment.ListCommentsRequest
	(*Comments)(nil),                  // 10: payment.Comments
	(*Comment)(nil),                   // 11: payment.Comment
	(*Stripe)(nil),                    // 12: payment.Stripe
	(*PaymentMethods)(nil),            // 13: payment.PaymentMethods
	(*PaymentMethod)(nil),             // 14: payment.PaymentMethod
	(*Limit)(nil),                     // 15: payment.Limit
	(*Plans)(nil),                     // 16: payment.Plans
	(*Plan)(nil),                      // 17: payment.Plan
	(*Subscription)(nil),              // 18: payment.Subscription
	(*Bill)(nil),                      // 19: payment.Bill
	(*Note)(nil),                      // 20: payment.Note
	(*Invoices)(nil),                  // 21: payment.Invoices
	(*ListInvoiceRequest)(nil),        // 22: payment.ListInvoiceRequest
	(*Invoice)(nil),                   // 23: payment.Invoice
	(*AgentInvoiceItem)(nil),          // 24: payment.AgentInvoiceItem
	(*RenewInvoiceItem)(nil),          // 25: payment.RenewInvoiceItem
	(*PlanInvoiceItem)(nil),           // 26: payment.PlanInvoiceItem
	(*InvoiceItem)(nil),               // 27: payment.InvoiceItem
	(*BillingInfo)(nil),               // 28: payment.BillingInfo
	(*Contact)(nil),                   // 29: payment.Contact
	(*Customer)(nil),                  // 30: payment.Customer
	(*FixedAmountPromotionCode)(nil),  // 31: payment.FixedAmountPromotionCode
	(*PercentPromotionCode)(nil),      // 32: payment.PercentPromotionCode
	(*CreditCode)(nil),                // 33: payment.CreditCode
	(*ReferralCreditCode)(nil),        // 34: payment.ReferralCreditCode
	(*PromotionCode)(nil),             // 35: payment.PromotionCode
	(*PromotionCodeByCode)(nil),       // 36: payment.PromotionCodeByCode
	(*LogPromotionCodeUsed)(nil),      // 37: payment.LogPromotionCodeUsed
	(*Referral)(nil),                  // 38: payment.Referral
	(*AgentByReferId)(nil),            // 39: payment.AgentByReferId
	(*LogAccountReferred)(nil),        // 40: payment.LogAccountReferred
	(*LogAccountReferreds)(nil),       // 41: payment.LogAccountReferreds
	(*LogBillByAccountReferred)(nil),  // 42: payment.LogBillByAccountReferred
	(*LogBillByAccountReferreds)(nil), // 43: payment.LogBillByAccountReferreds
	(*LogPaidForAgentReferrer)(nil),   // 44: payment.LogPaidForAgentReferrer
	(*LogPaidForAgentReferrers)(nil),  // 45: payment.LogPaidForAgentReferrers
	(*ListLogsRequest)(nil),           // 46: payment.ListLogsRequest
	(*Logs)(nil),                      // 47: payment.Logs
	(*Log)(nil),                       // 48: payment.Log
	(*SearchInvoiceRequest)(nil),      // 49: payment.SearchInvoiceRequest
	(*DiffSubRequest)(nil),            // 50: payment.DiffSubRequest
	(*LogAccountReferredByTime)(nil),  // 51: payment.LogAccountReferredByTime
	(*NumberOfReferByAgent)(nil),      // 52: payment.NumberOfReferByAgent
	(*ReferralResponse)(nil),          // 53: payment.ReferralResponse
	(*SearchReferredRequest)(nil),     // 54: payment.SearchReferredRequest
	(*PromotionCodes)(nil),            // 55: payment.PromotionCodes
	(*PromotionCodeRequest)(nil),      // 56: payment.PromotionCodeRequest
	(*ListPromotionCodeRequest)(nil),  // 57: payment.ListPromotionCodeRequest
	(*String)(nil),                    // 58: payment.String
	(*PayRequest)(nil),                // 59: payment.PayRequest
	(*InvoiceCreatedEmail)(nil),       // 60: payment.InvoiceCreatedEmail
	(*TrialEndingEmail)(nil),          // 61: payment.TrialEndingEmail
	(*UpdatePlanEmail)(nil),           // 62: payment.UpdatePlanEmail
	(*PaidInvoiceEmail)(nil),          // 63: payment.PaidInvoiceEmail
	(*InvoiceItem_Data)(nil),          // 64: payment.InvoiceItem.Data
	(*PromotionCode_Data)(nil),        // 65: payment.PromotionCode.Data
	(*common.Context)(nil),            // 66: common.Context
}
var file_payment_proto_depIdxs = []int32{
	66, // 0: payment.ListCommentsRequest.ctx:type_name -> common.Context
	66, // 1: payment.Comments.ctx:type_name -> common.Context
	11, // 2: payment.Comments.comments:type_name -> payment.Comment
	66, // 3: payment.Comment.ctx:type_name -> common.Context
	14, // 4: payment.PaymentMethods.payment_methods:type_name -> payment.PaymentMethod
	66, // 5: payment.PaymentMethod.ctx:type_name -> common.Context
	12, // 6: payment.PaymentMethod.stripe:type_name -> payment.Stripe
	66, // 7: payment.Limit.ctx:type_name -> common.Context
	17, // 8: payment.Plans.plans:type_name -> payment.Plan
	15, // 9: payment.Plan.limit:type_name -> payment.Limit
	66, // 10: payment.Subscription.ctx:type_name -> common.Context
	20, // 11: payment.Subscription.notes:type_name -> payment.Note
	30, // 12: payment.Subscription.customer:type_name -> payment.Customer
	15, // 13: payment.Subscription.limit:type_name -> payment.Limit
	66, // 14: payment.Bill.ctx:type_name -> common.Context
	29, // 15: payment.Bill.customer_info:type_name -> payment.Contact
	66, // 16: payment.Note.ctx:type_name -> common.Context
	23, // 17: payment.Invoices.invoices:type_name -> payment.Invoice
	66, // 18: payment.ListInvoiceRequest.ctx:type_name -> common.Context
	66, // 19: payment.Invoice.ctx:type_name -> common.Context
	28, // 20: payment.Invoice.billing_info:type_name -> payment.BillingInfo
	27, // 21: payment.Invoice.items:type_name -> payment.InvoiceItem
	20, // 22: payment.Invoice.notes:type_name -> payment.Note
	18, // 23: payment.Invoice.current_sub:type_name -> payment.Subscription
	17, // 24: payment.Invoice.current_plan:type_name -> payment.Plan
	64, // 25: payment.InvoiceItem.data:type_name -> payment.InvoiceItem.Data
	66, // 26: payment.Contact.ctx:type_name -> common.Context
	29, // 27: payment.Customer.contacts:type_name -> payment.Contact
	28, // 28: payment.Customer.billing_info:type_name -> payment.BillingInfo
	66, // 29: payment.PromotionCode.ctx:type_name -> common.Context
	65, // 30: payment.PromotionCode.data:type_name -> payment.PromotionCode.Data
	66, // 31: payment.Referral.ctx:type_name -> common.Context
	66, // 32: payment.LogAccountReferreds.ctx:type_name -> common.Context
	40, // 33: payment.LogAccountReferreds.log_account_referreds:type_name -> payment.LogAccountReferred
	66, // 34: payment.LogBillByAccountReferreds.ctx:type_name -> common.Context
	42, // 35: payment.LogBillByAccountReferreds.log_bill_by_account_referreds:type_name -> payment.LogBillByAccountReferred
	66, // 36: payment.LogPaidForAgentReferrer.ctx:type_name -> common.Context
	66, // 37: payment.LogPaidForAgentReferrers.ctx:type_name -> common.Context
	44, // 38: payment.LogPaidForAgentReferrers.log_paid_for_agent_referrers:type_name -> payment.LogPaidForAgentReferrer
	66, // 39: payment.ListLogsRequest.ctx:type_name -> common.Context
	66, // 40: payment.Logs.ctx:type_name -> common.Context
	48, // 41: payment.Logs.logs:type_name -> payment.Log
	66, // 42: payment.Log.ctx:type_name -> common.Context
	66, // 43: payment.SearchInvoiceRequest.ctx:type_name -> common.Context
	66, // 44: payment.DiffSubRequest.ctx:type_name -> common.Context
	18, // 45: payment.DiffSubRequest.dst:type_name -> payment.Subscription
	18, // 46: payment.DiffSubRequest.src:type_name -> payment.Subscription
	66, // 47: payment.ReferralResponse.ctx:type_name -> common.Context
	52, // 48: payment.ReferralResponse.top_referrals:type_name -> payment.NumberOfReferByAgent
	66, // 49: payment.SearchReferredRequest.ctx:type_name -> common.Context
	66, // 50: payment.PromotionCodes.ctx:type_name -> common.Context
	35, // 51: payment.PromotionCodes.promotion_codes:type_name -> payment.PromotionCode
	66, // 52: payment.PromotionCodeRequest.ctx:type_name -> common.Context
	66, // 53: payment.ListPromotionCodeRequest.ctx:type_name -> common.Context
	66, // 54: payment.String.ctx:type_name -> common.Context
	66, // 55: payment.PayRequest.ctx:type_name -> common.Context
	29, // 56: payment.PayRequest.CustomerInfo:type_name -> payment.Contact
	66, // 57: payment.InvoiceCreatedEmail.ctx:type_name -> common.Context
	66, // 58: payment.TrialEndingEmail.ctx:type_name -> common.Context
	66, // 59: payment.UpdatePlanEmail.ctx:type_name -> common.Context
	66, // 60: payment.PaidInvoiceEmail.ctx:type_name -> common.Context
	25, // 61: payment.InvoiceItem.Data.renew:type_name -> payment.RenewInvoiceItem
	24, // 62: payment.InvoiceItem.Data.agent:type_name -> payment.AgentInvoiceItem
	26, // 63: payment.InvoiceItem.Data.plan:type_name -> payment.PlanInvoiceItem
	31, // 64: payment.PromotionCode.Data.fixed_amount:type_name -> payment.FixedAmountPromotionCode
	32, // 65: payment.PromotionCode.Data.percent:type_name -> payment.PercentPromotionCode
	33, // 66: payment.PromotionCode.Data.credit:type_name -> payment.CreditCode
	34, // 67: payment.PromotionCode.Data.referral:type_name -> payment.ReferralCreditCode
	68, // [68:68] is the sub-list for method output_type
	68, // [68:68] is the sub-list for method input_type
	68, // [68:68] is the sub-list for extension type_name
	68, // [68:68] is the sub-list for extension extendee
	0,  // [0:68] is the sub-list for field type_name
}

func init() { file_payment_proto_init() }
func file_payment_proto_init() {
	if File_payment_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_payment_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCommentsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Comments); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Comment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Stripe); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentMethods); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentMethod); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Limit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Plans); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Plan); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Subscription); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Bill); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Note); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Invoices); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListInvoiceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Invoice); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentInvoiceItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RenewInvoiceItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlanInvoiceItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvoiceItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BillingInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Contact); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Customer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FixedAmountPromotionCode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PercentPromotionCode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreditCode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReferralCreditCode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PromotionCode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PromotionCodeByCode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogPromotionCodeUsed); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Referral); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentByReferId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogAccountReferred); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogAccountReferreds); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogBillByAccountReferred); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogBillByAccountReferreds); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogPaidForAgentReferrer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogPaidForAgentReferrers); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListLogsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Logs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Log); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchInvoiceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DiffSubRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogAccountReferredByTime); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NumberOfReferByAgent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReferralResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchReferredRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PromotionCodes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PromotionCodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPromotionCodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*String); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvoiceCreatedEmail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrialEndingEmail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePlanEmail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaidInvoiceEmail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvoiceItem_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PromotionCode_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_payment_proto_rawDesc,
			NumEnums:      9,
			NumMessages:   57,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_payment_proto_goTypes,
		DependencyIndexes: file_payment_proto_depIdxs,
		EnumInfos:         file_payment_proto_enumTypes,
		MessageInfos:      file_payment_proto_msgTypes,
	}.Build()
	File_payment_proto = out.File
	file_payment_proto_rawDesc = nil
	file_payment_proto_goTypes = nil
	file_payment_proto_depIdxs = nil
}
