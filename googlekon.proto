syntax = "proto3";

package googlekon;

option go_package = "github.com/subiz/header/googlekon";

message GoogleAccount {
	string email = 3;
	string access_token = 5;
	string refresh_token = 6;
	int64 access_token_expired_at = 7;
	int64 authorized = 8;
	int64 last_called = 9;
	int64 last_refresh_token_at = 10;
	int64 last_refresh_token_error_at = 11;
	string account_id = 12;
}

message BusinessProfileAccount {
	string business_profile_id = 3;
	string name = 4;
}

message BusinessProfileAccounts {
	repeated BusinessProfileAccount accounts = 4;
	string nextPageToken = 5;
}

message BusinessLocations {
	repeated BusinessLocation locations = 3;
	string nextPageToken = 5;
	int64 totalSize = 6;
}

message BusinessLocation {
	string location_id = 3;
	string storeCode  = 4;
	string title = 5;
	Metadata metadata = 6;
	Profile profile = 7;
	string account_id = 8;
	string email = 9;
	string business_profile_account_id = 10;
	string name = 12;
	string websiteUri = 13;
	string state = 14;
	PhoneNumbers phoneNumbers = 15;
	float averageRating = 16;
	int64 totalReviewCount = 17;
	PostalAddress storefrontAddress = 18;
}

message PhoneNumbers {
	string primaryPhone = 1;
	repeated string additionalPhones = 2;
}

message PostalAddress {
	string postalCode = 4;
	string locality = 7;
	string sublocality = 8;
	repeated string addressLines = 9;
	string address = 12;
}
message Metadata {
	string mapsUri = 1;
    string placeId = 2;
	bool hasGoogleUpdated = 3;
}

message Profile {
	string description = 1;
}

message Review {
	string reviewId = 2;
	Reviewer reviewer = 3;

	enum Rating {
		star_rating_unspecified = 0;
		one = 1;
		two = 2;
		three = 3;
		four = 4;
		five = 5;
	}
	string starRating = 4; //rating
	string comment = 5;
	string createTime = 6;
	string updateTime = 7;
	ReviewReply reviewReply = 8;
	string name = 9;
	string business_location_id =10;
	string status = 11;
}

message Reviews {
	repeated Review reviews = 1;
	float avarageRating = 2;
	int32 totalReviewCount = 3;
	string nextPageToken = 4;
}

message Reviewer {
	string profilePhotoUrl = 1;
	string displayName = 2;
	bool isAnonymous = 3;
}

message ReviewReply {
	string comment = 1;
	string updateTime = 2;
	string agentId = 3;
}

message Response {
	string access_token = 1;
	int32 expires_in = 2;
	string scope = 3;
	string token_type = 4;
}

message GoogleNotiMessage {
	string type = 1;
	string location = 2;
	string review = 3;
	string question = 4;
	string answer = 5;
}

message ListReviews{
	repeated Review reviews = 1;
	float averageRating = 2;
	int64 totalReviewCount = 3;
	string nextPageToken = 4;
}

message Question {
	string name = 1;
	Author author = 2;
	int64 upvoteCount = 3;
	string text = 4;
	string createTime = 5;
	string updateTime = 6;
	int64 totalAnswerCount = 7;
	string question_id = 8;
	string business_location_id = 10;
	string status = 11;
	map<string,bool> answer_idsM = 12;
}

message Author {
	string displayName = 1;
	string profilePhotoUri = 2;
	string type = 3;
	enum AuthorType {
		AUTHOR_TYPE_UNSPECIFIED = 0;
		REGULAR_USER = 1;
		LOCAL_GUIDE = 2;
		MERCHANT = 3;
	}
}

message Answer {
	string name = 1;
	Author author = 2;
	int64 upvoteCount = 3;
	string text = 4;
	string createTime = 5;
	string updateTime = 6;
	string answer_id = 7;
	string question_id = 8;
	string business_location_id = 10;
	string status = 11;
}

message ListQuestions {
	repeated Question questions = 1;
	int64 totalSize = 2;
	string nextPageToken = 3;
}

message ListAnswers {
	repeated Answer answers = 1;
	int64 totalSize = 2;
	string nextPageToken = 3;
}

message AgentInteractQuestion {
	string question_id = 1;
	string answer_id = 2;
	string agent_id = 3;
	string reply = 4;
	int64 reply_updated = 5;
	string event_id = 6;
	string anchor_updated = 7; // id+ updated
}

message AgentInteractReview {
	string review_id = 1;
	string agent_id = 2;
	string reply = 3;
	int64 reply_updated = 4;
	string event_id = 5;
	string anchor_updated = 6; // id+ updated
}

message Brand {
	string name = 1;
	string displayName = 2;
	string brand_id = 3;
}

message Agent {
	string name = 1;
	string displayName = 2;
	BusinessMessagesAgent businessMessagesAgent = 3;
	string agent_id = 4;
	string brand_id = 5;
}

message BusinessMessagesAgent {
	string logoUrl = 1;
	repeated BusinessMessagesEntryPointConfig entryPointConfigs = 2; 
	map<string,ConversationalSetting> conversationalSettings = 3; 
	string defaultLocale = 4;
	SupportedAgentInteraction primaryAgentInteraction = 5;
    repeated SupportedAgentInteraction additionalAgentInteractions = 6;
}

message BusinessMessagesEntryPointConfig {
	string allowedEntryPoint = 1;
	enum EntryPoint {
		ENTRY_POINT_UNSPECIFIED = 0;
		LOCATION = 1;
		NON_LOCAL = 2;
	}
}

message ConversationalSetting {
    WelcomeMessage welcomeMessage = 1;
}

message WelcomeMessage {
	string text = 1;
}

message SupportedAgentInteraction {
	string interactionType = 1;
	BotRepresentative botRepresentative = 2;
	HumanRepresentative humanRepresentative = 3;
    enum InteractionType {
		INTERACTION_TYPE_UNSPECIFIED = 0;
		BOT = 1;
		HUMAN = 2;
    }
}

message HumanRepresentative {
	MessagingAvailability humanMessagingAvailability = 1;
}

message BotRepresentative {
	MessagingAvailability botMessagingAvailability = 1;
}

message MessagingAvailability {
	repeated Hours hours = 1;
}

message Hours {
	TimeOfDay startTime = 1;
	TimeOfDay endTime = 2;
	string timeZone = 3;
	string startDay = 4;
	string endDay = 5;
}

message TimeOfDay {
	int32 hours = 1;
	int32 minutes = 2;
	int32 seconds = 3;
	int64 nanos = 4;
}

message ListBrands {
	repeated Brand brands = 1;
	string nextPageToken = 2;
}

message ListAgents {
	repeated Agent agents = 1;
	string nextPageToken = 2;
}

message BrandLocation {
	string name = 1;
	string placeId = 2;
	string location_id = 3;
	string agent = 4;
	string locationEntryPointConfigs = 5;
	string defaultLocale = 8;
	string listingId = 9;
	string business_location_id = 11; 
	string brand_id = 12;
	string agent_id = 13;
}

enum VerificationState {
	VERIFICATION_STATE_UNSPECIFIED = 0;
	VERIFICATION_STATE_UNVERIFIED = 1;
	VERIFICATION_STATE_PENDING = 2;
	VERIFICATION_STATE_VERIFIED = 3;
	VERIFICATION_STATE_SUSPENDED_IN_GMB = 4;
}

message AgentVerification {
    string name = 1;
    string verificationState = 2;
    AgentVerificationContact agentVerificationContact = 3;
	string brand_id = 4;
	string agent_id = 5;
}

message AgentVerificationContact {
    string partnerName = 1;               
    string partnerEmailAddress = 2;
    string brandContactName = 3;
    string brandContactEmailAddress = 4;
    string brandWebsiteUrl = 5;
}

message BrandLocationVerification {
	string name = 1;
	string verificationState = 2;
	string brand_id = 3;
	string brand_location_id = 4;
}

message AgentLaunch {
	string name = 1;
    BusinessMessagesLaunch businessMessages = 2;
	string brand_id = 3;
	string agent_id = 4;
}

message BusinessMessagesLaunch {
	map<string,BusinessMessagesEntryPointLaunch> launchDetails = 3;
}

enum LaunchState {
	LAUNCH_STATE_UNSPECIFIED = 0;
	LAUNCH_STATE_UNLAUNCHED = 2;
	LAUNCH_STATE_PENDING = 3;
	LAUNCH_STATE_LAUNCHED = 4;
	LAUNCH_STATE_REJECTED = 5;
	LAUNCH_STATE_SUSPENDED = 6;
	LAUNCH_STATE_PENDING_UNLAUNCH = 7;
	LAUNCH_STATE_INVALID_IN_GMB = 8;
}

message BusinessMessagesEntryPointLaunch {
	string entryPoint = 1;
	string launchState = 2;
	repeated string regionCodes = 3;
	enum EntryPoint {
		ENTRY_POINT_UNSPECIFIED	= 0;
		LOCATION = 1;
		NON_LOCAL = 2;
	}
}

message BrandLocationLaunch {
	string name = 1;
	string brand_id = 3;
	string brand_location_id = 4;
}

message Message {
    string name = 1;
    string messageId = 2;
	string conversationId = 3;
    repeated Suggestion suggestions = 4;
    string fallback = 5;
    bool containsRichText = 6;
  
    // Union field content can be only one of the following:
    string text = 7;
    Image image = 8;
    RichCard richCard = 9;
	Representative representative = 10;
}

message Representative {
 	string displayName = 1;
    string avatarImage = 2;

    // Union field representative can be only one of the following:
    string representativeType = 3;
	enum RepresentativeType {
		REPRESENTATIVE_TYPE_UNSPECIFIED = 0;
		BOT = 1;
		HUMAN = 2;
	}
}

message Image {
	ContentInfo contentInfo = 1;
}

message ContentInfo {
	string fileUrl = 1;
    string thumbnailUrl = 2;
    bool forceRefresh = 3;
    string altText = 4;
}

message RichCard {
	StandaloneCard standaloneCard = 1;
	CarouselCard carouselCard = 2;
}

message StandaloneCard {
	CardContent cardContent = 1;
}

message CardContent {
	string title = 1;
    string description = 2;
    Media media = 3;
    repeated Suggestion suggestions = 4;
}

message Media {
	string height = 1;
    // Union field content can be only one of the following:
    ContentInfo contentInfo = 2;
    enum Height {
		HEIGHT_UNSPECIFIED = 0;
		SHORT = 1;
		MEDIUM = 2;
		TALL = 3;
	}
}

message Suggestion {
	SuggestedReply reply = 1;
	SuggestedAction action = 2;
	LiveAgentRequest liveAgentRequest = 3;
	AuthenticationRequest authenticationRequest = 4;
}

message SuggestedReply {
	string text = 1;
    string postbackData = 2;
}

message SuggestedAction {
	string text = 1;
    string postbackData = 2;

    // Union field action can be only one of the following:
    OpenUrlAction openUrlAction = 3;
	DialAction dialAction = 4;
}

message OpenUrlAction {
	string url = 1;
}

message DialAction {
	string phoneNumber = 1; 
}

message LiveAgentRequest {

}

message AuthenticationRequest {
	Oauth oauth = 1;
}

message Oauth {
	string clientId = 1;
    string codeChallenge = 2;
    repeated string scopes = 3;
    string codeChallengeMethod = 4;
}

message CarouselCard {
	string cardWidth = 1;
    repeated CardContent cardContents = 2;
    enum CardWidth {
		CARD_WIDTH_UNSPECIFIED = 0;
		SMALL = 1;
		MEDIUM = 2;
	}
}

message Context {
	string entryPoint = 1;
	UserInfo userInfo = 2;
    //Widget widget = 3;
    string resolvedLocale = 4;
    string customContext = 5;

    // Union field place can be only one of the following:
    string placeId = 6;
    string nearPlaceId = 7;
    // End of list of possible types for union field place.
    enum EntryPoint {
		ENTRY_POINT_UNSPECIFIED	= 0;
		PLACESHEET = 2;
		MAPS = 3;
		FEATURED_SNIPPETS = 4;
		SITELINKS = 5;
		WEB_WIDGET = 6;
		URL = 7;
		LOCAL_PACK = 8;
		PREVIEW = 9;
	}
}

message UserInfo {
	string displayName = 1;
    string userDeviceLocale = 2;
}

message Verify {
	string clientToken = 1;
	string secret = 2;
}