// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1-devel
// 	protoc        v3.17.2
// source: stringee.proto

package stringee

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Event struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId         int64   `protobuf:"varint,2,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Type              string  `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	CallId            string  `protobuf:"bytes,4,opt,name=call_id,json=callId,proto3" json:"call_id,omitempty"`
	RequestFromUserId string  `protobuf:"bytes,5,opt,name=request_from_user_id,json=requestFromUserId,proto3" json:"request_from_user_id,omitempty"`
	AccountSid        string  `protobuf:"bytes,6,opt,name=account_sid,json=accountSid,proto3" json:"account_sid,omitempty"`
	TimestampMs       int64   `protobuf:"varint,7,opt,name=timestamp_ms,json=timestampMs,proto3" json:"timestamp_ms,omitempty"`
	From              *Caller `protobuf:"bytes,8,opt,name=from,proto3" json:"from,omitempty"`
	To                *Caller `protobuf:"bytes,9,opt,name=to,proto3" json:"to,omitempty"`
	CallStatus        string  `protobuf:"bytes,10,opt,name=call_status,json=callStatus,proto3" json:"call_status,omitempty"`
	ClientCustomData  string  `protobuf:"bytes,11,opt,name=clientCustomData,proto3" json:"clientCustomData,omitempty"`
	CallCreatedReason string  `protobuf:"bytes,12,opt,name=callCreatedReason,proto3" json:"callCreatedReason,omitempty"`
	EndCallCause      string  `protobuf:"bytes,13,opt,name=endCallCause,proto3" json:"endCallCause,omitempty"`
	EndedBy           string  `protobuf:"bytes,14,opt,name=endedBy,proto3" json:"endedBy,omitempty"`
	CallType          string  `protobuf:"bytes,15,opt,name=callType,proto3" json:"callType,omitempty"`
	Duration          int64   `protobuf:"varint,16,opt,name=duration,proto3" json:"duration,omitempty"`
	AnswerDuration    int64   `protobuf:"varint,17,opt,name=answerDuration,proto3" json:"answerDuration,omitempty"`
	AgentStatus       string  `protobuf:"bytes,18,opt,name=agent_status,json=agentStatus,proto3" json:"agent_status,omitempty"`
	ToNumber          string  `protobuf:"bytes,19,opt,name=toNumber,proto3" json:"toNumber,omitempty"`
	StartTime         int64   `protobuf:"varint,20,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
}

func (x *Event) Reset() {
	*x = Event{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stringee_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_stringee_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_stringee_proto_rawDescGZIP(), []int{0}
}

func (x *Event) GetProjectId() int64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *Event) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Event) GetCallId() string {
	if x != nil {
		return x.CallId
	}
	return ""
}

func (x *Event) GetRequestFromUserId() string {
	if x != nil {
		return x.RequestFromUserId
	}
	return ""
}

func (x *Event) GetAccountSid() string {
	if x != nil {
		return x.AccountSid
	}
	return ""
}

func (x *Event) GetTimestampMs() int64 {
	if x != nil {
		return x.TimestampMs
	}
	return 0
}

func (x *Event) GetFrom() *Caller {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *Event) GetTo() *Caller {
	if x != nil {
		return x.To
	}
	return nil
}

func (x *Event) GetCallStatus() string {
	if x != nil {
		return x.CallStatus
	}
	return ""
}

func (x *Event) GetClientCustomData() string {
	if x != nil {
		return x.ClientCustomData
	}
	return ""
}

func (x *Event) GetCallCreatedReason() string {
	if x != nil {
		return x.CallCreatedReason
	}
	return ""
}

func (x *Event) GetEndCallCause() string {
	if x != nil {
		return x.EndCallCause
	}
	return ""
}

func (x *Event) GetEndedBy() string {
	if x != nil {
		return x.EndedBy
	}
	return ""
}

func (x *Event) GetCallType() string {
	if x != nil {
		return x.CallType
	}
	return ""
}

func (x *Event) GetDuration() int64 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *Event) GetAnswerDuration() int64 {
	if x != nil {
		return x.AnswerDuration
	}
	return 0
}

func (x *Event) GetAgentStatus() string {
	if x != nil {
		return x.AgentStatus
	}
	return ""
}

func (x *Event) GetToNumber() string {
	if x != nil {
		return x.ToNumber
	}
	return ""
}

func (x *Event) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

type Caller struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type     string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Number   string `protobuf:"bytes,3,opt,name=number,proto3" json:"number,omitempty"`
	Alias    string `protobuf:"bytes,4,opt,name=alias,proto3" json:"alias,omitempty"`
	IsOnline bool   `protobuf:"varint,5,opt,name=is_online,json=isOnline,proto3" json:"is_online,omitempty"`
}

func (x *Caller) Reset() {
	*x = Caller{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stringee_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Caller) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Caller) ProtoMessage() {}

func (x *Caller) ProtoReflect() protoreflect.Message {
	mi := &file_stringee_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Caller.ProtoReflect.Descriptor instead.
func (*Caller) Descriptor() ([]byte, []int) {
	return file_stringee_proto_rawDescGZIP(), []int{1}
}

func (x *Caller) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Caller) GetNumber() string {
	if x != nil {
		return x.Number
	}
	return ""
}

func (x *Caller) GetAlias() string {
	if x != nil {
		return x.Alias
	}
	return ""
}

func (x *Caller) GetIsOnline() bool {
	if x != nil {
		return x.IsOnline
	}
	return false
}

type SCCORequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CallId       string `protobuf:"bytes,8,opt,name=callId,proto3" json:"callId,omitempty"`
	Uuid         string `protobuf:"bytes,9,opt,name=uuid,proto3" json:"uuid,omitempty"`
	From         string `protobuf:"bytes,2,opt,name=from,proto3" json:"from,omitempty"`
	To           string `protobuf:"bytes,3,opt,name=to,proto3" json:"to,omitempty"`
	FromInternal bool   `protobuf:"varint,5,opt,name=fromInternal,proto3" json:"fromInternal,omitempty"`
	ProjectId    int64  `protobuf:"varint,7,opt,name=projectId,proto3" json:"projectId,omitempty"`
	Custom       string `protobuf:"bytes,4,opt,name=custom,proto3" json:"custom,omitempty"`
	UserId       string `protobuf:"bytes,6,opt,name=userId,proto3" json:"userId,omitempty"`
}

func (x *SCCORequest) Reset() {
	*x = SCCORequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stringee_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SCCORequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SCCORequest) ProtoMessage() {}

func (x *SCCORequest) ProtoReflect() protoreflect.Message {
	mi := &file_stringee_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SCCORequest.ProtoReflect.Descriptor instead.
func (*SCCORequest) Descriptor() ([]byte, []int) {
	return file_stringee_proto_rawDescGZIP(), []int{2}
}

func (x *SCCORequest) GetCallId() string {
	if x != nil {
		return x.CallId
	}
	return ""
}

func (x *SCCORequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *SCCORequest) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *SCCORequest) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *SCCORequest) GetFromInternal() bool {
	if x != nil {
		return x.FromInternal
	}
	return false
}

func (x *SCCORequest) GetProjectId() int64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *SCCORequest) GetCustom() string {
	if x != nil {
		return x.Custom
	}
	return ""
}

func (x *SCCORequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type SCCO struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Actions []*Action `protobuf:"bytes,2,rep,name=actions,proto3" json:"actions,omitempty"`
}

func (x *SCCO) Reset() {
	*x = SCCO{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stringee_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SCCO) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SCCO) ProtoMessage() {}

func (x *SCCO) ProtoReflect() protoreflect.Message {
	mi := &file_stringee_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SCCO.ProtoReflect.Descriptor instead.
func (*SCCO) Descriptor() ([]byte, []int) {
	return file_stringee_proto_rawDescGZIP(), []int{3}
}

func (x *SCCO) GetActions() []*Action {
	if x != nil {
		return x.Actions
	}
	return nil
}

type Action struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Action string `protobuf:"bytes,2,opt,name=action,proto3" json:"action,omitempty"`
	// connect:
	From           *Caller `protobuf:"bytes,3,opt,name=from,proto3" json:"from,omitempty"`
	To             *Caller `protobuf:"bytes,4,opt,name=to,proto3" json:"to,omitempty"`
	CustomData     string  `protobuf:"bytes,5,opt,name=customData,proto3" json:"customData,omitempty"`
	ContinueOnFail bool    `protobuf:"varint,6,opt,name=continueOnFail,proto3" json:"continueOnFail,omitempty"`
	OnFailEventUrl string  `protobuf:"bytes,7,opt,name=onFailEventUrl,proto3" json:"onFailEventUrl,omitempty"`
	Timeout        int64   `protobuf:"varint,8,opt,name=timeout,proto3" json:"timeout,omitempty"`
	MaxConnectTime int64   `protobuf:"varint,9,opt,name=maxConnectTime,proto3" json:"maxConnectTime,omitempty"`
	PeerToPeerCall bool    `protobuf:"varint,10,opt,name=peerToPeerCall,proto3" json:"peerToPeerCall,omitempty"`
	// record:
	EventUrl string `protobuf:"bytes,11,opt,name=eventUrl,proto3" json:"eventUrl,omitempty"`
	Format   string `protobuf:"bytes,12,opt,name=format,proto3" json:"format,omitempty"` // mp3, wav
	// recordMessage: eventUrl, format, timeout &
	EndOnKey  string `protobuf:"bytes,14,opt,name=endOnKey,proto3" json:"endOnKey,omitempty"`
	BeepStart string `protobuf:"bytes,15,opt,name=beepStart,proto3" json:"beepStart,omitempty"` // true
	// talk:
	Text              string `protobuf:"bytes,16,opt,name=text,proto3" json:"text,omitempty"`
	Voice             string `protobuf:"bytes,17,opt,name=voice,proto3" json:"voice,omitempty"`  // female, male
	Speed             int32  `protobuf:"varint,18,opt,name=speed,proto3" json:"speed,omitempty"` // -3..3
	BargeIn           bool   `protobuf:"varint,19,opt,name=bargeIn,proto3" json:"bargeIn,omitempty"`
	Loop              int32  `protobuf:"varint,20,opt,name=loop,proto3" json:"loop,omitempty"`
	SilenceTime       int64  `protobuf:"varint,21,opt,name=silenceTime,proto3" json:"silenceTime,omitempty"`
	AnswerCall        bool   `protobuf:"varint,22,opt,name=answerCall,proto3" json:"answerCall,omitempty"`
	ContinueWhilePlay bool   `protobuf:"varint,23,opt,name=continueWhilePlay,proto3" json:"continueWhilePlay,omitempty"`
	// play: bargeIn, loop, silenceTime, answerCall, continueWhilePlay &
	FileName string `protobuf:"bytes,24,opt,name=fileName,proto3" json:"fileName,omitempty"`
	// input: eventUrl, timeout &
	SubmitOnHash bool   `protobuf:"varint,25,opt,name=submitOnHash,proto3" json:"submitOnHash,omitempty"`
	CustomField  string `protobuf:"bytes,26,opt,name=customField,proto3" json:"customField,omitempty"`
	MaxDigits    int32  `protobuf:"varint,27,opt,name=maxDigits,proto3" json:"maxDigits,omitempty"`
}

func (x *Action) Reset() {
	*x = Action{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stringee_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Action) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Action) ProtoMessage() {}

func (x *Action) ProtoReflect() protoreflect.Message {
	mi := &file_stringee_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Action.ProtoReflect.Descriptor instead.
func (*Action) Descriptor() ([]byte, []int) {
	return file_stringee_proto_rawDescGZIP(), []int{4}
}

func (x *Action) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *Action) GetFrom() *Caller {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *Action) GetTo() *Caller {
	if x != nil {
		return x.To
	}
	return nil
}

func (x *Action) GetCustomData() string {
	if x != nil {
		return x.CustomData
	}
	return ""
}

func (x *Action) GetContinueOnFail() bool {
	if x != nil {
		return x.ContinueOnFail
	}
	return false
}

func (x *Action) GetOnFailEventUrl() string {
	if x != nil {
		return x.OnFailEventUrl
	}
	return ""
}

func (x *Action) GetTimeout() int64 {
	if x != nil {
		return x.Timeout
	}
	return 0
}

func (x *Action) GetMaxConnectTime() int64 {
	if x != nil {
		return x.MaxConnectTime
	}
	return 0
}

func (x *Action) GetPeerToPeerCall() bool {
	if x != nil {
		return x.PeerToPeerCall
	}
	return false
}

func (x *Action) GetEventUrl() string {
	if x != nil {
		return x.EventUrl
	}
	return ""
}

func (x *Action) GetFormat() string {
	if x != nil {
		return x.Format
	}
	return ""
}

func (x *Action) GetEndOnKey() string {
	if x != nil {
		return x.EndOnKey
	}
	return ""
}

func (x *Action) GetBeepStart() string {
	if x != nil {
		return x.BeepStart
	}
	return ""
}

func (x *Action) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *Action) GetVoice() string {
	if x != nil {
		return x.Voice
	}
	return ""
}

func (x *Action) GetSpeed() int32 {
	if x != nil {
		return x.Speed
	}
	return 0
}

func (x *Action) GetBargeIn() bool {
	if x != nil {
		return x.BargeIn
	}
	return false
}

func (x *Action) GetLoop() int32 {
	if x != nil {
		return x.Loop
	}
	return 0
}

func (x *Action) GetSilenceTime() int64 {
	if x != nil {
		return x.SilenceTime
	}
	return 0
}

func (x *Action) GetAnswerCall() bool {
	if x != nil {
		return x.AnswerCall
	}
	return false
}

func (x *Action) GetContinueWhilePlay() bool {
	if x != nil {
		return x.ContinueWhilePlay
	}
	return false
}

func (x *Action) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *Action) GetSubmitOnHash() bool {
	if x != nil {
		return x.SubmitOnHash
	}
	return false
}

func (x *Action) GetCustomField() string {
	if x != nil {
		return x.CustomField
	}
	return ""
}

func (x *Action) GetMaxDigits() int32 {
	if x != nil {
		return x.MaxDigits
	}
	return 0
}

type InputEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CallId      string `protobuf:"bytes,2,opt,name=call_id,json=callId,proto3" json:"call_id,omitempty"`
	Time        string `protobuf:"bytes,3,opt,name=time,proto3" json:"time,omitempty"` // TODO int64
	Dtmf        string `protobuf:"bytes,4,opt,name=dtmf,proto3" json:"dtmf,omitempty"` // numbers input by user
	CustomField string `protobuf:"bytes,5,opt,name=customField,proto3" json:"customField,omitempty"`
	Timeout     bool   `protobuf:"varint,6,opt,name=timeout,proto3" json:"timeout,omitempty"`
}

func (x *InputEvent) Reset() {
	*x = InputEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stringee_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InputEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InputEvent) ProtoMessage() {}

func (x *InputEvent) ProtoReflect() protoreflect.Message {
	mi := &file_stringee_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InputEvent.ProtoReflect.Descriptor instead.
func (*InputEvent) Descriptor() ([]byte, []int) {
	return file_stringee_proto_rawDescGZIP(), []int{5}
}

func (x *InputEvent) GetCallId() string {
	if x != nil {
		return x.CallId
	}
	return ""
}

func (x *InputEvent) GetTime() string {
	if x != nil {
		return x.Time
	}
	return ""
}

func (x *InputEvent) GetDtmf() string {
	if x != nil {
		return x.Dtmf
	}
	return ""
}

func (x *InputEvent) GetCustomField() string {
	if x != nil {
		return x.CustomField
	}
	return ""
}

func (x *InputEvent) GetTimeout() bool {
	if x != nil {
		return x.Timeout
	}
	return false
}

type Project struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                 string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Name               string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	AnswerUrl          string `protobuf:"bytes,4,opt,name=answer_url,json=answerUrl,proto3" json:"answer_url,omitempty"`
	CallbackUrl        string `protobuf:"bytes,5,opt,name=callback_url,json=callbackUrl,proto3" json:"callback_url,omitempty"`
	ApiKeySid          string `protobuf:"bytes,6,opt,name=api_key_sid,json=apiKeySid,proto3" json:"api_key_sid,omitempty"`
	ApiKey             string `protobuf:"bytes,7,opt,name=api_key,json=apiKey,proto3" json:"api_key,omitempty"`
	AccessToken        string `protobuf:"bytes,8,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	AccountId          string `protobuf:"bytes,9,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	LastCalled         int64  `protobuf:"varint,10,opt,name=last_called,json=lastCalled,proto3" json:"last_called,omitempty"`
	FirstCalledFailure int64  `protobuf:"varint,12,opt,name=first_called_failure,json=firstCalledFailure,proto3" json:"first_called_failure,omitempty"`
	LastCalledSuccess  int64  `protobuf:"varint,11,opt,name=last_called_success,json=lastCalledSuccess,proto3" json:"last_called_success,omitempty"`
	LastHook           int64  `protobuf:"varint,13,opt,name=last_hook,json=lastHook,proto3" json:"last_hook,omitempty"`
	LastRefreshTokenAt int64  `protobuf:"varint,14,opt,name=last_refresh_token_at,json=lastRefreshTokenAt,proto3" json:"last_refresh_token_at,omitempty"`
}

func (x *Project) Reset() {
	*x = Project{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stringee_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Project) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Project) ProtoMessage() {}

func (x *Project) ProtoReflect() protoreflect.Message {
	mi := &file_stringee_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Project.ProtoReflect.Descriptor instead.
func (*Project) Descriptor() ([]byte, []int) {
	return file_stringee_proto_rawDescGZIP(), []int{6}
}

func (x *Project) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Project) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Project) GetAnswerUrl() string {
	if x != nil {
		return x.AnswerUrl
	}
	return ""
}

func (x *Project) GetCallbackUrl() string {
	if x != nil {
		return x.CallbackUrl
	}
	return ""
}

func (x *Project) GetApiKeySid() string {
	if x != nil {
		return x.ApiKeySid
	}
	return ""
}

func (x *Project) GetApiKey() string {
	if x != nil {
		return x.ApiKey
	}
	return ""
}

func (x *Project) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *Project) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *Project) GetLastCalled() int64 {
	if x != nil {
		return x.LastCalled
	}
	return 0
}

func (x *Project) GetFirstCalledFailure() int64 {
	if x != nil {
		return x.FirstCalledFailure
	}
	return 0
}

func (x *Project) GetLastCalledSuccess() int64 {
	if x != nil {
		return x.LastCalledSuccess
	}
	return 0
}

func (x *Project) GetLastHook() int64 {
	if x != nil {
		return x.LastHook
	}
	return 0
}

func (x *Project) GetLastRefreshTokenAt() int64 {
	if x != nil {
		return x.LastRefreshTokenAt
	}
	return 0
}

var File_stringee_proto protoreflect.FileDescriptor

var file_stringee_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x65, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x08, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x65, 0x65, 0x22, 0x87, 0x05, 0x0a, 0x05, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x61, 0x6c, 0x6c, 0x5f,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x61, 0x6c, 0x6c, 0x49, 0x64,
	0x12, 0x2f, 0x0a, 0x14, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x66, 0x72, 0x6f, 0x6d,
	0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x46, 0x72, 0x6f, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x73, 0x69, 0x64,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53,
	0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x5f,
	0x6d, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x4d, 0x73, 0x12, 0x24, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x65, 0x65, 0x2e, 0x43,
	0x61, 0x6c, 0x6c, 0x65, 0x72, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x20, 0x0a, 0x02, 0x74,
	0x6f, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x65, 0x65, 0x2e, 0x43, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x1f, 0x0a,
	0x0b, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x63, 0x61, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2a,
	0x0a, 0x10, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x44, 0x61,
	0x74, 0x61, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2c, 0x0a, 0x11, 0x63, 0x61,
	0x6c, 0x6c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x63, 0x61, 0x6c, 0x6c, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x65, 0x6e, 0x64, 0x43,
	0x61, 0x6c, 0x6c, 0x43, 0x61, 0x75, 0x73, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x65, 0x6e, 0x64, 0x43, 0x61, 0x6c, 0x6c, 0x43, 0x61, 0x75, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x65, 0x6e, 0x64, 0x65, 0x64, 0x42, 0x79, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65,
	0x6e, 0x64, 0x65, 0x64, 0x42, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x6c, 0x6c, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x6c, 0x6c, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x10,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26,
	0x0a, 0x0e, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x11, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x44, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x67,
	0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x6f, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x6f, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x22, 0x67, 0x0a, 0x06, 0x43, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x6c,
	0x69, 0x61, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73,
	0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x22, 0xcf, 0x01,
	0x0a, 0x0b, 0x53, 0x43, 0x43, 0x4f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x63, 0x61, 0x6c, 0x6c, 0x49, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63,
	0x61, 0x6c, 0x6c, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f,
	0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x0e, 0x0a,
	0x02, 0x74, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x22, 0x0a,
	0x0c, 0x66, 0x72, 0x6f, 0x6d, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0c, 0x66, 0x72, 0x6f, 0x6d, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22,
	0x32, 0x0a, 0x04, 0x53, 0x43, 0x43, 0x4f, 0x12, 0x2a, 0x0a, 0x07, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x65, 0x65, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x22, 0x8e, 0x06, 0x0a, 0x06, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16,
	0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x65, 0x65, 0x2e,
	0x43, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x20, 0x0a, 0x02,
	0x74, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x65, 0x65, 0x2e, 0x43, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x1e,
	0x0a, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x12, 0x26,
	0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x65, 0x4f, 0x6e, 0x46, 0x61, 0x69, 0x6c,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x65,
	0x4f, 0x6e, 0x46, 0x61, 0x69, 0x6c, 0x12, 0x26, 0x0a, 0x0e, 0x6f, 0x6e, 0x46, 0x61, 0x69, 0x6c,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x55, 0x72, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x6f, 0x6e, 0x46, 0x61, 0x69, 0x6c, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x55, 0x72, 0x6c, 0x12, 0x18,
	0x0a, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x6d, 0x61, 0x78, 0x43,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0e, 0x6d, 0x61, 0x78, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x26, 0x0a, 0x0e, 0x70, 0x65, 0x65, 0x72, 0x54, 0x6f, 0x50, 0x65, 0x65, 0x72, 0x43, 0x61,
	0x6c, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x70, 0x65, 0x65, 0x72, 0x54, 0x6f,
	0x50, 0x65, 0x65, 0x72, 0x43, 0x61, 0x6c, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x55, 0x72, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x55, 0x72, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x65, 0x6e, 0x64, 0x4f, 0x6e, 0x4b, 0x65, 0x79, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x65, 0x6e, 0x64, 0x4f, 0x6e, 0x4b, 0x65, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x65, 0x65, 0x70,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x65, 0x65,
	0x70, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x10,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x6f,
	0x69, 0x63, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x6f, 0x69, 0x63, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x73, 0x70, 0x65, 0x65, 0x64, 0x18, 0x12, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x73, 0x70, 0x65, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x72, 0x67, 0x65, 0x49,
	0x6e, 0x18, 0x13, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x62, 0x61, 0x72, 0x67, 0x65, 0x49, 0x6e,
	0x12, 0x12, 0x0a, 0x04, 0x6c, 0x6f, 0x6f, 0x70, 0x18, 0x14, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x6c, 0x6f, 0x6f, 0x70, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x69, 0x6c, 0x65, 0x6e, 0x63, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x73, 0x69, 0x6c, 0x65, 0x6e,
	0x63, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72,
	0x43, 0x61, 0x6c, 0x6c, 0x18, 0x16, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x61, 0x6e, 0x73, 0x77,
	0x65, 0x72, 0x43, 0x61, 0x6c, 0x6c, 0x12, 0x2c, 0x0a, 0x11, 0x63, 0x6f, 0x6e, 0x74, 0x69, 0x6e,
	0x75, 0x65, 0x57, 0x68, 0x69, 0x6c, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x18, 0x17, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x11, 0x63, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x65, 0x57, 0x68, 0x69, 0x6c, 0x65,
	0x50, 0x6c, 0x61, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x22, 0x0a, 0x0c, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x4f, 0x6e, 0x48, 0x61, 0x73, 0x68,
	0x18, 0x19, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x4f, 0x6e,
	0x48, 0x61, 0x73, 0x68, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x61, 0x78, 0x44, 0x69, 0x67,
	0x69, 0x74, 0x73, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6d, 0x61, 0x78, 0x44, 0x69,
	0x67, 0x69, 0x74, 0x73, 0x22, 0x89, 0x01, 0x0a, 0x0a, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x61, 0x6c, 0x6c, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x64, 0x74, 0x6d, 0x66, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x64, 0x74, 0x6d, 0x66, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75,
	0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74,
	0x22, 0xbd, 0x03, 0x0a, 0x07, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x55, 0x72, 0x6c, 0x12,
	0x21, 0x0a, 0x0c, 0x63, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x75, 0x72, 0x6c, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x55,
	0x72, 0x6c, 0x12, 0x1e, 0x0a, 0x0b, 0x61, 0x70, 0x69, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x73, 0x69,
	0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x53,
	0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x70, 0x69, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x61,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1d,
	0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1f, 0x0a,
	0x0b, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x64, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x6c, 0x61, 0x73, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x65, 0x64, 0x12, 0x30,
	0x0a, 0x14, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x64, 0x5f, 0x66,
	0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x12, 0x66, 0x69,
	0x72, 0x73, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x65, 0x64, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65,
	0x12, 0x2e, 0x0a, 0x13, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x64, 0x5f,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x6c,
	0x61, 0x73, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x65, 0x64, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x68, 0x6f, 0x6f, 0x6b, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x48, 0x6f, 0x6f, 0x6b, 0x12, 0x31, 0x0a,
	0x15, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x5f, 0x61, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x12, 0x6c, 0x61,
	0x73, 0x74, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x41, 0x74,
	0x42, 0x22, 0x5a, 0x20, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73,
	0x75, 0x62, 0x69, 0x7a, 0x2f, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x2f, 0x73, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x65, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_stringee_proto_rawDescOnce sync.Once
	file_stringee_proto_rawDescData = file_stringee_proto_rawDesc
)

func file_stringee_proto_rawDescGZIP() []byte {
	file_stringee_proto_rawDescOnce.Do(func() {
		file_stringee_proto_rawDescData = protoimpl.X.CompressGZIP(file_stringee_proto_rawDescData)
	})
	return file_stringee_proto_rawDescData
}

var file_stringee_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_stringee_proto_goTypes = []interface{}{
	(*Event)(nil),       // 0: stringee.Event
	(*Caller)(nil),      // 1: stringee.Caller
	(*SCCORequest)(nil), // 2: stringee.SCCORequest
	(*SCCO)(nil),        // 3: stringee.SCCO
	(*Action)(nil),      // 4: stringee.Action
	(*InputEvent)(nil),  // 5: stringee.InputEvent
	(*Project)(nil),     // 6: stringee.Project
}
var file_stringee_proto_depIdxs = []int32{
	1, // 0: stringee.Event.from:type_name -> stringee.Caller
	1, // 1: stringee.Event.to:type_name -> stringee.Caller
	4, // 2: stringee.SCCO.actions:type_name -> stringee.Action
	1, // 3: stringee.Action.from:type_name -> stringee.Caller
	1, // 4: stringee.Action.to:type_name -> stringee.Caller
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_stringee_proto_init() }
func file_stringee_proto_init() {
	if File_stringee_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_stringee_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Event); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stringee_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Caller); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stringee_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SCCORequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stringee_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SCCO); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stringee_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Action); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stringee_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InputEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stringee_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Project); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_stringee_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_stringee_proto_goTypes,
		DependencyIndexes: file_stringee_proto_depIdxs,
		MessageInfos:      file_stringee_proto_msgTypes,
	}.Build()
	File_stringee_proto = out.File
	file_stringee_proto_rawDesc = nil
	file_stringee_proto_goTypes = nil
	file_stringee_proto_depIdxs = nil
}
