// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.31.0
// source: common.proto

package common

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Type int32

const (
	Type_unknown Type = 0
	Type_user    Type = 1
	Type_agent   Type = 2
	Type_subiz   Type = 3 // system, internal service
	// app = 4; // dashboard, accmgr
	Type_connector Type = 6 // fabikon, mailkon, subiz-driver, stringee-driver
	Type_bot       Type = 7 // subiz bot
	Type_dummy     Type = 8 // agent that cannot handle action
	Type_workflow  Type = 9
)

// Enum value maps for Type.
var (
	Type_name = map[int32]string{
		0: "unknown",
		1: "user",
		2: "agent",
		3: "subiz",
		6: "connector",
		7: "bot",
		8: "dummy",
		9: "workflow",
	}
	Type_value = map[string]int32{
		"unknown":   0,
		"user":      1,
		"agent":     2,
		"subiz":     3,
		"connector": 6,
		"bot":       7,
		"dummy":     8,
		"workflow":  9,
	}
)

func (x Type) Enum() *Type {
	p := new(Type)
	*p = x
	return p
}

func (x Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Type) Descriptor() protoreflect.EnumDescriptor {
	return file_common_proto_enumTypes[0].Descriptor()
}

func (Type) Type() protoreflect.EnumType {
	return &file_common_proto_enumTypes[0]
}

func (x Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Type.Descriptor instead.
func (Type) EnumDescriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{0}
}

type Device_DeviceType int32

const (
	Device_unknown Device_DeviceType = 0
	Device_mobile  Device_DeviceType = 1
	Device_tablet  Device_DeviceType = 2
	Device_desktop Device_DeviceType = 3
)

// Enum value maps for Device_DeviceType.
var (
	Device_DeviceType_name = map[int32]string{
		0: "unknown",
		1: "mobile",
		2: "tablet",
		3: "desktop",
	}
	Device_DeviceType_value = map[string]int32{
		"unknown": 0,
		"mobile":  1,
		"tablet":  2,
		"desktop": 3,
	}
)

func (x Device_DeviceType) Enum() *Device_DeviceType {
	p := new(Device_DeviceType)
	*p = x
	return p
}

func (x Device_DeviceType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Device_DeviceType) Descriptor() protoreflect.EnumDescriptor {
	return file_common_proto_enumTypes[1].Descriptor()
}

func (Device_DeviceType) Type() protoreflect.EnumType {
	return &file_common_proto_enumTypes[1]
}

func (x Device_DeviceType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Device_DeviceType.Descriptor instead.
func (Device_DeviceType) EnumDescriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{2, 0}
}

type Device_SourceType int32

const (
	Device_direct      Device_SourceType = 0
	Device_referring   Device_SourceType = 1
	Device_organic     Device_SourceType = 2
	Device_social      Device_SourceType = 3
	Device_advertising Device_SourceType = 4
)

// Enum value maps for Device_SourceType.
var (
	Device_SourceType_name = map[int32]string{
		0: "direct",
		1: "referring",
		2: "organic",
		3: "social",
		4: "advertising",
	}
	Device_SourceType_value = map[string]int32{
		"direct":      0,
		"referring":   1,
		"organic":     2,
		"social":      3,
		"advertising": 4,
	}
)

func (x Device_SourceType) Enum() *Device_SourceType {
	p := new(Device_SourceType)
	*p = x
	return p
}

func (x Device_SourceType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Device_SourceType) Descriptor() protoreflect.EnumDescriptor {
	return file_common_proto_enumTypes[2].Descriptor()
}

func (Device_SourceType) Type() protoreflect.EnumType {
	return &file_common_proto_enumTypes[2]
}

func (x Device_SourceType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Device_SourceType.Descriptor instead.
func (Device_SourceType) EnumDescriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{2, 1}
}

type Context struct {
	state      protoimpl.MessageState `protogen:"open.v1"`
	Credential *Credential            `protobuf:"bytes,6,opt,name=credential,proto3" json:"credential,omitempty"`
	ByDevice   *Device                `protobuf:"bytes,10,opt,name=by_device,json=byDevice,proto3" json:"by_device,omitempty"`
	// list of used fields in the object
	Fields        []string `protobuf:"bytes,21,rep,name=fields,proto3" json:"fields,omitempty"`
	FromService   string   `protobuf:"bytes,22,opt,name=from_service,json=fromService,proto3" json:"from_service,omitempty"`         // campaign, bot
	FromServiceId string   `protobuf:"bytes,23,opt,name=from_service_id,json=fromServiceId,proto3" json:"from_service_id,omitempty"` // cp329023
	CreditId      string   `protobuf:"bytes,24,opt,name=credit_id,json=creditId,proto3" json:"credit_id,omitempty"`
	TraceId       string   `protobuf:"bytes,25,opt,name=trace_id,json=traceId,proto3" json:"trace_id,omitempty"`
	SpanId        string   `protobuf:"bytes,26,opt,name=span_id,json=spanId,proto3" json:"span_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Context) Reset() {
	*x = Context{}
	mi := &file_common_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Context) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Context) ProtoMessage() {}

func (x *Context) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Context.ProtoReflect.Descriptor instead.
func (*Context) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{0}
}

func (x *Context) GetCredential() *Credential {
	if x != nil {
		return x.Credential
	}
	return nil
}

func (x *Context) GetByDevice() *Device {
	if x != nil {
		return x.ByDevice
	}
	return nil
}

func (x *Context) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *Context) GetFromService() string {
	if x != nil {
		return x.FromService
	}
	return ""
}

func (x *Context) GetFromServiceId() string {
	if x != nil {
		return x.FromServiceId
	}
	return ""
}

func (x *Context) GetCreditId() string {
	if x != nil {
		return x.CreditId
	}
	return ""
}

func (x *Context) GetTraceId() string {
	if x != nil {
		return x.TraceId
	}
	return ""
}

func (x *Context) GetSpanId() string {
	if x != nil {
		return x.SpanId
	}
	return ""
}

type Uint128 struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Lo            uint64                 `protobuf:"varint,1,opt,name=lo,proto3" json:"lo,omitempty"`
	Hi            uint64                 `protobuf:"varint,2,opt,name=hi,proto3" json:"hi,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Uint128) Reset() {
	*x = Uint128{}
	mi := &file_common_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Uint128) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Uint128) ProtoMessage() {}

func (x *Uint128) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Uint128.ProtoReflect.Descriptor instead.
func (*Uint128) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{1}
}

func (x *Uint128) GetLo() uint64 {
	if x != nil {
		return x.Lo
	}
	return 0
}

func (x *Uint128) GetHi() uint64 {
	if x != nil {
		return x.Hi
	}
	return 0
}

type Device struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Ip               string                 `protobuf:"bytes,3,opt,name=ip,proto3" json:"ip,omitempty"`
	UserAgent        string                 `protobuf:"bytes,4,opt,name=user_agent,json=userAgent,proto3" json:"user_agent,omitempty"` // hash
	ScreenResolution string                 `protobuf:"bytes,5,opt,name=screen_resolution,json=screenResolution,proto3" json:"screen_resolution,omitempty"`
	Timezone         string                 `protobuf:"bytes,6,opt,name=timezone,proto3" json:"timezone,omitempty"` // hash
	Language         string                 `protobuf:"bytes,7,opt,name=language,proto3" json:"language,omitempty"`
	Referrer         string                 `protobuf:"bytes,8,opt,name=referrer,proto3" json:"referrer,omitempty"` // hash, referer of api.subiz.com.vn (the current page that user is viewing)
	Type             string                 `protobuf:"bytes,9,opt,name=type,proto3" json:"type,omitempty"`         // 0 - 1 - 2 -3
	Platform         string                 `protobuf:"bytes,10,opt,name=platform,proto3" json:"platform,omitempty"`
	// referrer of referrer
	// for example: user go to google.com then click a link to company.com, a request
	// will be sent to api.subiz.com.vn
	// referer will be 'company.com' and source_referer will be 'google.com'
	SourceReferrer string `protobuf:"bytes,11,opt,name=source_referrer,json=sourceReferrer,proto3" json:"source_referrer,omitempty"`
	// repeated string ga_tracking_ids = 12;
	PageUrl   string `protobuf:"bytes,13,opt,name=page_url,json=pageUrl,proto3" json:"page_url,omitempty"`
	PageTitle string `protobuf:"bytes,14,opt,name=page_title,json=pageTitle,proto3" json:"page_title,omitempty"`
	// string ga_client_id = 15;
	CityName      string           `protobuf:"bytes,18,opt,name=city_name,json=cityName,proto3" json:"city_name,omitempty"`                // derived from ip
	CountryName   string           `protobuf:"bytes,19,opt,name=country_name,json=countryName,proto3" json:"country_name,omitempty"`       // derived from ip
	ContinentCode string           `protobuf:"bytes,20,opt,name=continent_code,json=continentCode,proto3" json:"continent_code,omitempty"` // derived from ip
	Latitude      float32          `protobuf:"fixed32,22,opt,name=latitude,proto3" json:"latitude,omitempty"`                              // derived from ip
	Longitude     float32          `protobuf:"fixed32,23,opt,name=longitude,proto3" json:"longitude,omitempty"`                            // derived from ip
	PostalCode    string           `protobuf:"bytes,24,opt,name=postal_code,json=postalCode,proto3" json:"postal_code,omitempty"`          // derived from ip
	Isp           string           `protobuf:"bytes,27,opt,name=isp,proto3" json:"isp,omitempty"`                                          // derived from ip
	ContinentName string           `protobuf:"bytes,28,opt,name=continent_name,json=continentName,proto3" json:"continent_name,omitempty"` // derived from ip
	CountryCode   string           `protobuf:"bytes,29,opt,name=country_code,json=countryCode,proto3" json:"country_code,omitempty"`       // derived from ip
	BrowserName   string           `protobuf:"bytes,32,opt,name=browser_name,json=browserName,proto3" json:"browser_name,omitempty"`       // filled
	AdsNetwork    string           `protobuf:"bytes,33,opt,name=ads_network,json=adsNetwork,proto3" json:"ads_network,omitempty"`          // google_adwords
	Source        string           `protobuf:"bytes,34,opt,name=source,proto3" json:"source,omitempty"`                                    // direct, referring, organic, social, advertising
	Utm           *SessionCampaign `protobuf:"bytes,36,opt,name=utm,proto3" json:"utm,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Device) Reset() {
	*x = Device{}
	mi := &file_common_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Device) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Device) ProtoMessage() {}

func (x *Device) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Device.ProtoReflect.Descriptor instead.
func (*Device) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{2}
}

func (x *Device) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *Device) GetUserAgent() string {
	if x != nil {
		return x.UserAgent
	}
	return ""
}

func (x *Device) GetScreenResolution() string {
	if x != nil {
		return x.ScreenResolution
	}
	return ""
}

func (x *Device) GetTimezone() string {
	if x != nil {
		return x.Timezone
	}
	return ""
}

func (x *Device) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *Device) GetReferrer() string {
	if x != nil {
		return x.Referrer
	}
	return ""
}

func (x *Device) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Device) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

func (x *Device) GetSourceReferrer() string {
	if x != nil {
		return x.SourceReferrer
	}
	return ""
}

func (x *Device) GetPageUrl() string {
	if x != nil {
		return x.PageUrl
	}
	return ""
}

func (x *Device) GetPageTitle() string {
	if x != nil {
		return x.PageTitle
	}
	return ""
}

func (x *Device) GetCityName() string {
	if x != nil {
		return x.CityName
	}
	return ""
}

func (x *Device) GetCountryName() string {
	if x != nil {
		return x.CountryName
	}
	return ""
}

func (x *Device) GetContinentCode() string {
	if x != nil {
		return x.ContinentCode
	}
	return ""
}

func (x *Device) GetLatitude() float32 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *Device) GetLongitude() float32 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *Device) GetPostalCode() string {
	if x != nil {
		return x.PostalCode
	}
	return ""
}

func (x *Device) GetIsp() string {
	if x != nil {
		return x.Isp
	}
	return ""
}

func (x *Device) GetContinentName() string {
	if x != nil {
		return x.ContinentName
	}
	return ""
}

func (x *Device) GetCountryCode() string {
	if x != nil {
		return x.CountryCode
	}
	return ""
}

func (x *Device) GetBrowserName() string {
	if x != nil {
		return x.BrowserName
	}
	return ""
}

func (x *Device) GetAdsNetwork() string {
	if x != nil {
		return x.AdsNetwork
	}
	return ""
}

func (x *Device) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *Device) GetUtm() *SessionCampaign {
	if x != nil {
		return x.Utm
	}
	return nil
}

type PackedDevice struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	IPv4             uint32                 `protobuf:"varint,3,opt,name=IPv4,proto3" json:"IPv4,omitempty"`
	IPv6Lo           uint64                 `protobuf:"varint,4,opt,name=IPv6_lo,json=IPv6Lo,proto3" json:"IPv6_lo,omitempty"`
	IPv6Hi           uint64                 `protobuf:"varint,5,opt,name=IPv6_hi,json=IPv6Hi,proto3" json:"IPv6_hi,omitempty"`
	UserAgent        int64                  `protobuf:"varint,6,opt,name=user_agent,json=userAgent,proto3" json:"user_agent,omitempty"` // hash
	ScreenResolution int64                  `protobuf:"varint,7,opt,name=screen_resolution,json=screenResolution,proto3" json:"screen_resolution,omitempty"`
	Timezone         int64                  `protobuf:"varint,8,opt,name=timezone,proto3" json:"timezone,omitempty"` // hash
	Language         int64                  `protobuf:"varint,9,opt,name=language,proto3" json:"language,omitempty"`
	Referrer         int64                  `protobuf:"varint,10,opt,name=referrer,proto3" json:"referrer,omitempty"` // hash, referer of api.subiz.com.vn (the current page that user is viewing)
	Type             int32                  `protobuf:"varint,11,opt,name=type,proto3" json:"type,omitempty"`         // 0 - 1 - 2 -3
	// referrer of referrer
	// for example: user go to google.com then click a link to company.com, a request
	// will be sent to api.subiz.com.vn
	// referer will be 'company.com' and source_referer will be 'google.com'
	SourceReferrer int64 `protobuf:"varint,12,opt,name=source_referrer,json=sourceReferrer,proto3" json:"source_referrer,omitempty"`
	// repeated string ga_tracking_ids = 12;
	PageUrl       int64                  `protobuf:"varint,13,opt,name=page_url,json=pageUrl,proto3" json:"page_url,omitempty"`
	PageTitle     int64                  `protobuf:"varint,14,opt,name=page_title,json=pageTitle,proto3" json:"page_title,omitempty"`
	AdsNetwork    int64                  `protobuf:"varint,15,opt,name=ads_network,json=adsNetwork,proto3" json:"ads_network,omitempty"` // google_adwords
	Source        int32                  `protobuf:"varint,16,opt,name=source,proto3" json:"source,omitempty"`
	Utm           *PackedSessionCampaign `protobuf:"bytes,17,opt,name=utm,proto3" json:"utm,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PackedDevice) Reset() {
	*x = PackedDevice{}
	mi := &file_common_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PackedDevice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PackedDevice) ProtoMessage() {}

func (x *PackedDevice) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PackedDevice.ProtoReflect.Descriptor instead.
func (*PackedDevice) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{3}
}

func (x *PackedDevice) GetIPv4() uint32 {
	if x != nil {
		return x.IPv4
	}
	return 0
}

func (x *PackedDevice) GetIPv6Lo() uint64 {
	if x != nil {
		return x.IPv6Lo
	}
	return 0
}

func (x *PackedDevice) GetIPv6Hi() uint64 {
	if x != nil {
		return x.IPv6Hi
	}
	return 0
}

func (x *PackedDevice) GetUserAgent() int64 {
	if x != nil {
		return x.UserAgent
	}
	return 0
}

func (x *PackedDevice) GetScreenResolution() int64 {
	if x != nil {
		return x.ScreenResolution
	}
	return 0
}

func (x *PackedDevice) GetTimezone() int64 {
	if x != nil {
		return x.Timezone
	}
	return 0
}

func (x *PackedDevice) GetLanguage() int64 {
	if x != nil {
		return x.Language
	}
	return 0
}

func (x *PackedDevice) GetReferrer() int64 {
	if x != nil {
		return x.Referrer
	}
	return 0
}

func (x *PackedDevice) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *PackedDevice) GetSourceReferrer() int64 {
	if x != nil {
		return x.SourceReferrer
	}
	return 0
}

func (x *PackedDevice) GetPageUrl() int64 {
	if x != nil {
		return x.PageUrl
	}
	return 0
}

func (x *PackedDevice) GetPageTitle() int64 {
	if x != nil {
		return x.PageTitle
	}
	return 0
}

func (x *PackedDevice) GetAdsNetwork() int64 {
	if x != nil {
		return x.AdsNetwork
	}
	return 0
}

func (x *PackedDevice) GetSource() int32 {
	if x != nil {
		return x.Source
	}
	return 0
}

func (x *PackedDevice) GetUtm() *PackedSessionCampaign {
	if x != nil {
		return x.Utm
	}
	return nil
}

type Credential struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	AccountId string                 `protobuf:"bytes,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	Issuer    string                 `protobuf:"bytes,3,opt,name=issuer,proto3" json:"issuer,omitempty"`
	Type      Type                   `protobuf:"varint,4,opt,name=type,proto3,enum=common.Type" json:"type,omitempty"` // should be agent, user or connector
	// Permission perm = 6;
	ClientId string   `protobuf:"bytes,7,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	Scopes   []string `protobuf:"bytes,8,rep,name=scopes,proto3" json:"scopes,omitempty"`
	// for x-signed-key
	SignedObjects []string `protobuf:"bytes,9,rep,name=signed_objects,json=signedObjects,proto3" json:"signed_objects,omitempty"`
	SignedType    string   `protobuf:"bytes,10,opt,name=signed_type,json=signedType,proto3" json:"signed_type,omitempty"`
	// for user-access token
	ProfileId          string `protobuf:"bytes,11,opt,name=profile_id,json=profileId,proto3" json:"profile_id,omitempty"`
	AgentAccessTokenId string `protobuf:"bytes,12,opt,name=agent_access_token_id,json=agentAccessTokenId,proto3" json:"agent_access_token_id,omitempty"`
	Inspect            bool   `protobuf:"varint,13,opt,name=inspect,proto3" json:"inspect,omitempty"`
	ClientType         string `protobuf:"bytes,14,opt,name=client_type,json=clientType,proto3" json:"client_type,omitempty"` // dashboard, widget, bot id
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *Credential) Reset() {
	*x = Credential{}
	mi := &file_common_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Credential) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Credential) ProtoMessage() {}

func (x *Credential) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Credential.ProtoReflect.Descriptor instead.
func (*Credential) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{4}
}

func (x *Credential) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *Credential) GetIssuer() string {
	if x != nil {
		return x.Issuer
	}
	return ""
}

func (x *Credential) GetType() Type {
	if x != nil {
		return x.Type
	}
	return Type_unknown
}

func (x *Credential) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *Credential) GetScopes() []string {
	if x != nil {
		return x.Scopes
	}
	return nil
}

func (x *Credential) GetSignedObjects() []string {
	if x != nil {
		return x.SignedObjects
	}
	return nil
}

func (x *Credential) GetSignedType() string {
	if x != nil {
		return x.SignedType
	}
	return ""
}

func (x *Credential) GetProfileId() string {
	if x != nil {
		return x.ProfileId
	}
	return ""
}

func (x *Credential) GetAgentAccessTokenId() string {
	if x != nil {
		return x.AgentAccessTokenId
	}
	return ""
}

func (x *Credential) GetInspect() bool {
	if x != nil {
		return x.Inspect
	}
	return false
}

func (x *Credential) GetClientType() string {
	if x != nil {
		return x.ClientType
	}
	return ""
}

type SessionCampaign struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Source        string                 `protobuf:"bytes,3,opt,name=source,proto3" json:"source,omitempty"`
	Medium        string                 `protobuf:"bytes,4,opt,name=medium,proto3" json:"medium,omitempty"`
	Term          string                 `protobuf:"bytes,5,opt,name=term,proto3" json:"term,omitempty"`
	Content       string                 `protobuf:"bytes,6,opt,name=content,proto3" json:"content,omitempty"`
	Id            string                 `protobuf:"bytes,7,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SessionCampaign) Reset() {
	*x = SessionCampaign{}
	mi := &file_common_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SessionCampaign) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionCampaign) ProtoMessage() {}

func (x *SessionCampaign) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionCampaign.ProtoReflect.Descriptor instead.
func (*SessionCampaign) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{5}
}

func (x *SessionCampaign) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SessionCampaign) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *SessionCampaign) GetMedium() string {
	if x != nil {
		return x.Medium
	}
	return ""
}

func (x *SessionCampaign) GetTerm() string {
	if x != nil {
		return x.Term
	}
	return ""
}

func (x *SessionCampaign) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *SessionCampaign) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type PackedSessionCampaign struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          int64                  `protobuf:"varint,2,opt,name=name,proto3" json:"name,omitempty"`
	Source        int64                  `protobuf:"varint,3,opt,name=source,proto3" json:"source,omitempty"`
	Medium        int64                  `protobuf:"varint,4,opt,name=medium,proto3" json:"medium,omitempty"`
	Term          int64                  `protobuf:"varint,5,opt,name=term,proto3" json:"term,omitempty"`
	Content       int64                  `protobuf:"varint,6,opt,name=content,proto3" json:"content,omitempty"`
	Id            int64                  `protobuf:"varint,7,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PackedSessionCampaign) Reset() {
	*x = PackedSessionCampaign{}
	mi := &file_common_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PackedSessionCampaign) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PackedSessionCampaign) ProtoMessage() {}

func (x *PackedSessionCampaign) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PackedSessionCampaign.ProtoReflect.Descriptor instead.
func (*PackedSessionCampaign) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{6}
}

func (x *PackedSessionCampaign) GetName() int64 {
	if x != nil {
		return x.Name
	}
	return 0
}

func (x *PackedSessionCampaign) GetSource() int64 {
	if x != nil {
		return x.Source
	}
	return 0
}

func (x *PackedSessionCampaign) GetMedium() int64 {
	if x != nil {
		return x.Medium
	}
	return 0
}

func (x *PackedSessionCampaign) GetTerm() int64 {
	if x != nil {
		return x.Term
	}
	return 0
}

func (x *PackedSessionCampaign) GetContent() int64 {
	if x != nil {
		return x.Content
	}
	return 0
}

func (x *PackedSessionCampaign) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type Limit struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Ctx            *Context               `protobuf:"bytes,1,opt,name=ctx,proto3" json:"ctx,omitempty"`
	AccountId      string                 `protobuf:"bytes,3,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	MaxAutomations uint32                 `protobuf:"varint,4,opt,name=max_automations,json=maxAutomations,proto3" json:"max_automations,omitempty"`
	// optional uint32 max_conversations = 6;
	MaxSegments uint32 `protobuf:"varint,7,opt,name=max_segments,json=maxSegments,proto3" json:"max_segments,omitempty"`
	// uint32 max_agents = 8;
	CanBuyAgent            bool   `protobuf:"varint,10,opt,name=can_buy_agent,json=canBuyAgent,proto3" json:"can_buy_agent,omitempty"`
	AutomationWebhookQuota uint32 `protobuf:"varint,12,opt,name=automation_webhook_quota,json=automationWebhookQuota,proto3" json:"automation_webhook_quota,omitempty"`
	AutomationEmailQuota   uint32 `protobuf:"varint,13,opt,name=automation_email_quota,json=automationEmailQuota,proto3" json:"automation_email_quota,omitempty"`
	AutomationMessageQuota uint32 `protobuf:"varint,14,opt,name=automation_message_quota,json=automationMessageQuota,proto3" json:"automation_message_quota,omitempty"`
	MaxRules               uint32 `protobuf:"varint,16,opt,name=max_rules,json=maxRules,proto3" json:"max_rules,omitempty"`
	Facebook               bool   `protobuf:"varint,17,opt,name=facebook,proto3" json:"facebook,omitempty"`
	Zalo                   bool   `protobuf:"varint,18,opt,name=zalo,proto3" json:"zalo,omitempty"`
	Email                  bool   `protobuf:"varint,19,opt,name=email,proto3" json:"email,omitempty"`
	WebPlugin              bool   `protobuf:"varint,20,opt,name=web_plugin,json=webPlugin,proto3" json:"web_plugin,omitempty"`
	Bot                    bool   `protobuf:"varint,21,opt,name=bot,proto3" json:"bot,omitempty"`
	Shop                   string `protobuf:"bytes,22,opt,name=shop,proto3" json:"shop,omitempty"`                                                      //   pending || active
	TotalFileSize          int64  `protobuf:"varint,23,opt,name=total_file_size,json=totalFileSize,proto3" json:"total_file_size,omitempty"`            // bytes
	TotalCallLogSize       int64  `protobuf:"varint,24,opt,name=total_call_log_size,json=totalCallLogSize,proto3" json:"total_call_log_size,omitempty"` // bytes
	CallRecordingTtl       int64  `protobuf:"varint,25,opt,name=call_recording_ttl,json=callRecordingTtl,proto3" json:"call_recording_ttl,omitempty"`   // sec
	Ticket                 bool   `protobuf:"varint,26,opt,name=ticket,proto3" json:"ticket,omitempty"`                                                 // pending || active
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *Limit) Reset() {
	*x = Limit{}
	mi := &file_common_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Limit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Limit) ProtoMessage() {}

func (x *Limit) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Limit.ProtoReflect.Descriptor instead.
func (*Limit) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{7}
}

func (x *Limit) GetCtx() *Context {
	if x != nil {
		return x.Ctx
	}
	return nil
}

func (x *Limit) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *Limit) GetMaxAutomations() uint32 {
	if x != nil {
		return x.MaxAutomations
	}
	return 0
}

func (x *Limit) GetMaxSegments() uint32 {
	if x != nil {
		return x.MaxSegments
	}
	return 0
}

func (x *Limit) GetCanBuyAgent() bool {
	if x != nil {
		return x.CanBuyAgent
	}
	return false
}

func (x *Limit) GetAutomationWebhookQuota() uint32 {
	if x != nil {
		return x.AutomationWebhookQuota
	}
	return 0
}

func (x *Limit) GetAutomationEmailQuota() uint32 {
	if x != nil {
		return x.AutomationEmailQuota
	}
	return 0
}

func (x *Limit) GetAutomationMessageQuota() uint32 {
	if x != nil {
		return x.AutomationMessageQuota
	}
	return 0
}

func (x *Limit) GetMaxRules() uint32 {
	if x != nil {
		return x.MaxRules
	}
	return 0
}

func (x *Limit) GetFacebook() bool {
	if x != nil {
		return x.Facebook
	}
	return false
}

func (x *Limit) GetZalo() bool {
	if x != nil {
		return x.Zalo
	}
	return false
}

func (x *Limit) GetEmail() bool {
	if x != nil {
		return x.Email
	}
	return false
}

func (x *Limit) GetWebPlugin() bool {
	if x != nil {
		return x.WebPlugin
	}
	return false
}

func (x *Limit) GetBot() bool {
	if x != nil {
		return x.Bot
	}
	return false
}

func (x *Limit) GetShop() string {
	if x != nil {
		return x.Shop
	}
	return ""
}

func (x *Limit) GetTotalFileSize() int64 {
	if x != nil {
		return x.TotalFileSize
	}
	return 0
}

func (x *Limit) GetTotalCallLogSize() int64 {
	if x != nil {
		return x.TotalCallLogSize
	}
	return 0
}

func (x *Limit) GetCallRecordingTtl() int64 {
	if x != nil {
		return x.CallRecordingTtl
	}
	return 0
}

func (x *Limit) GetTicket() bool {
	if x != nil {
		return x.Ticket
	}
	return false
}

var File_common_proto protoreflect.FileDescriptor

const file_common_proto_rawDesc = "" +
	"\n" +
	"\fcommon.proto\x12\x06common\"\x9e\x02\n" +
	"\aContext\x122\n" +
	"\n" +
	"credential\x18\x06 \x01(\v2\x12.common.CredentialR\n" +
	"credential\x12+\n" +
	"\tby_device\x18\n" +
	" \x01(\v2\x0e.common.DeviceR\bbyDevice\x12\x16\n" +
	"\x06fields\x18\x15 \x03(\tR\x06fields\x12!\n" +
	"\ffrom_service\x18\x16 \x01(\tR\vfromService\x12&\n" +
	"\x0ffrom_service_id\x18\x17 \x01(\tR\rfromServiceId\x12\x1b\n" +
	"\tcredit_id\x18\x18 \x01(\tR\bcreditId\x12\x19\n" +
	"\btrace_id\x18\x19 \x01(\tR\atraceId\x12\x17\n" +
	"\aspan_id\x18\x1a \x01(\tR\x06spanId\")\n" +
	"\aUint128\x12\x0e\n" +
	"\x02lo\x18\x01 \x01(\x04R\x02lo\x12\x0e\n" +
	"\x02hi\x18\x02 \x01(\x04R\x02hi\"\x83\a\n" +
	"\x06Device\x12\x0e\n" +
	"\x02ip\x18\x03 \x01(\tR\x02ip\x12\x1d\n" +
	"\n" +
	"user_agent\x18\x04 \x01(\tR\tuserAgent\x12+\n" +
	"\x11screen_resolution\x18\x05 \x01(\tR\x10screenResolution\x12\x1a\n" +
	"\btimezone\x18\x06 \x01(\tR\btimezone\x12\x1a\n" +
	"\blanguage\x18\a \x01(\tR\blanguage\x12\x1a\n" +
	"\breferrer\x18\b \x01(\tR\breferrer\x12\x12\n" +
	"\x04type\x18\t \x01(\tR\x04type\x12\x1a\n" +
	"\bplatform\x18\n" +
	" \x01(\tR\bplatform\x12'\n" +
	"\x0fsource_referrer\x18\v \x01(\tR\x0esourceReferrer\x12\x19\n" +
	"\bpage_url\x18\r \x01(\tR\apageUrl\x12\x1d\n" +
	"\n" +
	"page_title\x18\x0e \x01(\tR\tpageTitle\x12\x1b\n" +
	"\tcity_name\x18\x12 \x01(\tR\bcityName\x12!\n" +
	"\fcountry_name\x18\x13 \x01(\tR\vcountryName\x12%\n" +
	"\x0econtinent_code\x18\x14 \x01(\tR\rcontinentCode\x12\x1a\n" +
	"\blatitude\x18\x16 \x01(\x02R\blatitude\x12\x1c\n" +
	"\tlongitude\x18\x17 \x01(\x02R\tlongitude\x12\x1f\n" +
	"\vpostal_code\x18\x18 \x01(\tR\n" +
	"postalCode\x12\x10\n" +
	"\x03isp\x18\x1b \x01(\tR\x03isp\x12%\n" +
	"\x0econtinent_name\x18\x1c \x01(\tR\rcontinentName\x12!\n" +
	"\fcountry_code\x18\x1d \x01(\tR\vcountryCode\x12!\n" +
	"\fbrowser_name\x18  \x01(\tR\vbrowserName\x12\x1f\n" +
	"\vads_network\x18! \x01(\tR\n" +
	"adsNetwork\x12\x16\n" +
	"\x06source\x18\" \x01(\tR\x06source\x12)\n" +
	"\x03utm\x18$ \x01(\v2\x17.common.SessionCampaignR\x03utm\">\n" +
	"\n" +
	"DeviceType\x12\v\n" +
	"\aunknown\x10\x00\x12\n" +
	"\n" +
	"\x06mobile\x10\x01\x12\n" +
	"\n" +
	"\x06tablet\x10\x02\x12\v\n" +
	"\adesktop\x10\x03\"Q\n" +
	"\n" +
	"SourceType\x12\n" +
	"\n" +
	"\x06direct\x10\x00\x12\r\n" +
	"\treferring\x10\x01\x12\v\n" +
	"\aorganic\x10\x02\x12\n" +
	"\n" +
	"\x06social\x10\x03\x12\x0f\n" +
	"\vadvertising\x10\x04\"\xd5\x03\n" +
	"\fPackedDevice\x12\x12\n" +
	"\x04IPv4\x18\x03 \x01(\rR\x04IPv4\x12\x17\n" +
	"\aIPv6_lo\x18\x04 \x01(\x04R\x06IPv6Lo\x12\x17\n" +
	"\aIPv6_hi\x18\x05 \x01(\x04R\x06IPv6Hi\x12\x1d\n" +
	"\n" +
	"user_agent\x18\x06 \x01(\x03R\tuserAgent\x12+\n" +
	"\x11screen_resolution\x18\a \x01(\x03R\x10screenResolution\x12\x1a\n" +
	"\btimezone\x18\b \x01(\x03R\btimezone\x12\x1a\n" +
	"\blanguage\x18\t \x01(\x03R\blanguage\x12\x1a\n" +
	"\breferrer\x18\n" +
	" \x01(\x03R\breferrer\x12\x12\n" +
	"\x04type\x18\v \x01(\x05R\x04type\x12'\n" +
	"\x0fsource_referrer\x18\f \x01(\x03R\x0esourceReferrer\x12\x19\n" +
	"\bpage_url\x18\r \x01(\x03R\apageUrl\x12\x1d\n" +
	"\n" +
	"page_title\x18\x0e \x01(\x03R\tpageTitle\x12\x1f\n" +
	"\vads_network\x18\x0f \x01(\x03R\n" +
	"adsNetwork\x12\x16\n" +
	"\x06source\x18\x10 \x01(\x05R\x06source\x12/\n" +
	"\x03utm\x18\x11 \x01(\v2\x1d.common.PackedSessionCampaignR\x03utm\"\xef\x02\n" +
	"\n" +
	"Credential\x12\x1d\n" +
	"\n" +
	"account_id\x18\x01 \x01(\tR\taccountId\x12\x16\n" +
	"\x06issuer\x18\x03 \x01(\tR\x06issuer\x12 \n" +
	"\x04type\x18\x04 \x01(\x0e2\f.common.TypeR\x04type\x12\x1b\n" +
	"\tclient_id\x18\a \x01(\tR\bclientId\x12\x16\n" +
	"\x06scopes\x18\b \x03(\tR\x06scopes\x12%\n" +
	"\x0esigned_objects\x18\t \x03(\tR\rsignedObjects\x12\x1f\n" +
	"\vsigned_type\x18\n" +
	" \x01(\tR\n" +
	"signedType\x12\x1d\n" +
	"\n" +
	"profile_id\x18\v \x01(\tR\tprofileId\x121\n" +
	"\x15agent_access_token_id\x18\f \x01(\tR\x12agentAccessTokenId\x12\x18\n" +
	"\ainspect\x18\r \x01(\bR\ainspect\x12\x1f\n" +
	"\vclient_type\x18\x0e \x01(\tR\n" +
	"clientType\"\x93\x01\n" +
	"\x0fSessionCampaign\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x16\n" +
	"\x06source\x18\x03 \x01(\tR\x06source\x12\x16\n" +
	"\x06medium\x18\x04 \x01(\tR\x06medium\x12\x12\n" +
	"\x04term\x18\x05 \x01(\tR\x04term\x12\x18\n" +
	"\acontent\x18\x06 \x01(\tR\acontent\x12\x0e\n" +
	"\x02id\x18\a \x01(\tR\x02id\"\x99\x01\n" +
	"\x15PackedSessionCampaign\x12\x12\n" +
	"\x04name\x18\x02 \x01(\x03R\x04name\x12\x16\n" +
	"\x06source\x18\x03 \x01(\x03R\x06source\x12\x16\n" +
	"\x06medium\x18\x04 \x01(\x03R\x06medium\x12\x12\n" +
	"\x04term\x18\x05 \x01(\x03R\x04term\x12\x18\n" +
	"\acontent\x18\x06 \x01(\x03R\acontent\x12\x0e\n" +
	"\x02id\x18\a \x01(\x03R\x02id\"\xa8\x05\n" +
	"\x05Limit\x12!\n" +
	"\x03ctx\x18\x01 \x01(\v2\x0f.common.ContextR\x03ctx\x12\x1d\n" +
	"\n" +
	"account_id\x18\x03 \x01(\tR\taccountId\x12'\n" +
	"\x0fmax_automations\x18\x04 \x01(\rR\x0emaxAutomations\x12!\n" +
	"\fmax_segments\x18\a \x01(\rR\vmaxSegments\x12\"\n" +
	"\rcan_buy_agent\x18\n" +
	" \x01(\bR\vcanBuyAgent\x128\n" +
	"\x18automation_webhook_quota\x18\f \x01(\rR\x16automationWebhookQuota\x124\n" +
	"\x16automation_email_quota\x18\r \x01(\rR\x14automationEmailQuota\x128\n" +
	"\x18automation_message_quota\x18\x0e \x01(\rR\x16automationMessageQuota\x12\x1b\n" +
	"\tmax_rules\x18\x10 \x01(\rR\bmaxRules\x12\x1a\n" +
	"\bfacebook\x18\x11 \x01(\bR\bfacebook\x12\x12\n" +
	"\x04zalo\x18\x12 \x01(\bR\x04zalo\x12\x14\n" +
	"\x05email\x18\x13 \x01(\bR\x05email\x12\x1d\n" +
	"\n" +
	"web_plugin\x18\x14 \x01(\bR\twebPlugin\x12\x10\n" +
	"\x03bot\x18\x15 \x01(\bR\x03bot\x12\x12\n" +
	"\x04shop\x18\x16 \x01(\tR\x04shop\x12&\n" +
	"\x0ftotal_file_size\x18\x17 \x01(\x03R\rtotalFileSize\x12-\n" +
	"\x13total_call_log_size\x18\x18 \x01(\x03R\x10totalCallLogSize\x12,\n" +
	"\x12call_recording_ttl\x18\x19 \x01(\x03R\x10callRecordingTtl\x12\x16\n" +
	"\x06ticket\x18\x1a \x01(\bR\x06ticket*d\n" +
	"\x04Type\x12\v\n" +
	"\aunknown\x10\x00\x12\b\n" +
	"\x04user\x10\x01\x12\t\n" +
	"\x05agent\x10\x02\x12\t\n" +
	"\x05subiz\x10\x03\x12\r\n" +
	"\tconnector\x10\x06\x12\a\n" +
	"\x03bot\x10\a\x12\t\n" +
	"\x05dummy\x10\b\x12\f\n" +
	"\bworkflow\x10\tB Z\x1egithub.com/subiz/header/commonb\x06proto3"

var (
	file_common_proto_rawDescOnce sync.Once
	file_common_proto_rawDescData []byte
)

func file_common_proto_rawDescGZIP() []byte {
	file_common_proto_rawDescOnce.Do(func() {
		file_common_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_common_proto_rawDesc), len(file_common_proto_rawDesc)))
	})
	return file_common_proto_rawDescData
}

var file_common_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_common_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_common_proto_goTypes = []any{
	(Type)(0),                     // 0: common.Type
	(Device_DeviceType)(0),        // 1: common.Device.DeviceType
	(Device_SourceType)(0),        // 2: common.Device.SourceType
	(*Context)(nil),               // 3: common.Context
	(*Uint128)(nil),               // 4: common.Uint128
	(*Device)(nil),                // 5: common.Device
	(*PackedDevice)(nil),          // 6: common.PackedDevice
	(*Credential)(nil),            // 7: common.Credential
	(*SessionCampaign)(nil),       // 8: common.SessionCampaign
	(*PackedSessionCampaign)(nil), // 9: common.PackedSessionCampaign
	(*Limit)(nil),                 // 10: common.Limit
}
var file_common_proto_depIdxs = []int32{
	7, // 0: common.Context.credential:type_name -> common.Credential
	5, // 1: common.Context.by_device:type_name -> common.Device
	8, // 2: common.Device.utm:type_name -> common.SessionCampaign
	9, // 3: common.PackedDevice.utm:type_name -> common.PackedSessionCampaign
	0, // 4: common.Credential.type:type_name -> common.Type
	3, // 5: common.Limit.ctx:type_name -> common.Context
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_common_proto_init() }
func file_common_proto_init() {
	if File_common_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_common_proto_rawDesc), len(file_common_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_common_proto_goTypes,
		DependencyIndexes: file_common_proto_depIdxs,
		EnumInfos:         file_common_proto_enumTypes,
		MessageInfos:      file_common_proto_msgTypes,
	}.Build()
	File_common_proto = out.File
	file_common_proto_goTypes = nil
	file_common_proto_depIdxs = nil
}
