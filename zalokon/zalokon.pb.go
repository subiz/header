// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v5.28.3
// source: zalokon.proto

package zalokon

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type OfficialAccount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OaId                    string `protobuf:"bytes,2,opt,name=oa_id,json=oaId,proto3" json:"oa_id,omitempty"`
	Description             string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Name                    string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Avatar                  string `protobuf:"bytes,5,opt,name=avatar,proto3" json:"avatar,omitempty"`
	Cover                   string `protobuf:"bytes,6,opt,name=cover,proto3" json:"cover,omitempty"`
	AccessToken             string `protobuf:"bytes,7,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	Authorized              int64  `protobuf:"varint,8,opt,name=authorized,proto3" json:"authorized,omitempty"`
	AccountId               string `protobuf:"bytes,9,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	StrOaId                 string `protobuf:"bytes,10,opt,name=str_oa_id,json=strOaId,proto3" json:"str_oa_id,omitempty"`
	LastZaloHook            int64  `protobuf:"varint,11,opt,name=last_zalo_hook,json=lastZaloHook,proto3" json:"last_zalo_hook,omitempty"`
	State                   string `protobuf:"bytes,12,opt,name=state,proto3" json:"state,omitempty"` // activated || deleted || failed
	Version                 int32  `protobuf:"varint,13,opt,name=version,proto3" json:"version,omitempty"`
	LastRefreshTokenAt      int64  `protobuf:"varint,14,opt,name=last_refresh_token_at,json=lastRefreshTokenAt,proto3" json:"last_refresh_token_at,omitempty"`
	RefreshToken            string `protobuf:"bytes,15,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
	LastCalled              int64  `protobuf:"varint,17,opt,name=last_called,json=lastCalled,proto3" json:"last_called,omitempty"`
	LastRefreshTokenErrorAt int64  `protobuf:"varint,18,opt,name=last_refresh_token_error_at,json=lastRefreshTokenErrorAt,proto3" json:"last_refresh_token_error_at,omitempty"`
	AccessTokenExpiredAt    int64  `protobuf:"varint,19,opt,name=access_token_expired_at,json=accessTokenExpiredAt,proto3" json:"access_token_expired_at,omitempty"`
	OaType                  int64  `protobuf:"varint,20,opt,name=oa_type,json=oaType,proto3" json:"oa_type,omitempty"`
	IsVerified              bool   `protobuf:"varint,21,opt,name=is_verified,json=isVerified,proto3" json:"is_verified,omitempty"`
	OaAlias                 string `protobuf:"bytes,22,opt,name=oa_alias,json=oaAlias,proto3" json:"oa_alias,omitempty"`
	CateName                string `protobuf:"bytes,23,opt,name=cate_name,json=cateName,proto3" json:"cate_name,omitempty"`
	NumFollower             int64  `protobuf:"varint,24,opt,name=num_follower,json=numFollower,proto3" json:"num_follower,omitempty"`
	PackageName             string `protobuf:"bytes,25,opt,name=package_name,json=packageName,proto3" json:"package_name,omitempty"`
	PackageValidThroughDate string `protobuf:"bytes,26,opt,name=package_valid_through_date,json=packageValidThroughDate,proto3" json:"package_valid_through_date,omitempty"`
	PackageAutoRenewDate    string `protobuf:"bytes,27,opt,name=package_auto_renew_date,json=packageAutoRenewDate,proto3" json:"package_auto_renew_date,omitempty"`
	LinkedZCA               string `protobuf:"bytes,28,opt,name=linkedZCA,proto3" json:"linkedZCA,omitempty"`
	IntegrationLinkStatus   string `protobuf:"bytes,29,opt,name=integration_link_status,json=integrationLinkStatus,proto3" json:"integration_link_status,omitempty"` // active, failed
}

func (x *OfficialAccount) Reset() {
	*x = OfficialAccount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zalokon_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OfficialAccount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OfficialAccount) ProtoMessage() {}

func (x *OfficialAccount) ProtoReflect() protoreflect.Message {
	mi := &file_zalokon_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OfficialAccount.ProtoReflect.Descriptor instead.
func (*OfficialAccount) Descriptor() ([]byte, []int) {
	return file_zalokon_proto_rawDescGZIP(), []int{0}
}

func (x *OfficialAccount) GetOaId() string {
	if x != nil {
		return x.OaId
	}
	return ""
}

func (x *OfficialAccount) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *OfficialAccount) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *OfficialAccount) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *OfficialAccount) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *OfficialAccount) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *OfficialAccount) GetAuthorized() int64 {
	if x != nil {
		return x.Authorized
	}
	return 0
}

func (x *OfficialAccount) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *OfficialAccount) GetStrOaId() string {
	if x != nil {
		return x.StrOaId
	}
	return ""
}

func (x *OfficialAccount) GetLastZaloHook() int64 {
	if x != nil {
		return x.LastZaloHook
	}
	return 0
}

func (x *OfficialAccount) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *OfficialAccount) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *OfficialAccount) GetLastRefreshTokenAt() int64 {
	if x != nil {
		return x.LastRefreshTokenAt
	}
	return 0
}

func (x *OfficialAccount) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

func (x *OfficialAccount) GetLastCalled() int64 {
	if x != nil {
		return x.LastCalled
	}
	return 0
}

func (x *OfficialAccount) GetLastRefreshTokenErrorAt() int64 {
	if x != nil {
		return x.LastRefreshTokenErrorAt
	}
	return 0
}

func (x *OfficialAccount) GetAccessTokenExpiredAt() int64 {
	if x != nil {
		return x.AccessTokenExpiredAt
	}
	return 0
}

func (x *OfficialAccount) GetOaType() int64 {
	if x != nil {
		return x.OaType
	}
	return 0
}

func (x *OfficialAccount) GetIsVerified() bool {
	if x != nil {
		return x.IsVerified
	}
	return false
}

func (x *OfficialAccount) GetOaAlias() string {
	if x != nil {
		return x.OaAlias
	}
	return ""
}

func (x *OfficialAccount) GetCateName() string {
	if x != nil {
		return x.CateName
	}
	return ""
}

func (x *OfficialAccount) GetNumFollower() int64 {
	if x != nil {
		return x.NumFollower
	}
	return 0
}

func (x *OfficialAccount) GetPackageName() string {
	if x != nil {
		return x.PackageName
	}
	return ""
}

func (x *OfficialAccount) GetPackageValidThroughDate() string {
	if x != nil {
		return x.PackageValidThroughDate
	}
	return ""
}

func (x *OfficialAccount) GetPackageAutoRenewDate() string {
	if x != nil {
		return x.PackageAutoRenewDate
	}
	return ""
}

func (x *OfficialAccount) GetLinkedZCA() string {
	if x != nil {
		return x.LinkedZCA
	}
	return ""
}

func (x *OfficialAccount) GetIntegrationLinkStatus() string {
	if x != nil {
		return x.IntegrationLinkStatus
	}
	return ""
}

type ZaloUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserGender int32  `protobuf:"varint,2,opt,name=user_gender,json=userGender,proto3" json:"user_gender,omitempty"`
	UserId     string `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// int64 user_id_by_app = 4;
	Avatar      string           `protobuf:"bytes,5,opt,name=avatar,proto3" json:"avatar,omitempty"`
	DisplayName string           `protobuf:"bytes,6,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	BirthDate   int32            `protobuf:"varint,7,opt,name=birth_date,json=birthDate,proto3" json:"birth_date,omitempty"`
	SharedInfo  *Info            `protobuf:"bytes,8,opt,name=shared_info,json=sharedInfo,proto3" json:"shared_info,omitempty"`
	Avatars     map[int32]string `protobuf:"bytes,9,rep,name=avatars,proto3" json:"avatars,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	UserIdByApp string           `protobuf:"bytes,10,opt,name=user_id_by_app,json=userIdByApp,proto3" json:"user_id_by_app,omitempty"`
}

func (x *ZaloUser) Reset() {
	*x = ZaloUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zalokon_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ZaloUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZaloUser) ProtoMessage() {}

func (x *ZaloUser) ProtoReflect() protoreflect.Message {
	mi := &file_zalokon_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZaloUser.ProtoReflect.Descriptor instead.
func (*ZaloUser) Descriptor() ([]byte, []int) {
	return file_zalokon_proto_rawDescGZIP(), []int{1}
}

func (x *ZaloUser) GetUserGender() int32 {
	if x != nil {
		return x.UserGender
	}
	return 0
}

func (x *ZaloUser) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ZaloUser) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *ZaloUser) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *ZaloUser) GetBirthDate() int32 {
	if x != nil {
		return x.BirthDate
	}
	return 0
}

func (x *ZaloUser) GetSharedInfo() *Info {
	if x != nil {
		return x.SharedInfo
	}
	return nil
}

func (x *ZaloUser) GetAvatars() map[int32]string {
	if x != nil {
		return x.Avatars
	}
	return nil
}

func (x *ZaloUser) GetUserIdByApp() string {
	if x != nil {
		return x.UserIdByApp
	}
	return ""
}

type ZaloUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   int32     `protobuf:"varint,2,opt,name=error,proto3" json:"error,omitempty"`
	Message string    `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data    *ZaloUser `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *ZaloUserResponse) Reset() {
	*x = ZaloUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zalokon_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ZaloUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZaloUserResponse) ProtoMessage() {}

func (x *ZaloUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zalokon_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZaloUserResponse.ProtoReflect.Descriptor instead.
func (*ZaloUserResponse) Descriptor() ([]byte, []int) {
	return file_zalokon_proto_rawDescGZIP(), []int{2}
}

func (x *ZaloUserResponse) GetError() int32 {
	if x != nil {
		return x.Error
	}
	return 0
}

func (x *ZaloUserResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ZaloUserResponse) GetData() *ZaloUser {
	if x != nil {
		return x.Data
	}
	return nil
}

type OfficalAccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   int32            `protobuf:"varint,2,opt,name=error,proto3" json:"error,omitempty"`
	Message string           `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data    *OfficialAccount `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *OfficalAccountResponse) Reset() {
	*x = OfficalAccountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zalokon_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OfficalAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OfficalAccountResponse) ProtoMessage() {}

func (x *OfficalAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zalokon_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OfficalAccountResponse.ProtoReflect.Descriptor instead.
func (*OfficalAccountResponse) Descriptor() ([]byte, []int) {
	return file_zalokon_proto_rawDescGZIP(), []int{3}
}

func (x *OfficalAccountResponse) GetError() int32 {
	if x != nil {
		return x.Error
	}
	return 0
}

func (x *OfficalAccountResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *OfficalAccountResponse) GetData() *OfficialAccount {
	if x != nil {
		return x.Data
	}
	return nil
}

type ResponseData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageId    string         `protobuf:"bytes,2,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	Token        string         `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`
	AttachmentId string         `protobuf:"bytes,4,opt,name=attachment_id,json=attachmentId,proto3" json:"attachment_id,omitempty"`
	UserId       string         `protobuf:"bytes,5,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Quota        *ResponseQuota `protobuf:"bytes,6,opt,name=quota,proto3" json:"quota,omitempty"`
	MediaId      string         `protobuf:"bytes,7,opt,name=media_id,json=mediaId,proto3" json:"media_id,omitempty"`
	TemplateId   string         `protobuf:"bytes,10,opt,name=template_id,json=templateId,proto3" json:"template_id,omitempty"`
	TemplateName string         `protobuf:"bytes,11,opt,name=template_name,json=templateName,proto3" json:"template_name,omitempty"`
	TemplateType int64          `protobuf:"varint,12,opt,name=template_type,json=templateType,proto3" json:"template_type,omitempty"`
	Status       string         `protobuf:"bytes,13,opt,name=status,proto3" json:"status,omitempty"`
	Tag          int64          `protobuf:"varint,14,opt,name=tag,proto3" json:"tag,omitempty"`
	Price        string         `protobuf:"bytes,15,opt,name=price,proto3" json:"price,omitempty"`
	Timeout      int64          `protobuf:"varint,17,opt,name=timeout,proto3" json:"timeout,omitempty"`
	PreviewUrl   string         `protobuf:"bytes,18,opt,name=preview_url,json=previewUrl,proto3" json:"preview_url,omitempty"`
}

func (x *ResponseData) Reset() {
	*x = ResponseData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zalokon_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseData) ProtoMessage() {}

func (x *ResponseData) ProtoReflect() protoreflect.Message {
	mi := &file_zalokon_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseData.ProtoReflect.Descriptor instead.
func (*ResponseData) Descriptor() ([]byte, []int) {
	return file_zalokon_proto_rawDescGZIP(), []int{4}
}

func (x *ResponseData) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

func (x *ResponseData) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *ResponseData) GetAttachmentId() string {
	if x != nil {
		return x.AttachmentId
	}
	return ""
}

func (x *ResponseData) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ResponseData) GetQuota() *ResponseQuota {
	if x != nil {
		return x.Quota
	}
	return nil
}

func (x *ResponseData) GetMediaId() string {
	if x != nil {
		return x.MediaId
	}
	return ""
}

func (x *ResponseData) GetTemplateId() string {
	if x != nil {
		return x.TemplateId
	}
	return ""
}

func (x *ResponseData) GetTemplateName() string {
	if x != nil {
		return x.TemplateName
	}
	return ""
}

func (x *ResponseData) GetTemplateType() int64 {
	if x != nil {
		return x.TemplateType
	}
	return 0
}

func (x *ResponseData) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ResponseData) GetTag() int64 {
	if x != nil {
		return x.Tag
	}
	return 0
}

func (x *ResponseData) GetPrice() string {
	if x != nil {
		return x.Price
	}
	return ""
}

func (x *ResponseData) GetTimeout() int64 {
	if x != nil {
		return x.Timeout
	}
	return 0
}

func (x *ResponseData) GetPreviewUrl() string {
	if x != nil {
		return x.PreviewUrl
	}
	return ""
}

type ConsentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error       int32  `protobuf:"varint,2,opt,name=error,proto3" json:"error,omitempty"`
	Message     string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	ExpiredTime int64  `protobuf:"varint,14,opt,name=expired_time,json=expiredTime,proto3" json:"expired_time,omitempty"`
}

func (x *ConsentResponse) Reset() {
	*x = ConsentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zalokon_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConsentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConsentResponse) ProtoMessage() {}

func (x *ConsentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zalokon_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConsentResponse.ProtoReflect.Descriptor instead.
func (*ConsentResponse) Descriptor() ([]byte, []int) {
	return file_zalokon_proto_rawDescGZIP(), []int{5}
}

func (x *ConsentResponse) GetError() int32 {
	if x != nil {
		return x.Error
	}
	return 0
}

func (x *ConsentResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ConsentResponse) GetExpiredTime() int64 {
	if x != nil {
		return x.ExpiredTime
	}
	return 0
}

type Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error       int32         `protobuf:"varint,2,opt,name=error,proto3" json:"error,omitempty"`
	Message     string        `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data        *ResponseData `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	RefDoc      string        `protobuf:"bytes,5,opt,name=ref_doc,json=refDoc,proto3" json:"ref_doc,omitempty"`
	ErrorReason string        `protobuf:"bytes,6,opt,name=error_reason,json=errorReason,proto3" json:"error_reason,omitempty"`
	ErrorName   string        `protobuf:"bytes,7,opt,name=error_name,json=errorName,proto3" json:"error_name,omitempty"`
	// oauth
	AccessToken  string `protobuf:"bytes,8,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	TokenType    string `protobuf:"bytes,9,opt,name=token_type,json=tokenType,proto3" json:"token_type,omitempty"`
	ExpiresIn    string `protobuf:"bytes,10,opt,name=expires_in,json=expiresIn,proto3" json:"expires_in,omitempty"`
	RefreshToken string `protobuf:"bytes,11,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
}

func (x *Response) Reset() {
	*x = Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zalokon_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response) ProtoMessage() {}

func (x *Response) ProtoReflect() protoreflect.Message {
	mi := &file_zalokon_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response.ProtoReflect.Descriptor instead.
func (*Response) Descriptor() ([]byte, []int) {
	return file_zalokon_proto_rawDescGZIP(), []int{6}
}

func (x *Response) GetError() int32 {
	if x != nil {
		return x.Error
	}
	return 0
}

func (x *Response) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *Response) GetData() *ResponseData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *Response) GetRefDoc() string {
	if x != nil {
		return x.RefDoc
	}
	return ""
}

func (x *Response) GetErrorReason() string {
	if x != nil {
		return x.ErrorReason
	}
	return ""
}

func (x *Response) GetErrorName() string {
	if x != nil {
		return x.ErrorName
	}
	return ""
}

func (x *Response) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *Response) GetTokenType() string {
	if x != nil {
		return x.TokenType
	}
	return ""
}

func (x *Response) GetExpiresIn() string {
	if x != nil {
		return x.ExpiresIn
	}
	return ""
}

func (x *Response) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

type Info struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address  string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	Phone    int64  `protobuf:"varint,3,opt,name=phone,proto3" json:"phone,omitempty"`
	City     string `protobuf:"bytes,4,opt,name=city,proto3" json:"city,omitempty"`
	District string `protobuf:"bytes,5,opt,name=district,proto3" json:"district,omitempty"`
	Name     string `protobuf:"bytes,6,opt,name=name,proto3" json:"name,omitempty"`
	Ward     string `protobuf:"bytes,7,opt,name=ward,proto3" json:"ward,omitempty"`
}

func (x *Info) Reset() {
	*x = Info{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zalokon_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Info) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Info) ProtoMessage() {}

func (x *Info) ProtoReflect() protoreflect.Message {
	mi := &file_zalokon_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Info.ProtoReflect.Descriptor instead.
func (*Info) Descriptor() ([]byte, []int) {
	return file_zalokon_proto_rawDescGZIP(), []int{7}
}

func (x *Info) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *Info) GetPhone() int64 {
	if x != nil {
		return x.Phone
	}
	return 0
}

func (x *Info) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *Info) GetDistrict() string {
	if x != nil {
		return x.District
	}
	return ""
}

func (x *Info) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Info) GetWard() string {
	if x != nil {
		return x.Ward
	}
	return ""
}

type DefaultActionPayload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Url  string `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"` // string payload = 4;
}

func (x *DefaultActionPayload) Reset() {
	*x = DefaultActionPayload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zalokon_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DefaultActionPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DefaultActionPayload) ProtoMessage() {}

func (x *DefaultActionPayload) ProtoReflect() protoreflect.Message {
	mi := &file_zalokon_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DefaultActionPayload.ProtoReflect.Descriptor instead.
func (*DefaultActionPayload) Descriptor() ([]byte, []int) {
	return file_zalokon_proto_rawDescGZIP(), []int{8}
}

func (x *DefaultActionPayload) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *DefaultActionPayload) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type DefaultAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type    string                `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Payload *DefaultActionPayload `protobuf:"bytes,3,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *DefaultAction) Reset() {
	*x = DefaultAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zalokon_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DefaultAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DefaultAction) ProtoMessage() {}

func (x *DefaultAction) ProtoReflect() protoreflect.Message {
	mi := &file_zalokon_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DefaultAction.ProtoReflect.Descriptor instead.
func (*DefaultAction) Descriptor() ([]byte, []int) {
	return file_zalokon_proto_rawDescGZIP(), []int{9}
}

func (x *DefaultAction) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *DefaultAction) GetPayload() *DefaultActionPayload {
	if x != nil {
		return x.Payload
	}
	return nil
}

type TemplateElement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MediaType    string `protobuf:"bytes,2,opt,name=media_type,json=mediaType,proto3" json:"media_type,omitempty"`
	AttachmentId string `protobuf:"bytes,3,opt,name=attachment_id,json=attachmentId,proto3" json:"attachment_id,omitempty"`
	Title        string `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	Subtitle     string `protobuf:"bytes,5,opt,name=subtitle,proto3" json:"subtitle,omitempty"`
	ImageUrl     string `protobuf:"bytes,6,opt,name=image_url,json=imageUrl,proto3" json:"image_url,omitempty"`
	Width        int32  `protobuf:"varint,7,opt,name=width,proto3" json:"width,omitempty"`
	Height       int32  `protobuf:"varint,8,opt,name=height,proto3" json:"height,omitempty"`
}

func (x *TemplateElement) Reset() {
	*x = TemplateElement{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zalokon_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TemplateElement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TemplateElement) ProtoMessage() {}

func (x *TemplateElement) ProtoReflect() protoreflect.Message {
	mi := &file_zalokon_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TemplateElement.ProtoReflect.Descriptor instead.
func (*TemplateElement) Descriptor() ([]byte, []int) {
	return file_zalokon_proto_rawDescGZIP(), []int{10}
}

func (x *TemplateElement) GetMediaType() string {
	if x != nil {
		return x.MediaType
	}
	return ""
}

func (x *TemplateElement) GetAttachmentId() string {
	if x != nil {
		return x.AttachmentId
	}
	return ""
}

func (x *TemplateElement) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *TemplateElement) GetSubtitle() string {
	if x != nil {
		return x.Subtitle
	}
	return ""
}

func (x *TemplateElement) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

func (x *TemplateElement) GetWidth() int32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *TemplateElement) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

type AttachmentPayload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Thumbnail    string             `protobuf:"bytes,2,opt,name=thumbnail,proto3" json:"thumbnail,omitempty"`                            // image, video, link, gif
	Url          string             `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`                                        // image, file, sticker, video, audio, link, gif
	Size         string             `protobuf:"bytes,4,opt,name=size,proto3" json:"size,omitempty"`                                      // file
	Name         string             `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`                                      // file
	Checksum     string             `protobuf:"bytes,6,opt,name=checksum,proto3" json:"checksum,omitempty"`                              // file
	Type         string             `protobuf:"bytes,7,opt,name=type,proto3" json:"type,omitempty"`                                      // file: image, sticker, docx, pdf
	Id           string             `protobuf:"bytes,9,opt,name=id,proto3" json:"id,omitempty"`                                          // sticker
	Description  string             `protobuf:"bytes,10,opt,name=description,proto3" json:"description,omitempty"`                       // video, link
	Title        string             `protobuf:"bytes,11,opt,name=title,proto3" json:"title,omitempty"`                                   // link
	TemplateType string             `protobuf:"bytes,12,opt,name=template_type,json=templateType,proto3" json:"template_type,omitempty"` // template, request_user_info
	Elements     []*TemplateElement `protobuf:"bytes,13,rep,name=elements,proto3" json:"elements,omitempty"`                             // template
	Token        string             `protobuf:"bytes,14,opt,name=token,proto3" json:"token,omitempty"`                                   // upload file
	Buttons      []*Button          `protobuf:"bytes,15,rep,name=buttons,proto3" json:"buttons,omitempty"`
}

func (x *AttachmentPayload) Reset() {
	*x = AttachmentPayload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zalokon_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttachmentPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttachmentPayload) ProtoMessage() {}

func (x *AttachmentPayload) ProtoReflect() protoreflect.Message {
	mi := &file_zalokon_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttachmentPayload.ProtoReflect.Descriptor instead.
func (*AttachmentPayload) Descriptor() ([]byte, []int) {
	return file_zalokon_proto_rawDescGZIP(), []int{11}
}

func (x *AttachmentPayload) GetThumbnail() string {
	if x != nil {
		return x.Thumbnail
	}
	return ""
}

func (x *AttachmentPayload) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *AttachmentPayload) GetSize() string {
	if x != nil {
		return x.Size
	}
	return ""
}

func (x *AttachmentPayload) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AttachmentPayload) GetChecksum() string {
	if x != nil {
		return x.Checksum
	}
	return ""
}

func (x *AttachmentPayload) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *AttachmentPayload) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AttachmentPayload) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *AttachmentPayload) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *AttachmentPayload) GetTemplateType() string {
	if x != nil {
		return x.TemplateType
	}
	return ""
}

func (x *AttachmentPayload) GetElements() []*TemplateElement {
	if x != nil {
		return x.Elements
	}
	return nil
}

func (x *AttachmentPayload) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *AttachmentPayload) GetButtons() []*Button {
	if x != nil {
		return x.Buttons
	}
	return nil
}

type Button struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Type  string `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"` // string payload = 4; // no static structure, based on type field
}

func (x *Button) Reset() {
	*x = Button{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zalokon_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Button) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Button) ProtoMessage() {}

func (x *Button) ProtoReflect() protoreflect.Message {
	mi := &file_zalokon_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Button.ProtoReflect.Descriptor instead.
func (*Button) Descriptor() ([]byte, []int) {
	return file_zalokon_proto_rawDescGZIP(), []int{12}
}

func (x *Button) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Button) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type Attachment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type    string             `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"` // image, gif, link, audio, video, sticker, location, file, template
	Payload *AttachmentPayload `protobuf:"bytes,4,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *Attachment) Reset() {
	*x = Attachment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zalokon_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Attachment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Attachment) ProtoMessage() {}

func (x *Attachment) ProtoReflect() protoreflect.Message {
	mi := &file_zalokon_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Attachment.ProtoReflect.Descriptor instead.
func (*Attachment) Descriptor() ([]byte, []int) {
	return file_zalokon_proto_rawDescGZIP(), []int{13}
}

func (x *Attachment) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Attachment) GetPayload() *AttachmentPayload {
	if x != nil {
		return x.Payload
	}
	return nil
}

type Message struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text           string        `protobuf:"bytes,3,opt,name=text,proto3" json:"text,omitempty"`
	MsgId          string        `protobuf:"bytes,4,opt,name=msg_id,json=msgId,proto3" json:"msg_id,omitempty"`
	Payload        string        `protobuf:"bytes,5,opt,name=payload,proto3" json:"payload,omitempty"`
	Title          string        `protobuf:"bytes,9,opt,name=title,proto3" json:"title,omitempty"`
	MsgIds         []string      `protobuf:"bytes,6,rep,name=msg_ids,json=msgIds,proto3" json:"msg_ids,omitempty"`
	Attachments    []*Attachment `protobuf:"bytes,7,rep,name=attachments,proto3" json:"attachments,omitempty"`
	Attachment     *Attachment   `protobuf:"bytes,8,opt,name=attachment,proto3" json:"attachment,omitempty"`
	ConversationId string        `protobuf:"bytes,10,opt,name=conversation_id,json=conversationId,proto3" json:"conversation_id,omitempty"`
	QuoteMsgId     string        `protobuf:"bytes,12,opt,name=quote_msg_id,json=quoteMsgId,proto3" json:"quote_msg_id,omitempty"`
	DeliveryTime   string        `protobuf:"bytes,13,opt,name=delivery_time,json=deliveryTime,proto3" json:"delivery_time,omitempty"`
	TrackingId     string        `protobuf:"bytes,14,opt,name=tracking_id,json=trackingId,proto3" json:"tracking_id,omitempty"`
}

func (x *Message) Reset() {
	*x = Message{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zalokon_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_zalokon_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_zalokon_proto_rawDescGZIP(), []int{14}
}

func (x *Message) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *Message) GetMsgId() string {
	if x != nil {
		return x.MsgId
	}
	return ""
}

func (x *Message) GetPayload() string {
	if x != nil {
		return x.Payload
	}
	return ""
}

func (x *Message) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Message) GetMsgIds() []string {
	if x != nil {
		return x.MsgIds
	}
	return nil
}

func (x *Message) GetAttachments() []*Attachment {
	if x != nil {
		return x.Attachments
	}
	return nil
}

func (x *Message) GetAttachment() *Attachment {
	if x != nil {
		return x.Attachment
	}
	return nil
}

func (x *Message) GetConversationId() string {
	if x != nil {
		return x.ConversationId
	}
	return ""
}

func (x *Message) GetQuoteMsgId() string {
	if x != nil {
		return x.QuoteMsgId
	}
	return ""
}

func (x *Message) GetDeliveryTime() string {
	if x != nil {
		return x.DeliveryTime
	}
	return ""
}

func (x *Message) GetTrackingId() string {
	if x != nil {
		return x.TrackingId
	}
	return ""
}

// user_send_text: Người dùng gửi tin nhắn văn bản
// user_send_image: Người dùng gửi tin nhắn hình ảnh
// user_send_link: Người dùng gửi tin nhắn liên kết
// user_send_audio: Người dùng gửi tin nhắn âm thanh
// user_send_video: Người dùng gửi tin nhắn video
// user_send_sticker: Người dùng gửi tin nhắn sticker
// user_send_location: Người dùng gửi vị trí
// user_send_business_card: Người dùng gửi danh thiếp
// user_send_file: Người dùng gửi file
// oa_send_text: OA gửi tin nhắn văn bản
// oa_send_image: OA gửi tin nhắn hình ảnh
// oa_send_gif: OA gửi tin nhắn có ảnh gif
// oa_send_list: OA gửi tin nhắn tương tác
// oa_send_file: OA gửi tin nhắn đính kèm file
// user_received_message: người dùng nhận tin nhắn từ Official Account
// user_seen_message: người dùng xem tin nhắn từ Official Account
// change_template_status
type Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sender      *Sender     `protobuf:"bytes,2,opt,name=sender,proto3" json:"sender,omitempty"`
	Recipient   *Sender     `protobuf:"bytes,3,opt,name=recipient,proto3" json:"recipient,omitempty"`
	EventName   string      `protobuf:"bytes,4,opt,name=event_name,json=eventName,proto3" json:"event_name,omitempty"`
	AppId       string      `protobuf:"bytes,5,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	Timestamp   string      `protobuf:"bytes,6,opt,name=timestamp,proto3" json:"timestamp,omitempty"` // 1724921480327
	UserIdByApp string      `protobuf:"bytes,8,opt,name=user_id_by_app,json=userIdByApp,proto3" json:"user_id_by_app,omitempty"`
	Info        *Info       `protobuf:"bytes,9,opt,name=info,proto3" json:"info,omitempty"`
	Message     *Message    `protobuf:"bytes,10,opt,name=message,proto3" json:"message,omitempty"`
	ReorderId   string      `protobuf:"bytes,11,opt,name=reorder_id,json=reorderId,proto3" json:"reorder_id,omitempty"`
	Follower    *ZlFollower `protobuf:"bytes,12,opt,name=follower,proto3" json:"follower,omitempty"`
	Source      string      `protobuf:"bytes,13,opt,name=source,proto3" json:"source,omitempty"`
	OaId        string      `protobuf:"bytes,14,opt,name=oa_id,json=oaId,proto3" json:"oa_id,omitempty"`
	Phone       string      `protobuf:"bytes,15,opt,name=phone,proto3" json:"phone,omitempty"`
	UserConsent string      `protobuf:"bytes,16,opt,name=user_consent,json=userConsent,proto3" json:"user_consent,omitempty"`
	// string confirmed_time = 17;
	ExpiredTime string             `protobuf:"bytes,18,opt,name=expired_time,json=expiredTime,proto3" json:"expired_time,omitempty"`
	RequestType string             `protobuf:"bytes,19,opt,name=request_type,json=requestType,proto3" json:"request_type,omitempty"`
	CreateTime  string             `protobuf:"bytes,20,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	TemplateId  string             `protobuf:"bytes,21,opt,name=template_id,json=templateId,proto3" json:"template_id,omitempty"`
	Status      *ZNSTemplateStatus `protobuf:"bytes,22,opt,name=status,proto3" json:"status,omitempty"`
	Reason      string             `protobuf:"bytes,23,opt,name=reason,proto3" json:"reason,omitempty"`
}

func (x *Request) Reset() {
	*x = Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zalokon_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Request) ProtoMessage() {}

func (x *Request) ProtoReflect() protoreflect.Message {
	mi := &file_zalokon_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Request.ProtoReflect.Descriptor instead.
func (*Request) Descriptor() ([]byte, []int) {
	return file_zalokon_proto_rawDescGZIP(), []int{15}
}

func (x *Request) GetSender() *Sender {
	if x != nil {
		return x.Sender
	}
	return nil
}

func (x *Request) GetRecipient() *Sender {
	if x != nil {
		return x.Recipient
	}
	return nil
}

func (x *Request) GetEventName() string {
	if x != nil {
		return x.EventName
	}
	return ""
}

func (x *Request) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *Request) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *Request) GetUserIdByApp() string {
	if x != nil {
		return x.UserIdByApp
	}
	return ""
}

func (x *Request) GetInfo() *Info {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *Request) GetMessage() *Message {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *Request) GetReorderId() string {
	if x != nil {
		return x.ReorderId
	}
	return ""
}

func (x *Request) GetFollower() *ZlFollower {
	if x != nil {
		return x.Follower
	}
	return nil
}

func (x *Request) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *Request) GetOaId() string {
	if x != nil {
		return x.OaId
	}
	return ""
}

func (x *Request) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *Request) GetUserConsent() string {
	if x != nil {
		return x.UserConsent
	}
	return ""
}

func (x *Request) GetExpiredTime() string {
	if x != nil {
		return x.ExpiredTime
	}
	return ""
}

func (x *Request) GetRequestType() string {
	if x != nil {
		return x.RequestType
	}
	return ""
}

func (x *Request) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *Request) GetTemplateId() string {
	if x != nil {
		return x.TemplateId
	}
	return ""
}

func (x *Request) GetStatus() *ZNSTemplateStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *Request) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type ZNSTemplateStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PrevStatus string `protobuf:"bytes,4,opt,name=prev_status,json=prevStatus,proto3" json:"prev_status,omitempty"`
	NewStatus  string `protobuf:"bytes,5,opt,name=new_status,json=newStatus,proto3" json:"new_status,omitempty"`
}

func (x *ZNSTemplateStatus) Reset() {
	*x = ZNSTemplateStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zalokon_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ZNSTemplateStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZNSTemplateStatus) ProtoMessage() {}

func (x *ZNSTemplateStatus) ProtoReflect() protoreflect.Message {
	mi := &file_zalokon_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZNSTemplateStatus.ProtoReflect.Descriptor instead.
func (*ZNSTemplateStatus) Descriptor() ([]byte, []int) {
	return file_zalokon_proto_rawDescGZIP(), []int{16}
}

func (x *ZNSTemplateStatus) GetPrevStatus() string {
	if x != nil {
		return x.PrevStatus
	}
	return ""
}

func (x *ZNSTemplateStatus) GetNewStatus() string {
	if x != nil {
		return x.NewStatus
	}
	return ""
}

type ZlFollower struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ZlFollower) Reset() {
	*x = ZlFollower{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zalokon_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ZlFollower) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZlFollower) ProtoMessage() {}

func (x *ZlFollower) ProtoReflect() protoreflect.Message {
	mi := &file_zalokon_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZlFollower.ProtoReflect.Descriptor instead.
func (*ZlFollower) Descriptor() ([]byte, []int) {
	return file_zalokon_proto_rawDescGZIP(), []int{17}
}

func (x *ZlFollower) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type Sender struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	UserId    string `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	MessageId string `protobuf:"bytes,4,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	GroupId   string `protobuf:"bytes,5,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
}

func (x *Sender) Reset() {
	*x = Sender{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zalokon_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Sender) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sender) ProtoMessage() {}

func (x *Sender) ProtoReflect() protoreflect.Message {
	mi := &file_zalokon_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sender.ProtoReflect.Descriptor instead.
func (*Sender) Descriptor() ([]byte, []int) {
	return file_zalokon_proto_rawDescGZIP(), []int{18}
}

func (x *Sender) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Sender) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Sender) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

func (x *Sender) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

type Zl2SbEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Zlmid          string `protobuf:"bytes,2,opt,name=zlmid,proto3" json:"zlmid,omitempty"`
	AccountId      string `protobuf:"bytes,3,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	ConversationId string `protobuf:"bytes,4,opt,name=conversation_id,json=conversationId,proto3" json:"conversation_id,omitempty"`
	Sbmid          string `protobuf:"bytes,5,opt,name=sbmid,proto3" json:"sbmid,omitempty"`
	OaId           int64  `protobuf:"varint,6,opt,name=oa_id,json=oaId,proto3" json:"oa_id,omitempty"`
}

func (x *Zl2SbEvent) Reset() {
	*x = Zl2SbEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zalokon_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Zl2SbEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Zl2SbEvent) ProtoMessage() {}

func (x *Zl2SbEvent) ProtoReflect() protoreflect.Message {
	mi := &file_zalokon_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Zl2SbEvent.ProtoReflect.Descriptor instead.
func (*Zl2SbEvent) Descriptor() ([]byte, []int) {
	return file_zalokon_proto_rawDescGZIP(), []int{19}
}

func (x *Zl2SbEvent) GetZlmid() string {
	if x != nil {
		return x.Zlmid
	}
	return ""
}

func (x *Zl2SbEvent) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *Zl2SbEvent) GetConversationId() string {
	if x != nil {
		return x.ConversationId
	}
	return ""
}

func (x *Zl2SbEvent) GetSbmid() string {
	if x != nil {
		return x.Sbmid
	}
	return ""
}

func (x *Zl2SbEvent) GetOaId() int64 {
	if x != nil {
		return x.OaId
	}
	return 0
}

type ResponseQuota struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total  int64  `protobuf:"varint,8,opt,name=total,proto3" json:"total,omitempty"`
	Remain int64  `protobuf:"varint,9,opt,name=remain,proto3" json:"remain,omitempty"`
	Type   string `protobuf:"bytes,10,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *ResponseQuota) Reset() {
	*x = ResponseQuota{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zalokon_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseQuota) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseQuota) ProtoMessage() {}

func (x *ResponseQuota) ProtoReflect() protoreflect.Message {
	mi := &file_zalokon_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseQuota.ProtoReflect.Descriptor instead.
func (*ResponseQuota) Descriptor() ([]byte, []int) {
	return file_zalokon_proto_rawDescGZIP(), []int{20}
}

func (x *ResponseQuota) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ResponseQuota) GetRemain() int64 {
	if x != nil {
		return x.Remain
	}
	return 0
}

func (x *ResponseQuota) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

var File_zalokon_proto protoreflect.FileDescriptor

var file_zalokon_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x7a, 0x61, 0x6c, 0x6f, 0x6b, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x07, 0x7a, 0x61, 0x6c, 0x6f, 0x6b, 0x6f, 0x6e, 0x22, 0xce, 0x07, 0x0a, 0x0f, 0x4f, 0x66, 0x66,
	0x69, 0x63, 0x69, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x13, 0x0a, 0x05,
	0x6f, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6f, 0x61, 0x49,
	0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12,
	0x14, 0x0a, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x63, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x75, 0x74, 0x68,
	0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x61, 0x75,
	0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x09, 0x73, 0x74, 0x72, 0x5f, 0x6f,
	0x61, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x74, 0x72, 0x4f,
	0x61, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x7a, 0x61, 0x6c, 0x6f,
	0x5f, 0x68, 0x6f, 0x6f, 0x6b, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x6c, 0x61, 0x73,
	0x74, 0x5a, 0x61, 0x6c, 0x6f, 0x48, 0x6f, 0x6f, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x31, 0x0a, 0x15, 0x6c, 0x61, 0x73,
	0x74, 0x5f, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f,
	0x61, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x12, 0x6c, 0x61, 0x73, 0x74, 0x52, 0x65,
	0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x41, 0x74, 0x12, 0x23, 0x0a, 0x0d,
	0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x64,
	0x18, 0x11, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6c, 0x61, 0x73, 0x74, 0x43, 0x61, 0x6c, 0x6c,
	0x65, 0x64, 0x12, 0x3c, 0x0a, 0x1b, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x66, 0x72, 0x65,
	0x73, 0x68, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x61,
	0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x03, 0x52, 0x17, 0x6c, 0x61, 0x73, 0x74, 0x52, 0x65, 0x66,
	0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x41, 0x74,
	0x12, 0x35, 0x0a, 0x17, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x13, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x14, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x45, 0x78,
	0x70, 0x69, 0x72, 0x65, 0x64, 0x41, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x6f, 0x61, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6f, 0x61, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18,
	0x15, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65,
	0x64, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x61, 0x5f, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x16, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x61, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x12, 0x1b, 0x0a, 0x09,
	0x63, 0x61, 0x74, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x63, 0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6e, 0x75, 0x6d,
	0x5f, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x18, 0x18, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0b, 0x6e, 0x75, 0x6d, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c,
	0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x19, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x3b, 0x0a, 0x1a, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x5f, 0x74, 0x68, 0x72, 0x6f, 0x75, 0x67, 0x68, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x1a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x17, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x56, 0x61, 0x6c, 0x69,
	0x64, 0x54, 0x68, 0x72, 0x6f, 0x75, 0x67, 0x68, 0x44, 0x61, 0x74, 0x65, 0x12, 0x35, 0x0a, 0x17,
	0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x5f, 0x61, 0x75, 0x74, 0x6f, 0x5f, 0x72, 0x65, 0x6e,
	0x65, 0x77, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x70,
	0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x41, 0x75, 0x74, 0x6f, 0x52, 0x65, 0x6e, 0x65, 0x77, 0x44,
	0x61, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x5a, 0x43, 0x41,
	0x18, 0x1c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x5a, 0x43,
	0x41, 0x12, 0x36, 0x0a, 0x17, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x1d, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x15, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c,
	0x69, 0x6e, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xe9, 0x02, 0x0a, 0x08, 0x5a, 0x61,
	0x6c, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x67,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x75, 0x73, 0x65,
	0x72, 0x47, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70,
	0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x62,
	0x69, 0x72, 0x74, 0x68, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x62, 0x69, 0x72, 0x74, 0x68, 0x44, 0x61, 0x74, 0x65, 0x12, 0x2e, 0x0a, 0x0b, 0x73, 0x68,
	0x61, 0x72, 0x65, 0x64, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x7a, 0x61, 0x6c, 0x6f, 0x6b, 0x6f, 0x6e, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a,
	0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x38, 0x0a, 0x07, 0x61, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x7a, 0x61,
	0x6c, 0x6f, 0x6b, 0x6f, 0x6e, 0x2e, 0x5a, 0x61, 0x6c, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x2e, 0x41,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x61, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x73, 0x12, 0x23, 0x0a, 0x0e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x5f,
	0x62, 0x79, 0x5f, 0x61, 0x70, 0x70, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x42, 0x79, 0x41, 0x70, 0x70, 0x1a, 0x3a, 0x0a, 0x0c, 0x41, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x69, 0x0a, 0x10, 0x5a, 0x61, 0x6c, 0x6f, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x25, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x7a, 0x61, 0x6c, 0x6f, 0x6b, 0x6f,
	0x6e, 0x2e, 0x5a, 0x61, 0x6c, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x22, 0x76, 0x0a, 0x16, 0x4f, 0x66, 0x66, 0x69, 0x63, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2c, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x7a, 0x61, 0x6c, 0x6f, 0x6b,
	0x6f, 0x6e, 0x2e, 0x4f, 0x66, 0x66, 0x69, 0x63, 0x69, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xb0, 0x03, 0x0a, 0x0c, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x23,
	0x0a, 0x0d, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x05,
	0x71, 0x75, 0x6f, 0x74, 0x61, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x7a, 0x61,
	0x6c, 0x6f, 0x6b, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x51, 0x75,
	0x6f, 0x74, 0x61, 0x52, 0x05, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x65,
	0x64, 0x69, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x64, 0x69, 0x61, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x74,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0c, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x74, 0x61, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72,
	0x65, 0x76, 0x69, 0x65, 0x77, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x70, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x55, 0x72, 0x6c, 0x22, 0x64, 0x0a, 0x0f, 0x43,
	0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x21,
	0x0a, 0x0c, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x54, 0x69, 0x6d,
	0x65, 0x22, 0xc6, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x29,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x7a,
	0x61, 0x6c, 0x6f, 0x6b, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x65, 0x66,
	0x5f, 0x64, 0x6f, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x66, 0x44,
	0x6f, 0x63, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x72, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x52,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65,
	0x73, 0x5f, 0x69, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x78, 0x70, 0x69,
	0x72, 0x65, 0x73, 0x49, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68,
	0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65,
	0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x8e, 0x01, 0x0a, 0x04, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x70, 0x68,
	0x6f, 0x6e, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x74, 0x72,
	0x69, 0x63, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x69, 0x73, 0x74, 0x72,
	0x69, 0x63, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x77, 0x61, 0x72, 0x64, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x77, 0x61, 0x72, 0x64, 0x22, 0x3c, 0x0a, 0x14, 0x44,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0x5c, 0x0a, 0x0d, 0x44, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x37,
	0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x7a, 0x61, 0x6c, 0x6f, 0x6b, 0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x07,
	0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0xd2, 0x01, 0x0a, 0x0f, 0x54, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6d,
	0x65, 0x64, 0x69, 0x61, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x54, 0x79, 0x70, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x74,
	0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x14,
	0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x77,
	0x69, 0x64, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0xff, 0x02, 0x0a,
	0x11, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75,
	0x72, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x68,
	0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x68,
	0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x34, 0x0a, 0x08, 0x65, 0x6c, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x7a, 0x61, 0x6c, 0x6f,
	0x6b, 0x6f, 0x6e, 0x2e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x45, 0x6c, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x08, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x12, 0x29, 0x0a, 0x07, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x73, 0x18, 0x0f,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x7a, 0x61, 0x6c, 0x6f, 0x6b, 0x6f, 0x6e, 0x2e, 0x42,
	0x75, 0x74, 0x74, 0x6f, 0x6e, 0x52, 0x07, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x73, 0x22, 0x32,
	0x0a, 0x06, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x22, 0x56, 0x0a, 0x0a, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x34, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x7a, 0x61, 0x6c, 0x6f, 0x6b, 0x6f, 0x6e, 0x2e,
	0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61,
	0x64, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0xfa, 0x02, 0x0a, 0x07, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x6d, 0x73,
	0x67, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x73, 0x67, 0x49,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x17, 0x0a, 0x07, 0x6d, 0x73, 0x67, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x06, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x06, 0x6d, 0x73, 0x67, 0x49, 0x64, 0x73, 0x12, 0x35, 0x0a, 0x0b, 0x61, 0x74,
	0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x7a, 0x61, 0x6c, 0x6f, 0x6b, 0x6f, 0x6e, 0x2e, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0b, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x12, 0x33, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x7a, 0x61, 0x6c, 0x6f, 0x6b, 0x6f, 0x6e, 0x2e,
	0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x61,
	0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72,
	0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12,
	0x20, 0x0a, 0x0c, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x5f, 0x6d, 0x73, 0x67, 0x5f, 0x69, 0x64, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x4d, 0x73, 0x67, 0x49,
	0x64, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65,
	0x72, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69,
	0x6e, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x72, 0x61,
	0x63, 0x6b, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x22, 0xb3, 0x05, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x7a, 0x61, 0x6c, 0x6f, 0x6b, 0x6f, 0x6e, 0x2e, 0x53, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x2d, 0x0a, 0x09,
	0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x7a, 0x61, 0x6c, 0x6f, 0x6b, 0x6f, 0x6e, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x52, 0x09, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70,
	0x70, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49,
	0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12,
	0x23, 0x0a, 0x0e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x5f, 0x62, 0x79, 0x5f, 0x61, 0x70,
	0x70, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x42,
	0x79, 0x41, 0x70, 0x70, 0x12, 0x21, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x7a, 0x61, 0x6c, 0x6f, 0x6b, 0x6f, 0x6e, 0x2e, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x2a, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x7a, 0x61, 0x6c, 0x6f, 0x6b,
	0x6f, 0x6e, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x2f, 0x0a, 0x08, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x7a, 0x61, 0x6c, 0x6f, 0x6b, 0x6f, 0x6e, 0x2e, 0x5a,
	0x6c, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x52, 0x08, 0x66, 0x6f, 0x6c, 0x6c, 0x6f,
	0x77, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x13, 0x0a, 0x05, 0x6f,
	0x61, 0x5f, 0x69, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6f, 0x61, 0x49, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x63,
	0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x75, 0x73,
	0x65, 0x72, 0x43, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x78, 0x70,
	0x69, 0x72, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x13, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x14,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49,
	0x64, 0x12, 0x32, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x16, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x7a, 0x61, 0x6c, 0x6f, 0x6b, 0x6f, 0x6e, 0x2e, 0x5a, 0x4e, 0x53, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18,
	0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0x53, 0x0a,
	0x11, 0x5a, 0x4e, 0x53, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x65, 0x76, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x65, 0x76, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x6e, 0x65, 0x77, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x65, 0x77, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x22, 0x1c, 0x0a, 0x0a, 0x5a, 0x6c, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x72,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x22, 0x6b, 0x0a, 0x06, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x22, 0x95, 0x01,
	0x0a, 0x0a, 0x5a, 0x6c, 0x32, 0x53, 0x62, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x7a, 0x6c, 0x6d, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x7a, 0x6c, 0x6d,
	0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x76,
	0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x62,
	0x6d, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x62, 0x6d, 0x69, 0x64,
	0x12, 0x13, 0x0a, 0x05, 0x6f, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x04, 0x6f, 0x61, 0x49, 0x64, 0x22, 0x51, 0x0a, 0x0d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x65,
	0x6d, 0x61, 0x69, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x42, 0x21, 0x5a, 0x1f, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x75, 0x62, 0x69, 0x7a, 0x2f, 0x68, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x2f, 0x7a, 0x61, 0x6c, 0x6f, 0x6b, 0x6f, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_zalokon_proto_rawDescOnce sync.Once
	file_zalokon_proto_rawDescData = file_zalokon_proto_rawDesc
)

func file_zalokon_proto_rawDescGZIP() []byte {
	file_zalokon_proto_rawDescOnce.Do(func() {
		file_zalokon_proto_rawDescData = protoimpl.X.CompressGZIP(file_zalokon_proto_rawDescData)
	})
	return file_zalokon_proto_rawDescData
}

var file_zalokon_proto_msgTypes = make([]protoimpl.MessageInfo, 22)
var file_zalokon_proto_goTypes = []interface{}{
	(*OfficialAccount)(nil),        // 0: zalokon.OfficialAccount
	(*ZaloUser)(nil),               // 1: zalokon.ZaloUser
	(*ZaloUserResponse)(nil),       // 2: zalokon.ZaloUserResponse
	(*OfficalAccountResponse)(nil), // 3: zalokon.OfficalAccountResponse
	(*ResponseData)(nil),           // 4: zalokon.ResponseData
	(*ConsentResponse)(nil),        // 5: zalokon.ConsentResponse
	(*Response)(nil),               // 6: zalokon.Response
	(*Info)(nil),                   // 7: zalokon.Info
	(*DefaultActionPayload)(nil),   // 8: zalokon.DefaultActionPayload
	(*DefaultAction)(nil),          // 9: zalokon.DefaultAction
	(*TemplateElement)(nil),        // 10: zalokon.TemplateElement
	(*AttachmentPayload)(nil),      // 11: zalokon.AttachmentPayload
	(*Button)(nil),                 // 12: zalokon.Button
	(*Attachment)(nil),             // 13: zalokon.Attachment
	(*Message)(nil),                // 14: zalokon.Message
	(*Request)(nil),                // 15: zalokon.Request
	(*ZNSTemplateStatus)(nil),      // 16: zalokon.ZNSTemplateStatus
	(*ZlFollower)(nil),             // 17: zalokon.ZlFollower
	(*Sender)(nil),                 // 18: zalokon.Sender
	(*Zl2SbEvent)(nil),             // 19: zalokon.Zl2SbEvent
	(*ResponseQuota)(nil),          // 20: zalokon.ResponseQuota
	nil,                            // 21: zalokon.ZaloUser.AvatarsEntry
}
var file_zalokon_proto_depIdxs = []int32{
	7,  // 0: zalokon.ZaloUser.shared_info:type_name -> zalokon.Info
	21, // 1: zalokon.ZaloUser.avatars:type_name -> zalokon.ZaloUser.AvatarsEntry
	1,  // 2: zalokon.ZaloUserResponse.data:type_name -> zalokon.ZaloUser
	0,  // 3: zalokon.OfficalAccountResponse.data:type_name -> zalokon.OfficialAccount
	20, // 4: zalokon.ResponseData.quota:type_name -> zalokon.ResponseQuota
	4,  // 5: zalokon.Response.data:type_name -> zalokon.ResponseData
	8,  // 6: zalokon.DefaultAction.payload:type_name -> zalokon.DefaultActionPayload
	10, // 7: zalokon.AttachmentPayload.elements:type_name -> zalokon.TemplateElement
	12, // 8: zalokon.AttachmentPayload.buttons:type_name -> zalokon.Button
	11, // 9: zalokon.Attachment.payload:type_name -> zalokon.AttachmentPayload
	13, // 10: zalokon.Message.attachments:type_name -> zalokon.Attachment
	13, // 11: zalokon.Message.attachment:type_name -> zalokon.Attachment
	18, // 12: zalokon.Request.sender:type_name -> zalokon.Sender
	18, // 13: zalokon.Request.recipient:type_name -> zalokon.Sender
	7,  // 14: zalokon.Request.info:type_name -> zalokon.Info
	14, // 15: zalokon.Request.message:type_name -> zalokon.Message
	17, // 16: zalokon.Request.follower:type_name -> zalokon.ZlFollower
	16, // 17: zalokon.Request.status:type_name -> zalokon.ZNSTemplateStatus
	18, // [18:18] is the sub-list for method output_type
	18, // [18:18] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_zalokon_proto_init() }
func file_zalokon_proto_init() {
	if File_zalokon_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_zalokon_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OfficialAccount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zalokon_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ZaloUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zalokon_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ZaloUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zalokon_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OfficalAccountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zalokon_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zalokon_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConsentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zalokon_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zalokon_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Info); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zalokon_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DefaultActionPayload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zalokon_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DefaultAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zalokon_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TemplateElement); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zalokon_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AttachmentPayload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zalokon_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Button); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zalokon_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Attachment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zalokon_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zalokon_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zalokon_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ZNSTemplateStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zalokon_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ZlFollower); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zalokon_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Sender); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zalokon_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Zl2SbEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zalokon_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseQuota); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_zalokon_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   22,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_zalokon_proto_goTypes,
		DependencyIndexes: file_zalokon_proto_depIdxs,
		MessageInfos:      file_zalokon_proto_msgTypes,
	}.Build()
	File_zalokon_proto = out.File
	file_zalokon_proto_rawDesc = nil
	file_zalokon_proto_goTypes = nil
	file_zalokon_proto_depIdxs = nil
}
